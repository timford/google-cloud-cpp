[33mcommit e60c67ae5b3aa4dc725cab9adc8ac211b34af85c[m[33m ([m[1;36mHEAD[m[33m, [m[1;33mtag: v0.15.0[m[33m, [m[1;31morigin/v0.15.x[m[33m)[m
Author: Scott Hart <sdhart@google.com>
Date:   Tue Nov 5 14:20:34 2019 -0500

    chore: update README files (#3251)
    
    * chore: update README files

[33mcommit 5a0ba6bef069b7abfb2c19bccdf737b104b95504[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Tue Nov 5 10:14:09 2019 -0500

    chore: reformat for 80 columns; fix spacing (#3250)
    
    * chore: reformat for 80 columns; fix spacing
    
    shell style guide specifies 80 columns
    
    since `echo` adds spaces between its arguments the line that was already
    split resulted in an extra space:
    
    `Verify installed headers created only  expected directories.`

[33mcommit 5f33e4af507c6f26fc9b16644c4e816225ba5ea6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 4 17:07:04 2019 -0500

    ci: generate files in ci/kokoro/install (#3249)
    
    All the files except Dockerfile.ubuntu-trusty are automatically
    generated. This exception is caused by the complexity of building
    libcurl and gRPC with the same underlying OpenSSL library on this
    particular platform.

[33mcommit 286c91fd37273d4168e8fcdba32631f831f53fe9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 4 12:51:51 2019 -0500

    ci: remove submodule builds (#3246)
    
    Submodules are difficult to support, and probably not a best practice,
    as the target names must remain different from all the targets that the
    user might define (CMake has a global namespace for targets).

[33mcommit 3b8ad444339a07bf5bfd024d98c615aaf688af51[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Nov 3 14:47:02 2019 -0500

    ci: upgrade builds to use Bazel 1.0 (#3248)
    
    Also upgrade Bazel for this repository. Mostly this entails upgrading
    several dependencies (notably gRPC). There are a couple of new
    warnings in the Bazel build, I think those should be fixed in a
    separate PR.

[33mcommit 656ffeb54a947957ebd03cfd19ff76ce9f77989b[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Nov 1 22:50:54 2019 +0100

    feat: implement `ComposeMany` (#3239)
    
    This fixes #3016.

[33mcommit 1042627ef77e46e21d7d0e947c45514c4f4e54ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 31 15:40:11 2019 -0400

    ci: run test install programs in CI builds (#3245)
    
    The CI builds to verify our install instructions work compile a couple
    of test programs against the installed code. The programs were not
    executed though. This PR proposes to run the tests as part of these CI
    builds, note that these run against the production environment.

[33mcommit 3b0f53385552d96a8c435c8c7d4839306f3cb8ff[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 31 13:16:12 2019 -0400

    ci: automatically generate ci/kokoro/readme (#3241)

[33mcommit 7f0742078e7b2d2f386b55fe592ab2a042891ca2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 31 13:15:26 2019 -0400

    doc: fix generator for INSTALL.md (#3243)
    
    It was referring to the old build names for centos-7, ubuntu-bionic,
    opensuse-tumbleweed, and debian-stretch.

[33mcommit f8f648eef5ffa582c74bd1f383733abd4d783cb8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 30 19:29:14 2019 -0400

    ci: improve define-docker-variables.sh (#3240)
    
    Use a fuller version that (like we do in other repositories) defines the
    Docker image for the ci/kokoro/{readme,install,docker} builds. Use the
    new variables in the CI scripts.

[33mcommit 58e5786b167efe7459b3d15dabf09dc5627ca1b9[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Oct 30 21:16:19 2019 +0100

    feat: implement deleting objects by prefix (#3235)
    
    This is a part of #3016.
    
    It basically lists the objects and deletes them one-by-one.

[33mcommit cdae5a27fee58d6e324561ee1f17694ea1aa3f98[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 30 16:03:51 2019 -0400

    ci: configuration files for CI generators (#3236)

[33mcommit 1071835e230f84a1ab9aeb674df895e5af47d795[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 30 13:49:57 2019 -0400

    ci: normalize docker variables script path (#3234)
    
    The other repositories are using ci/kokoro/define-docker-variables.sh,
    we want the same location so we can better share and/or generate the CI
    scripts.

[33mcommit a85bdab1a4e5f4673d9664b722c632b52bc04f30[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Oct 30 13:20:29 2019 +0100

    feat: implement tuple filtering (#3221)
    
    * feat: implement tuple filtering
    
    This is a part of #3016.
    
    Composing GCS objects consists of multiple operations under the hood.
    Different subsets of the options passed to the recursive compose
    operation have to be passed on to the underlying operations.
    
    By GCS C++ client convention, options are passed as parameter packs,
    hence in the general case the filtering has to be done in compile time.
    
    An easy way to filter these parameters is to pack them in a
    std::tuple, filter it and apply it via std::apply.
    
    * fix: workaround g++-4.8 segmentation fault
    
    * doc: fix comment typo
    
    * fix: fix forwarding references
    
    * fix: StaticTupleFilter accepts tuple as lvalues
    
    Missing `std::decay`s caause `StaticTupleFilter` to fail on tuples
    passed as l-values.

[33mcommit 052687763fb8b8a32868d60298f8bb58e7f06211[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Oct 29 22:13:36 2019 +0100

    fix: make sure ARGs are visible in Dockerfiles (#3233)
    
    Whenever a `FROM` directive appears in a Dockerfile, all `ARG`s need to
    be redeclared. Otherwise, they won't be propagated to the environment of
    the executed commands.
    
    For example, this problem affected `NCPU` in
    `Dockerfile.ubuntu-install`, which yielded running `make -j`, which
    means unbound concurrency, which made 32G not enough to compile gRPC.
    
    I believe this is why this image is not being built and its old, cached
    incarnation is being used in #3221, which leads to compilation errors.
    
    Bigtable API expectations were bumped too, because updated gRPC has some differently named symbols.

[33mcommit 32c559ac163fae51ae1de23dd89225a726da9746[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 29 09:53:51 2019 -0400

    ci: remove unused Dockerfiles (#3232)
    
    Missed these in a previous pass cleaning up things.

[33mcommit 5d0c30707f0bee3e9913ea043b67f41e607f7e7d[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Oct 29 09:50:31 2019 +0100

    chore: bump google-cloud-cpp-common to v0.16.0 (#3231)

[33mcommit fad025b7b421c9afbbacedbb8cb1415fd745025f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 28 16:31:33 2019 -0400

    ci: remove builds with non-standard names (#3230)
    
    Now that the builds are removed from the Kokoro configuration we can
    also remove them from GitHub.

[33mcommit 6ee394a58030d4ab0e5fc4a5c7596317c09eb643[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 28 10:44:38 2019 -0400

    ci: normalize build names (#3227)
    
    As the first step to automatically generate ci/kokoro/{install,readme}
    we need to change the names of several builds. This is done in several
    steps: (1) add the builds with the new names to GitHub, (2) enable the
    builds inside the Google systems, (3) disable the old builds inside the
    Google systems (maybe atomically with 2), and (4) remove the old builds.
    Because the changes happen in two separate SCMs they cannot be done
    atomically.

[33mcommit e8c77d1bba079a390494ea1db394066c8b34afdf[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sun Oct 27 08:20:00 2019 +0530

    feat: support uniform bucket level access (#3186)

[33mcommit 582d90c47ffa8b377c48f5354f8d05e450e719ef[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 25 18:03:27 2019 -0400

    doc: fix CentOS 7 build instructions (#3226)
    
    The CentOS instructions did not quite work out of the box. The main
    problem was using `LD_LIBRARY_PATH` and `sudo`, the latter unsets the
    environment variables. The gRPC and googleapis build need tools
    installed in `/usr/local/` with shared libraries in that directory. One
    fix for that is to make ld.so search `/usr/local/lib{,64}/` by default.
    These directories will be needed anyway, our libraries (and our
    dependencies), install .so's there.
    
    There were other minor problems, like missing `sudo` in some of the
    commands that need root privileges.
    
    Finally, I changed the Dockerfile to create fewer layers (see #3224),
    otherwise I could not iterate quickly on my workstation. I just worked
    around the issue by issuing multiple commands in each `RUN` line.

[33mcommit 503c6898212067f735bd688af7dda46fb5941500[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 25 11:23:34 2019 -0400

    chore: speed up packaging builds (#3220)
    
    The builds always required google test and the testing library
    from `google-cloud-cpp-common`, even when the tests were
    disabled. I noticed this while fixing the benchmarks Dockerfile.

[33mcommit e98225f15cbef73a66cd199d6fe778f1abbff5ad[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Oct 24 22:10:14 2019 +0200

    chore: bump google-cloud-cpp-common to 0.15 (#3219)
    
    This is required for #3016.

[33mcommit 4ea87f80bcb9b0fca7f5595bafeaac44db07297f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 24 12:23:34 2019 -0400

    chore: update the INSTALL.md file (#3218)
    
    Evidently we (meaning I) made multiple changes to the installation
    requirements and neglected to update the INSTALL.md file.

[33mcommit 27a726caed79ded65204db98a66f51fea8ffdf6d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 24 08:34:41 2019 -0400

    doc: fix cut&paste error in CMake instructions (#3216)

[33mcommit 597a71c37c1817a7fa98cd081dd3e487328f0345[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 24 08:27:50 2019 -0400

    chore: upgrade most builds to gRPC-1.24.3 (#3217)
    
    Upgrade the Bazel and CMake super builds to gRPC-1.24.3. Did not update
    all the builds because that requires more changes (upgrading Protobuf
    for example). This fixes the build problems on openSUSE/Tumbleweed.
    
    I had to make a code change because, depending on the Protobuf version,
    the `GetReflection()` function generated in a proto may be static or
    not. clang-tidy generates a warning when the function is static and we
    use it as a non-static member function. The code does not compile when
    used as a static member function.

[33mcommit 9018cf2199a6f3cad68552e4b5849918e93f6502[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 23 13:16:05 2019 -0400

    bug: use separate policy instances for each UploadChunk request (#3213)
    
    Sharing the retry policy through the lifetime of an upload is a bad idea.
    Long lived uploads just fail because they started a long time ago, even
    if there have been no errors. We need to use a new instance of the
    retry policy for each `UploadChunk()` call, but share them with the
    `ResetSession()` calls because these are part of the same logical
    operation.

[33mcommit 31a4aca016dfc165cfb0bf1c4f3827fc5932c3d1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 22 14:49:35 2019 -0400

    chore: upgrade cmake-format (#3211)
    
    Upgrade cmake-format to the latest release (0.6.0), I am planning to
    update the other repositories too.

[33mcommit 5ea0d82612fbb8bdd3228752fe36c6c8bf2a91d3[m
Author: Patrick Wrobel <craptik@gmail.com>
Date:   Mon Oct 21 15:18:02 2019 -0400

    bug: pass along error message in Table::Apply retry loop (googleapis#3191) (#3208)

[33mcommit cf08f0511454862a7bfeeca9d89862a4ed198f48[m
Author: Aryan Naraghi <aryan.naraghi@gmail.com>
Date:   Mon Oct 21 05:51:05 2019 -0700

    Fix typo in file path (#3209)

[33mcommit eeb8c95bf4b925b8f246c1c486019e7f1dfe97f4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 16 17:10:18 2019 -0400

    bug: fix superbuild to use googletest-1.10.0 (#3206)
    
    I got lucky because the differences between the version in the super
    build and 1.10.0 were not important enough.

[33mcommit 5072fa9f5bd8d3858faeaf0c051198b2ea8e38af[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Thu Oct 17 02:39:11 2019 +0530

    cleanup: update MultiRegional and Regional to Standard (#3202)

[33mcommit d4044e0c2435d7901ca77ecfdd0b2cddc7c6b180[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 16 07:35:45 2019 -0400

    ci: fix kokoro/readme builds (#3205)
    
    The builds were actually duplicating the work in the install builds and
    not checking the README instructions. Unfortunately the builds
    "worked", but failed to detect the openSUSE:Tumbleweed problems.

[33mcommit e131ceb536f6d6e2e46f5521cd00004bffaf2b0e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 15 12:56:46 2019 -0400

    chore: upgrade googletest to 1.10.0 (#3201)

[33mcommit 547d2fff7333dd729e6cdfe53cd58f3a7883c2f3[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Mon Oct 14 17:47:34 2019 -0700

    cleanup: remove ramaining old files for refdocs job (#3200)

[33mcommit 22581fdc9a43d1a4f521ad1de82b08416ea8dfd9[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Mon Oct 14 14:56:02 2019 -0700

    cleanup: remove old refdocs config, update the release process (#3199)

[33mcommit 319c7e7eac41bf1c6e0865d99de5b2d0f2cbc654[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 14 15:12:18 2019 -0400

    cleanup!: use the google-cloud-cpp-common project (#3196)
    
    **BREAKING CHANGE**: The common libraries have been moved
    to the [google-cloud-cpp-common repository][github-cpp-common].
    While this may not be a technically breaking change (the API and ABI
    remain unchanged, the include paths are the same), it will require
    application developers to change their build scripts, so I think labeling
    as such is useful.
    
    The google-cloud-cpp-common port does not exist in vcpkg, and should not
    exist until this PR is merged. So for a short while we will use vcpkg
    overlays, once we cut the next release we can clean all of this up.
    
    [github-cpp-common]: https://github.com/googleapis/google-cloud-cpp-common

[33mcommit 9928674e549f5b48676bd5619eb703097f6b0881[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Oct 14 23:10:16 2019 +0530

    feat: new helper function for 'archive' storage class (#3197)

[33mcommit 8ab5e5190c116adc67ebf6a0cff342a76cfd5ce4[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Fri Oct 11 12:47:21 2019 -0700

    docs: add a kokoro build config for doxygen docs (#3195)

[33mcommit 1fcd86701f1aba88d92e22d635b5d3154f02f31b[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Fri Oct 11 12:40:52 2019 -0400

    doc: add links to generated documentation (#3192)

[33mcommit 02ec75004066ff279302b08af3f96e0dfd924703[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Fri Oct 11 08:19:18 2019 -0700

    docs: add a new script for publishing reference document (#3190)
    
    * docs: add a new script for publishing reference document
    
    * address review comments

[33mcommit b5f71e59043e279614dec23ac21a7c3527e1101a[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Wed Oct 9 19:11:01 2019 -0400

    chore: Update example PR for version number bump. (#3189)
    
    The existing example included files (*version.bzl) that no longer exist, which I found a bit confusing.

[33mcommit b1a602bfd59bf3add9196710057757373d27c4cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 9 10:43:12 2019 -0400

    bug: fix flaky builds due to ccache initialization (#3187)

[33mcommit e36d942e16679ac01c6dd58a08c9cb2723623260[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Oct 7 16:12:13 2019 +0200

    feat: Implement creating a unique prefix.

[33mcommit 0407cd1c1a1bad215cf1b28c78a3ae13667285f8[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Thu Oct 3 17:37:46 2019 -0400

    Bump version numbers for next release (#3182)
    
    * Bump version numbers for next release

[33mcommit 86a75bdc923f597e042b8d53378bd80e91496afa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 3 13:41:56 2019 -0400

    feat: implement install components. (#3178)
    
    Package maintainers may want to have different components for runtime
    support (typically just the .so and/or .DLL/.LIB) vs. developers
    (typically all the headers and .a files).

[33mcommit 51c6dfaec518be793392b9b03f4c4b2066d02e9f[m[33m ([m[1;33mtag: v0.14.0[m[33m, [m[1;31morigin/v0.14.x[m[33m)[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Thu Oct 3 13:24:19 2019 -0400

    update release notes [skip ci] (#3177)
    
    * update release notes [skip ci]
    
    * Address review comments.

[33mcommit d23f9312d2eea66df188185528998b60d5e9ba63[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 2 11:02:40 2019 -0400

    bug: fix Debian install build (#3175)
    
    The `install` stage was duplicated in the Dockerfile, resulting in
    incomplete builds (and bad caching).

[33mcommit 5c27284a54e5b95e49231b8209fc9725ef2fd6a5[m
Author: Martin Rey <42996147+m-rey@users.noreply.github.com>
Date:   Wed Oct 2 15:15:32 2019 +0200

    Fix openSUSE misspelling and inconsistencies in documentation  (#3168)
    
    openSUSE is often misspelled. This commit fixes capitalization errors
    and the spelling of openSUSE Tumbleweed.

[33mcommit 6b58dff8ab86d45f8853a544fb2593d4267318e6[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Oct 1 21:02:46 2019 +0200

    test: add an integration test for FD leaks. (#3169)
    
    It only runs on Linux because there is no portable way to list open
    files.
    
    This fixes #2953.

[33mcommit caaef3af7eb36d51831f70f8d6d151f759454af0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 30 13:22:52 2019 -0400

    chore: upgrade super builds to curl-7.65. (#3080)
    
    For "reasons" it is easier to do this than jump to 7.66. Also document
    how 7.64 has problems for multi-threaded applications, and fix some
    locking for versions over 7.61

[33mcommit 6b858735c1a70e29b652666609bc91480b1f836f[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Sep 30 21:52:16 2019 +0530

    docs:Link HMAC service account key documentation. (#3161)

[33mcommit 042505d8ca21c39a53f9ae7ef697d05d4f95304c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 30 11:19:41 2019 -0400

    cleanup: simplify external projects some more (#3081)
    
    Now that the external projects are only used in super builds we can
    simplify them some more.

[33mcommit 3d12d893b77c03ac05d62ae6ca7ef4454e8343a5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 30 11:19:21 2019 -0400

    cleanup: support manually running ci/kokoro/readme (#3082)
    
    Support running the build script without the GCR cache.

[33mcommit 53ae40f978e6677db57e021fe6b20c3d78222d7f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 27 07:25:13 2019 -0400

    feat: a new test for multithreaded downloads (#3079)

[33mcommit 5c0d3f727f8806737f8e59ce8d964868733c4ebe[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 26 10:58:50 2019 -0400

    chore: fix copyright boilerplate (#3078)

[33mcommit 4c0b57ad4680b8c4831d5cc84478f04f2fb1e9e9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 25 13:07:09 2019 -0400

    feat: treat CURLE_SSL_CONNECT_ERROR as retryable (#3077)

[33mcommit 56394e88750a5b2528e58415a6ee3b2f345d1eff[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Sep 25 21:53:59 2019 +0530

    feat: Change JSON endpoint for google/cloud/storage. (#3076)

[33mcommit e9ccd39d9f12066f43d77f621fdb560a6a0a178b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 23 18:13:02 2019 -0400

    feat: add long delays to read stall regression test (#3073)
    
    Verify the library can handle applications that, from time to
    time, sleep for more than 5 minutes. This seems to be a critical
    value to disconnect idle transfers on the server-side, and thus
    they are important to test.

[33mcommit d666bba0f11d20c87f401f8d5a5011180fa4df91[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 23 15:00:45 2019 -0400

    feat: implement a regression test for large uploads (#3066)

[33mcommit 44c6e8913e41f5b1cae66fd96ce415c1982dd697[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 23 12:11:12 2019 -0400

    bug: restart downloads with retryable HTTP errors. (#3072)

[33mcommit 8c87f78fc785605a8057ae0dc39af1adc9c1f480[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Sep 23 21:27:02 2019 +0530

    docs:Adapt documentation for super build. (#3071)

[33mcommit 2a31692875f4a52be310ae28a24614b7698c837a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 18 17:48:06 2019 -0600

    feat: improve stalled reads regression test (#3059)
    
    The test for stalled reads was a bit too difficult to follow.
    This change simplifies the test, refactoring some common code.
    It also makes the test more strict, validating that the
    download results have the correct size and checksum values.
    The test validates the computed size and checksums against the headers
    available when the full object is read, as well as comparing these
    against the object metadata.

[33mcommit 73a499106623d266df4ac7102cfdc2afd6cf23ae[m
Author: Jseph <jsephcx@gmail.com>
Date:   Wed Sep 18 14:01:14 2019 -0700

    bug: calls to resumable_session_id() result in segfaults (#3062)

[33mcommit 057834aec47035efa7dc9463f91ca6294a8c3393[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Sep 18 20:09:08 2019 +0530

    feat: added ReadLast option for reading object from end (#3058)

[33mcommit 0db60c8442e2624fb69b790dc8899aa74f3fc0aa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 17 17:48:43 2019 -0600

    bug: handle CURLE_PARTIAL_FILE as recoverable (#3061)
    
    Now that we have much better code to recover from partial downloads
    we can treat this error as a recoverable failure.

[33mcommit a6760128ba4148b73c6357065977f40bae05349c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 17 13:21:22 2019 -0600

    bug: fix runtime install directory (#3063)
    
    Use the right variable to set the runtime install directory for DLLs.

[33mcommit 53dd2f4d0c5b7f01bd0d968ceeabfba9616943be[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 15 20:22:59 2019 -0400

    bug: verify checksums and hashes on xgetsn() (#3057)
    
    If the application reads data via `.read()` we were neglecting to check
    hashes and checksums on the download.

[33mcommit 5419fe965545137e5ad3c3522dd554849367306a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 15 20:13:49 2019 -0400

    bug: return all bytes when stream is closed (#3054)
    
    Sometimes the last few bytes of a download were not returned to the
    application. The download was done, and CurlDownloadRequest was
    returning `IsOpen() == true` even though it still had data in its
    spill buffer.

[33mcommit 8194e6fba9ef577a1b3aad84113dd4c73b28ec15[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 15 20:13:27 2019 -0400

    bug: fix unit test for developers that configure ADC (#3055)
    
    One of the unit tests was failing if the developer had configured
    Application Default Credentials (ADC). The fix is to change the ADC
    search path to a location where the developer would not put
    configuration files.

[33mcommit b5b697b4285a8a41df0b8af9f0cb7961d5b4a379[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 15 20:13:01 2019 -0400

    feat: reset retry policy for each retry loop (#3050)

[33mcommit 4943aa2534aa73518b043d9b6eb8af5cb25e4c9d[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Fri Sep 13 14:02:23 2019 -0700

    test: Add a test for telemetry header (#3048)
    
    * test: Add a test for telemetry header
    
    * Consolidate 2 similar tests

[33mcommit 84772e182e5a82c9f839a9073cef88b9962c48cf[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Thu Sep 5 17:32:38 2019 -0400

    fix: Correct a misplaced closing brace in release doc (#3041)

[33mcommit 08f5968666239b23fd7086b5deba159a01e6b35f[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Thu Sep 5 16:35:34 2019 -0400

    Bump version numbers for next release (#3040)

[33mcommit 1107bef93d2ccdce34154f99f4e588ae2676d98f[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Thu Sep 5 13:29:35 2019 -0700

    feat: Always build the base image for the refdocs job (#3039)
    
    * feat: Always build the base image for the refdocs job
    
    * Correct base image name
    
    * Fixed a silly bug

[33mcommit 6ebe10e2f6e7f717d7f618c7136fd40f372b9f13[m[33m ([m[1;33mtag: v0.13.0[m[33m, [m[1;31morigin/v0.13.x[m[33m)[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Thu Sep 5 11:21:33 2019 -0400

    Update release notes [skip ci] (#3038)

[33mcommit 8396e1d80ae3e13de0289475403e998600c6a57d[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Sep 4 23:29:18 2019 +0200

    fix: use next_expected_byte() in retried uploads (#3037)

[33mcommit 563a3cab0b8b1a1d84da6ae06d8e756a56c68572[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Sep 3 14:36:18 2019 -0400

    feat: Document/test the behavior of passing an empty string to SetEnv on Windows

[33mcommit 56fd6bfd5ed3c55af5bef97a629f2526ec4d96b1[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Sep 2 18:50:53 2019 +0200

    bug: ReadObject() retries only once (#3028)

[33mcommit b6e3e0cb505ee4066456fa384120cb133bfd337d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 2 11:59:56 2019 -0400

    bug: CurlRequestBuilder not initializing all members. (#3035)
    
    This fixes the flakiness in the code coverage build. It did not affect
    the other tests because the member variable is set by the CurlClient,
    but this integration test uses the class in isolation.

[33mcommit 32b91f7a7d3d9a56436faf0dc79fc6ddbf49cb7d[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Sep 2 08:19:01 2019 -0400

    feat: Add ability to disable building libraries (#3025)

[33mcommit 3302c7910e86a84a7b1d6188f782ade4b2824eb7[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Sep 2 14:17:50 2019 +0200

    bug: Fix a SIGSEGV in test. (#3031)

[33mcommit fd4c95377c35da31aea60b0a685a4c5c8cd76bd6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 2 08:14:38 2019 -0400

    bug: fix builds with CMake 3.15 (#3033)
    
    Update to the latest cpp-cmakefiles release which supports CMake 3.15.
    
    We also include `FindgRPC.cmake` directly because with CMake 3.15
    `find_dependency()` can no longer find it.

[33mcommit 9ed990b98c6476c6097f7ed5103a5057522dbf6e[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Aug 28 15:30:04 2019 +0200

    fix: don't throw on expired retry policies (#3023)
    
    This fixes #2955.
    
    Before this PR, if any of the modified places was called with an expired
    `RetryPolicy` an exception would be thrown because a `StatusOr<>` with
    an `OK` status was created. This could be deterministically triggered by
    the `RetryClient` logic.

[33mcommit f2cd74dda98193d77e07e6596ba5aecd6238152b[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Aug 28 08:54:03 2019 -0400

    Like the other PR, this adds more testing to increase coverage. There were a
    couple of functions that had no tests at all, but the majority of tests went
    towards failure branches.

[33mcommit 7c4f218dbd9e1fbe08bc7187347d4da80198ec0a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 27 11:04:41 2019 -0400

    bug: Unit tests are too slow. (#3021)
    
    After I changed the default backoff policy some of the unit tests got
    really slow. The tests were using the default backoff policy, which
    starts at 1 second, some of the tests try multiple times, so the delays
    got into the multiple-second range. This change make the unit tests (and
    the integration tests when running against the testbench) use a much
    shorter initial backoff period.

[33mcommit 986a25ea5d6e650b5ec8cd1f670fe96d6ca42acd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 26 14:45:57 2019 -0400

    bug: Fix code coverage upload. (#3018)

[33mcommit 46eee91f92bf835c6c501de86267f3d3dce434cf[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Aug 26 13:31:05 2019 -0400

    cleanup: Add additional testing for credential helpers. (#3004)

[33mcommit 2662d078639f671890f2284c1df423f557f305d5[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Aug 26 15:39:37 2019 +0200

    fix: return proper error code from upload metadata (#3005)
    
    This fixes #3002.
    
    Before this fix, if a fatal error occurred while uploading a stream,
    `stream.metadata()` would return `StatusCode::kUnknown` irrespectively
    of the underlying cause. This PR fixes it.

[33mcommit 7d68b044b32b126db1edfe21ad2091eec9e81acb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 26 09:35:58 2019 -0400

    chore: Configure tsan and msan builds. (#3011)
    
    This change configures (but does not enable) the tsan (ThreadSanitizer)
    and msan (MemorySanitizer) builds. The are a couple of changes in the
    code:
    
    - tsan found a real race condition in `google::cloud::promise<T>`, also
      created a couple of unit tests to repro the bug with minimal overhead.
    - msan yields a false positive for one of the tests related to signal
      handlers. I chose to simply disable the test in this case.
    
    A separate change inside Google will enable these builds.

[33mcommit ea09e2bc9c3e22d4cea9eacf132f9c4e33875271[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Aug 26 15:23:32 2019 +0200

    fix: eliminate a race condition from retry loop (#3013)
    
    Before this fix, if the timing was right, a retriable error could have
    been misleadingly described as a permanent one.
    
    There is no additional unit test because this code is covered and
    triggering the race condition is non-trivial.

[33mcommit f0e962e0d325309065211264a8f9a2502bcc8403[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 26 09:11:09 2019 -0400

    bug: Fix the initial backoff interval. (#3007)
    
    The recommentation for backing off is to start with 1 second.

[33mcommit 6b5a49a14b95777e3d6e563bee710d6f4d412899[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 26 08:04:42 2019 -0400

    chore: Sanitizer builds work better with debug info. (#3008)

[33mcommit 355e405265e12d6d54529dfe21720dc176fbc3ba[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 26 07:22:27 2019 -0400

    chore: Fix builds against vcpkg. (#3012)
    
    The latest vcpkg does not define GTest::mock, but defines GMock::gmock
    instead. That seems like a bug (filed), but we need to workaround it.

[33mcommit 92f412c4e5dcb02924120cb170c4f6b0e90be290[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Aug 23 11:26:12 2019 -0400

    `FakeClock` is a useful construct that only appears in
    `service_account_credentials_test.cc`, but I think that it can be used in other
    tests as well. I plan on using it in an upcoming PR in a different file.

[33mcommit a74734560d91b8358d29cff5a031035b00ccd5cc[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Aug 22 16:10:10 2019 +0200

    fix: correct invalid routing headers. (#2988)
    
    This fixes #2704.
    
    Also, add unit tests for all API calls to make sure we catch mismatches
    in the headers.

[33mcommit eadf4ba5dd38ac439348295a785b52fc2e5d7466[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Aug 22 09:36:19 2019 -0400

    cleanup: Factor out payload creation from ServiceAccountCredentials::…

[33mcommit 7c9672d27168dc4bd5d9b411366c970ef2a5e4d7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 22 08:40:59 2019 -0400

    cleanup: Add missing TODO comment. (#2996)

[33mcommit 7c0b3e9d74b7840b6924a82df94290f314305c2f[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Aug 22 01:46:16 2019 +0200

    Actually enable the error injection test. (#2995)

[33mcommit fb2e253afd73bdf70429be68d4be06ba9d231ceb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 21 19:44:54 2019 -0400

    feat: allow applications to timeout stalled downloads. (#2993)
    
    Sometimes a download can "stall" because the service is not delivering
    bytes to the client (think about network glitches, servers just dying,
    connections dropped, etc.) This PR introduces options to timeout
    downloads that have "stalled" for more than N seconds, where "stalled"
    is defined as "no bytes have been received."
    
    Note that this change does *not* address #2890. A timedout download can
    fail if the restarted download does not deliver at least 128KiB of data
    without errors. Fixing that is a matter for a different change.

[33mcommit c4f17a9aac2b4e648e9e11ce00d6470f7e7ab496[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 21 14:06:39 2019 -0400

    cleanup: use existing function to generate data. (#2992)

[33mcommit 7a9b2abca65b4b6694f3f48f1c18fb8dd460f81f[m
Author: Jseph <jsephcx@gmail.com>
Date:   Wed Aug 21 10:39:45 2019 -0700

    Improve efficency of ObjectWriteStreambuf by replacing O(n^2) code.

[33mcommit 8e460f7ab02e4d1a460641614ec42e3b4df89c54[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 21 12:13:36 2019 -0400

    chore: Workaround gcc-8.2 build failures. (#2991)
    
    For reasons that are unclear to me code like this:
    
    ```C++
    auto const foo = Class::static_constexpr_variable;
    
    [&](...) {
      EXPECT_EQ(foo, bar);
    }
    ```
    
    Fails to build with gcc-8.2 on my workstation.

[33mcommit 4596ce1c0ed316f3c9c416bc4772ba4c9ac4e665[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 20 14:48:43 2019 -0400

    bug: Fix build for continuous benchmark tests. (#2987)
    
    The googleapis/cpp-cmakefiles dependency was missing.

[33mcommit 273b1033a2424c7c1df2f1e25e143e0c92cb25dc[m
Author: Scott Hart <sdhart@google.com>
Date:   Mon Aug 19 17:08:39 2019 -0400

    chore: reduce docker timeout from 120 minutes to 60 minutes (#2986)
    
    * reduce docker timeout from 120 minutes to 60 minutes
    
    * revert cfg timeout_mins, add timeout to docker build command

[33mcommit cc564e10959a7e9af742d0daf36ccc5f2d6ba756[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Aug 19 16:43:07 2019 -0400

    bug: do not disable hashes when Disable{MD5,Crc32c} are set to false (#2979)
    
    Previously, the `CreateHashValidator` functions did not check the value of the
    `DisableMD5Hash` or `DisableCrc32cCheckum` options, only the existence
    of the options. As a consequence, whether the user specifies `true` or `false`
    did not matter. With this change, only setting the value to `true` has any effect.

[33mcommit 27aa9a3a0f7d488ac2bfda6a005ad2d0f156be39[m
Author: John Edmonds <john.a.edmonds@gmail.com>
Date:   Mon Aug 19 15:09:10 2019 -0400

    chore: upgrade grpc to 1.23.0. (#2985)

[33mcommit cccc8c241ce38d74d0fff54861a65f3cff84bfa5[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Aug 19 20:54:31 2019 +0200

    fix: use MetadataUpdatePolicy::FromClusterId. (#2968)
    
    This is a part of #2704.

[33mcommit a708a1b988ca3c9e466c3a4f996ffd2411c926d8[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Aug 19 09:24:03 2019 -0400

    cleanup: Run CI-specific commands if RUNNING_CI=yes (#2982)
    
    In my opinion, these commands only make sense when run on Kokoro. It seems
    unlikely that a new base image should be pushed whenever a developer runs this
    script on their workstation.

[33mcommit dbd614681fe1b35de04396e25c59fe0c419c0f4a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 16 16:09:05 2019 -0400

    doc: Fix syntax in CMake module documentation. (#2977)

[33mcommit de6d1b5ddc5472966fe82f54db8a15ca5cde4798[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Aug 16 14:09:33 2019 +0200

    CURLE_{RECV,SEND}_ERROR should be handled as StatusCode::kUnavailable.

[33mcommit e8309d8848874a15aaef0f21f8e54029fbd9237d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 15 15:56:40 2019 -0400

    chore: Update cpp-cmakefiles. (#2976)
    
    Need to update the googleapis version to pick some fixes.

[33mcommit 8195de34a79e09e8fb4f0737df1dec225063af5e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 14 22:00:46 2019 -0400

    chore: Use the Docker cache for interactive builds. (#2975)

[33mcommit 99cb0aa8e96c40085809b785e434fc9e6a2ac206[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 14 22:00:25 2019 -0400

    feat: Cache Docker images for Kokoro builds. (#2973)
    
    With more of our builds compiling the dependencies (protobuf, gRPC,
    curl, etc.) in the Docker image it starts to make sense to cache the
    image: the image creation phase is much longer than before.

[33mcommit 150aaf8296a5dba47dd28e2a448e4bdea46f9037[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 14 13:48:21 2019 -0400

    cleanup: Move cmake/external to super/ (#2972)
    
    These files are only used in the super build, so it makes sense to move
    them to that directory.

[33mcommit c31b958e780530840a3cd57867cb46acd2b49e60[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 14 13:47:59 2019 -0400

    feat: Make integration tests client configurable. (#2970)
    
    This PR makes the `storage::Client` used in integration tests
    configurable, so we can run all the tests with different configurations.
    For now we just change the idempotency policy, but I anticipate other
    changes in the future, for example, different client option parameters,
    changing the endpoints, changing the stack of `RawClients`, and more.

[33mcommit be6453a9a5c919823d1e416d1e155d69c5f658e3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 14 12:28:42 2019 -0400

    cleanup: Use only find_package to find dependencies. (#2967)
    
    This PR changes the CMake files to use `find_package()` exclusively when
    looking for dependencies. To automatically download the dependencies the
    project can be embedded in a larger "super build".
    
    There are still some places where we use `find_package()` through a helper
    file, because different versions of the CMake module (or config file) behave
    differently and we want to manage those differences in one place.

[33mcommit 7b9363099b49230ec38769ec99b2f749c087bfcf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 14 11:10:26 2019 -0400

    cleanup: Use ObjectMetadata in ResumableUploadResponse. (#2969)
    
    When a resumable upload finishes the JSON protocol includes the object
    metadata as a JSON string. Forcing the ObjectWriteStream to parse this
    string seems wrong, as that is not supposed to know about the JSON
    protocol. This PR changes the data structure to always use
    `storage::ObjectMetadata`. It is wrapped in a
    `google::cloud::optional<>` because the responses for an incomplete
    upload do not include the object metadata.
    
    This change removes and adds symbols to the `storage::internal`
    namespace. Thus it is not a breaking change, but the tool does not know
    that.

[33mcommit edff1ffe28ea565db57abdc57d0339a46fe79a2f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 12 15:04:59 2019 -0400

    chore: Keep release tags in master branch. (#2963)
    
    Change the code to not require changes for a new release branch, and
    update the instructions to create tags in the `master` branch.

[33mcommit 38f9b959bbad314ce1fdc32d8cad4124569d436f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 12 14:39:33 2019 -0400

    feat: Configure C++17 build. (#2961)
    
    This PR creates the configuration to run a build with C++17. Even though
    we support C++11, some of our customers may enable C++17 features and we
    want the code to work well for them too.

[33mcommit 2666d7e79a5a856ab4984436ddc2e9e4dd01bbdd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 12 13:42:20 2019 -0400

    cleanup: Use vcpkg for all dependencies in Windows build. (#2962)
    
    Now that googleapis/cpp-cmakefiles is a vcpkg port we can simplify the
    build configuration.

[33mcommit be15a2ff886cba30e40d2413cfffa00635566915[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Sat Aug 10 09:06:12 2019 -0400

    disabled google-runtime-int (#2958)
    
    This change copies the .clang-tidy file from https://github.com/googleapis/google-cloud-cpp-spanner/blob/master/.clang-tidy
    
    The only difference is that for this project we disable the google-runtime-int check, which suggests avoiding types like long and long long in favor of explicitly sized types like std::int64_t. However, it appears that the curl library requires that are specifically long or long long, so keeping this warning would require lots of NOLINT, which simply doesn't seem worth it.
    
    FWIW, I've always found this particular warning to be of dubious value anyway, so I don't mind turning it off.

[33mcommit 474cbfedd3419f9a1a90f0d2effa6a721d87d56f[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Aug 9 13:51:26 2019 -0400

    feat: let clang-tidy build not fail if there are edited files (#2957)
    
    Copied from https://github.com/googleapis/google-cloud-cpp-spanner/pull/334

[33mcommit 0c66dd20ea638098f683f3eece712a36c31d3dbd[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Aug 9 11:44:52 2019 -0400

    cleanup: Don't include nljson.h from public oauth2 headers. (#2954)
    
    * cleanup: Don't include nljson.h from public oauth2 headers.
    
    Fixes #2772
    
    Per @coryan's suggestion, this approach factors out any logic w.r.t JSON into
    separate functions. For the functions dealing with JWT assertions, since they
    were not only private functions but also essentially standalone, they were
    moved out of the `ServiceAccountCredentials` class and made to accept a
    `time_point` parameter. Functions which would normally take just a payload take
    a `HttpResponse` to preserve the status. Finally, a `ServiceAccountMetadata`
    struct was added; `ComputeEngineCredentials` was not modified to accept this to
    prevent API breakage.
    
    * Fix typo in ParseMetadataServerResponse
    
    * Address review comments.
    
    * Fix redundant move.

[33mcommit 825c3a6a985b55a0b5c33914f1fa4ed784332ea0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 7 20:33:14 2019 -0400

    feat: Ignore warnings in generated code. (#2948)
    
    We want to ignore any warnings in headers generated by the protobuf
    compiler (or the gRPC plugin) because (a) they generate a lot of
    warnings, and (b) we cannot easily fix those warnings.

[33mcommit f6c3c0871ceb7c9df93be6c760c245a7695df535[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 7 20:06:19 2019 -0400

    bug: Fix dependencies for googleapis. (#2947)
    
    When compiling googleapis-c++::* as external projects we need to set the
    right depedencies for all the libraries.

[33mcommit 67b9d3e323816ccd0a7e7c6741fc2678868a8bc4[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Wed Aug 7 13:59:32 2019 -0700

    fix: Fix bazel build on windows. (#2940)
    
    * fix: Fix bazel build on windows.
    
    feat: Add config files for windows bazel builds.
    
    * Fix broken BUILD file
    
    * Simplified the select rule
    
    * Add missing source files for windows build
    
    * Add conditionals around every `-lpthread`
    
    * Invert the conditions
    
    * Shorten the workspace name
    
    * Consistently change the workspace names
    
    * Generate INSTALL.md
    
    * Revert the WORKSPACE name changes
    
    * Remove old TODOs
    
    * Kokoro config cleanup
    
    * Use shorter output directory.
    
    * Removed license boilerplate from empty files
    
    * Fix wrong command line for bazel test

[33mcommit 5ad364581ed52ce457a2f79449964063e96242c6[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Aug 7 17:00:26 2019 +0200

    Increase the threshold fur using resumable uploads (#2946)
    
    This is an effect of experiments in #2657.

[33mcommit 275820a3fce91b584d66aa29a21251750167b4d6[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Aug 7 16:59:54 2019 +0200

    feat: Random CRC and MD5 in storage throughput benchmark (#2943)
    
    This is in order to be able to compare apples to apples. Results are
    very unstable and the way to circumvent it is to reuse the same client.

[33mcommit 389a5e0eb19727fe809c24f0ba3e0ba2d9e10d81[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Aug 7 16:54:10 2019 +0200

    Increase download and upload buffers. (#2945)
    
    This fixes #2657.

[33mcommit de528ae440c651c0d7dbc419880997aa18e901fa[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Aug 7 15:57:33 2019 +0200

    feat: Make GCS throughput benchmark record progress. (#2944)

[33mcommit b319bea2024456611b170416e331189d63a9fa8b[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Aug 6 16:08:23 2019 -0400

    cleanup: Fix usage of NCPU in Dockerfiles. (#2939)
    
    * cleanup: Fix usage of NCPU in Dockerfiles.
    
    Fixes #2928
    
    As mentioned previously, due to scoping rules in Dockerfiles, NCPU
    should appear after FROM statements. Variables defined outside FROM
    statements do not belong to any stage. Furthermore, I cleaned up where
    we use parameter expansion (`${NCPU:-4}`): in places where NCPU is always
    defined, I removed it. However, we want it in the install/readme for
    copy/paste-ability.

[33mcommit 2b0d16fc8a4b03804eca99866ccdb9f86f611732[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Tue Aug 6 12:13:27 2019 -0700

    feat: Use macros for compiler id and version (#2937)

[33mcommit e03adf7b59296f26494560ffbb82140a531b2474[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Tue Aug 6 07:00:17 2019 -0700

    fix: Fix windows include path in curl.BUILD (#2938)

[33mcommit d37faac72bbff1d5842366953c6c320b2e88d3d2[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Mon Aug 5 13:23:21 2019 -0700

    testing: cleanup on windows builds (#2936)
    
    - Delete configs for windows 2016
    - Remove unnecessary 7-Zip Path

[33mcommit 574f3d9e1cccfc71a65636a18f90a4002f169f6d[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Aug 5 13:15:15 2019 -0400

    Bumping versions after release (#2934)

[33mcommit d693a34f4cb7ee0a30fb1fa9eeded878b42d097a[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Aug 5 11:48:59 2019 -0400

    doc: update release notes (#2933)
    
    * doc: update release notes
    
    * PR comments
    
    * recategorized as breaking change

[33mcommit afecdc8af2c2d9f74096b678925fbf669597be63[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Sun Aug 4 13:08:39 2019 -0700

    testing: Fix build on windows 2019 (#2932)

[33mcommit 6637725e7d4cc89fa773abfc867c32067575453b[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Aug 2 14:03:54 2019 -0400

    feat: Add Ninja build. (#2931)

[33mcommit 3cd542fd10bcec5897a2556286ab175da374a027[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Fri Aug 2 08:13:48 2019 -0700

    testing: Delete files on windows test failure (#2930)

[33mcommit 6430b38c4f600c5fb04f1ed62b8e6debe9463699[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 31 12:45:37 2019 -0500

    cleanup: Make comment future proof. (#2927)
    
    Remove a comment referring to a soon-to-be-fixed bug.

[33mcommit 41435a97fb0c7c03dca780abb7d4ca4b73fa47f3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 31 11:42:20 2019 -0500

    Control TCP memory usage in GCS library. (#2902)

[33mcommit 16beff79d22a8c18f83c44b0a9a7547a07bfa2b2[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Jul 31 21:35:20 2019 +0530

    Mocking examples of `raw_client` for failed scenarios. (#2924)

[33mcommit c1448e4ebee5de84bfd3b4820af4434324fd3524[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 31 09:02:35 2019 -0500

    feat: Minimize contention in Bigtable Client initialization. (#2923)
    
    Channel pools for Bigtable clients are lazy initialized, the first
    thread that needs them creates them. To avoid deadlocks and unbound
    priority inversions this thread releases the locks while creating the
    pools, and relocks before saving the newly created pool.
    
    In some cases two (or more) threads may create the pool, in this case
    the pool created by the second thread is discarded. We were discarding
    this work with the lock held, which resulted in deadlocks for some
    users inside Google (this should not affect external users).

[33mcommit 0ae71914df7d6cca2cc6d4e820ae3bd4db3a9ed9[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Jul 31 08:57:39 2019 -0400

    cleanup: Remove unneeded build/Dockerfiles and cleanup build.sh (#2926)

[33mcommit 1f330c84c8e6bc29ef2551c99b2ec50d3c649fdd[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Jul 31 08:16:27 2019 -0400

    Move ci/super to super (#2925)

[33mcommit df1e7d1e533e7b571910cda68eb2119638e2cf5f[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Jul 31 17:02:12 2019 +0530

    Make partial errors/last_status available to `ObjectWriteStream` (#2919)

[33mcommit 5e02799b309c0f8380355033f683fe96ce4c401f[m
Author: Billy Jacobson <billyjacobson@users.noreply.github.com>
Date:   Wed Jul 31 04:15:11 2019 -0700

    Bigtable write samples (#2910)

[33mcommit 39d42ac8037af8a7073116cc3678e53d23630f56[m
Author: Billy Jacobson <billyjacobson@users.noreply.github.com>
Date:   Wed Jul 31 04:14:04 2019 -0700

    Updating Macos build instructions for Mojave (#2922)

[33mcommit 1b13d0a93becbf53fd6c507e6caa22a252149909[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Jul 30 14:20:50 2019 -0400

    cleanup: Use NCPU consistently in all scripts. (#2918)
    
    NCPU was only used in a few places. The rule of thumb is: wherever there's
    docker build, we pass NCPU as a build-arg; for docker run, we pass it as an
    environment variable. The former is useful for install builds in
    ci/kokoro/docker/install and the readme/install builds. The latter is useful
    for ci/kokoro/docker/build.sh where the builds are not run as part of the build
    process itself, but after the image is already built.
    
    Setting NCPU is moved to define-docker-variables.sh to make it consistent
    across all build scripts.

[33mcommit f1024ef4875700b6803fb023248a9280ac3a69bc[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Tue Jul 30 10:04:00 2019 -0700

    testing: Add kokoro build on windows 2019 (#2921)
    
    * testing: Add kokoro build on windows 2019
    
    * Fix a syntax error
    
    * Fix another syntax error
    
    * Fix copyright year
    
    * testing: Add presubmit build with win 2019

[33mcommit b610c1aba3d869f80b0a7bb8fa912b84513fbc62[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Jul 30 12:50:35 2019 -0400

    feat: Change storage/benchmarks to compile with exceptions disabled. (#2916)

[33mcommit a16174d543eef3aa47ada1f2b79205f0801d81bf[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Mon Jul 29 13:54:16 2019 -0700

    Add tracking region tag to GetBucketMetadata (#2920)

[33mcommit dcd1f897c4e2a63142cc8a708d96d245f36895bc[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Mon Jul 22 15:52:00 2019 -0400

    docs: add a necessary flag for windows in README (#2909)

[33mcommit ea11919c43b9165fab7e1f7a264055a162bfd0a6[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Jul 22 14:56:36 2019 -0400

    Remove unused cmake-super cfg files. [skip ci] (#2903)

[33mcommit 8b056e7851264732a4a41c0948da79ebcceae365[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Jul 22 20:56:14 2019 +0200

    Disable ABI compatibility checks. (#2901)
    
    We're only interested in source compatibility.

[33mcommit 15b782b53ce1fe6de020cf98ea6104d5d491e005[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Jul 22 19:41:16 2019 +0200

    Implement native IAM operations for GCS. (#2900)
    
    * Implement native IAM operations for GCS.
    
    The make use of `NativeIamPolicy` and friends from #2886.
    
    This is needed to support IAM conditions. It also makes the
    implementation a bit more future-proof by preserving fileds which the
    client doesn't know of.
    
    This fixes #1833.
    
    * Bump ABI/API expectations.

[33mcommit 6a3796d89a1c219bd77c1cab626047b3175a80cf[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Jul 22 10:15:26 2019 -0400

    feat: Add CMake super build.  (#2898)
    
    * Add CMake super build.
    
    * Don't run unit tests twice.
    
    * Add super build tests to the readme Dockerfiles.
    
    * Set PARENT_SCOPE at the end to avoid future typos.

[33mcommit 0f2062b428175adf45303678d9671bfcdf04687c[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Jul 22 09:26:48 2019 -0400

    Convert BenchmarkSetup to use StatusOr. (#2897)
    
    * Convert BenchmarkSetup to use StatusOr.
    
    * Compile benchmarks even with exceptions disabled.
    
    * Use auto where appropriate.

[33mcommit 686d438a45739d28256ac3ea28f892cfa6f7041a[m
Author: Christian Clauss <cclauss@me.com>
Date:   Mon Jul 22 15:25:13 2019 +0200

    Use print() function in both Python 2 and Python 3 (#2899)
    
    Legacy __print__ statements are syntax errors in Python 3 but __print()__ function works as expected in both Python 2 and Python 3.

[33mcommit 43ff41d67e22371e2a376ec119f7f7167022450d[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Jul 19 21:11:48 2019 +0200

    Implement native IAM data structures for GCS. (#2886)
    
    * Implement native IAM data structures for GCS.
    
    This change is needed to support IAM conditions. They have proven the
    `google::cloud::Iam*` object to not be versatile enough to accomodate
    for future protocol changes. In order to make this a bit more
    future-proof, a decision has been made to stick with the low-level,
    native representation.
    
    The native operations use raw json underneath, so that even if the
    protocol is exptended, fields aren't silently dropped.
    
    * Fix compilation errors.
    
    * Remove unneeded include.
    
    * Circumvent ambiguity in casting json to string.
    
    * Clarify why NOLINTNEXTLINE is used.

[33mcommit 79f1eef610b4562be6d5bf0b33723ae227d7e031[m
Author: Scott Hart <sdhart@google.com>
Date:   Fri Jul 19 11:09:28 2019 -0700

    removed attempt to install pkgconfig (#2896)

[33mcommit a36642ce5b397dffb19c4c808b8d658f6380bf02[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 19 08:14:52 2019 -0400

    feat: Helpers for PredefinedDefaultObjectAcl. (#2885)
    
    The other Predefined*Acl options have helper functions to avoid typos in
    things like "bucketOwnerFullControl". I also added integration tests to
    make sure all the values are actually accepted by the service.

[33mcommit 24c991b9a31c1affdc5a7e1be93977242e1fa391[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Jul 18 17:25:08 2019 -0400

    Partially change benchmarks to use StatusOr instead of exceptions. (#2881)
    
    * Partially change benchmarks to use StatusOr instead of exceptions.
    
    * Fix StatusOr actually being in endurance_benchmark
    
    * Address review comments.
    
    * Fix formatting.
    
    * Keep going even with error; don't use result if there was an error
    
    * Fix another instance.

[33mcommit 08edf336124fb231d43552665857fade75899e21[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Thu Jul 18 17:12:24 2019 -0400

    Utilize googleapis repo (#2888)
    
    * Utilize googleapis repo
    
    * Fix style
    
    * Changes for other Dockerfiles
    
    * Use the release on cpp-cmakefile github repo
    
    * Update INSTALL.md
    
    * Temporarily setting GOOGLE_CLOUD_CPP_GOOGLEAPIS_PROVIDER to external
    
    * Update to googleapis 0.1.1

[33mcommit 2de685053a3ba44afb43531776e0eaada3c35e4c[m
Author: Scott Hart <sdhart@google.com>
Date:   Thu Jul 18 12:09:13 2019 -0700

    feat: add conjunction (#2892)

[33mcommit 7011dd82004d89b1f2c77dfd47b3938b6a42cdbe[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Jul 18 09:40:58 2019 -0400

    cleanup: Fix OpenCensus warnings in bigtable example. (#2889)
    
    * cleanup: Fix OpenCensus warnings in bigtable example.

[33mcommit b8446d550674e8c6d49a04443dfd3c5ee7b32c45[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Jul 17 17:54:30 2019 -0400

    cleanup: Fix shellcheck warning in upload-docs.sh (#2887)
    
    * cleanup: Fix shellcheck warning in upload-docs.sh

[33mcommit 78bae747b00a5c118872190391f178bab55604e3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 16 11:08:25 2019 -0400

    doc: Explain why some subdirectories are disabled. (#2879)

[33mcommit e8eb2c2bad348c69194d6158f6fe472b183bbdf9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 16 10:56:52 2019 -0400

    Refactor bigtable::CompletionQueue to grpc_utils. (#2867)
    
    This will make `CompletionQueue` available for other libraries. I would
    like to use it in the Spanner library to perform background operations
    without creating an excessive number of threads.
    
    Updated the API/ABI baselines. Because we still have a
    `google::cloud::bigtable::CompletionQueue` alias the API does not
    change, in fact, none of the examples or tests had to change. But the
    tool does not realize the alias is there, so it claims we removed about
    10% of the symbols.

[33mcommit 8b4a1e5168af19ec43f37b36c01f1e42bf233763[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Jul 15 22:21:04 2019 +0530

    Use correct field name for MD5 hash. (#2876)

[33mcommit 4dff795cadcb93c3a97aadbda77c2cf95726713a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 10 22:46:50 2019 -0400

    feat: Support setting 64-bit integers mutations. (#2866)
    
    This creates overloads for `bigtable::SetCell()` that set the cell value
    to a 64-bit integer (stored as a big endian). This is useful when
    creating cells that will be incremented with `CheckAndMutate()`.
    Funnily, we had the operations to *read* such cells, and to increment
    their value, and we (obviously) had the functions to create such values,
    but the functions are in the `internal::` namespace.

[33mcommit 5517428bc7acff831194b5647bff3a340b8198f8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 10 11:18:42 2019 -0400

    bug: Fix ReadObject() when reading the last chunk. (#2864)
    
    When reading the last chunk, if the chunk is between 128KiB and
    128KiB+16KiB, the library would return a short chunk (sometimes, it is
    complicated). Basically opening the stream would "peek" the data stream,
    with 128KiB. When unlucky, the stream would download all the data (not
    just the first 128KiB), mark the stream as closed, and save the extra bytes
    in the spill buffer.
    
    Future reads would not retrieve the data from the spill buffer because the
    stream was already closed.

[33mcommit a7feb1785fd5d0bd9fb8371310b72e5eaf67065d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 9 14:34:35 2019 -0400

    cleanup: Reactor file upload/download tests. (#2861)

[33mcommit 7f66f5a9ef44ddf975fc616742f1b576c1fdc29c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 8 12:29:17 2019 -0400

    cleanup: Refactor ObjectWriteStreambuf. (#2858)
    
    There `internal::CurlObjectWriteStreambuf` was not adding value, there
    was nothing "curl" about it (not anymore), it just made the inheritance
    tree deeper.
    
    Updated the API/ABI baseline, all the changes are in the `internal::`
    namespace and therefore not part of the public API.

[33mcommit 20a511e05930deb32a808e8a58d5e48e72c53525[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 8 12:28:47 2019 -0400

    TIL: Need to set startingDeadlineSeconds to handle failures. (#2859)

[33mcommit 4525a9a8f3bfc7fb21dfd834622c312c01f403d9[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Jul 5 17:57:58 2019 +0200

    Implement support for IAM conditions. (#2854)

[33mcommit af1b38909546aaa9c7848da2622a00c3b30a3c40[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 5 11:33:19 2019 -0400

    cleanup: Remove Travis support scripts. (#2855)
    
    Now that we no longer use Travis for builds, remove the support scripts
    that are no longer used. Those scripts and files that were shared with
    Kokoro are now in `ci/kokoro/docker/`.

[33mcommit b1bf05b1a219411bcd5a14145bc1e895c405b275[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 5 10:03:26 2019 -0400

    cleanup: Simplify Kokoro config files. (#2853)
    
    The build script can determine what is the build from the configuration
    file name. Less cruft in the configuration to maintain.

[33mcommit 7f13737c74aa566dc992a2b87cd4d4443703ad64[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 3 19:34:59 2019 -0400

    chore: Remove last Travis build (#2852)
    
    Make the clang-tidy build perform all the same checks as the last
    Travis build. In addition, this build now runs the same checks as build
    with the same name in the Cloud Spanner project.
    
    This is the last build on Travis, so I also removed the Travis
    configuration file. A future PR (or probably more than one) will remove
    the now unused Travis files.

[33mcommit 67543274dd8d6ac1af48ee782ae5d24fa6dd263b[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Jul 4 00:44:33 2019 +0200

    Implement NativeIamBinding/Policy and ops. (#2819)
    
    * Implement NativeIamBinding/Policy and ops.
    
    These are an alternative to Iam{Binding,Bindings,Policy}, which allows
    for manipulating directly on protobufs and hence unblock features like
    binding conditions.
    
    The NativeIam{Binding,Policy} objects are wrappers around protos, so
    they keep unknown fields which allows handling future protocol changes
    gracefully.
    
    For now, they are implemented in google::cloud::bigtable because adding
    googleapis to google::cloud is a bigger task. Once that's done, they
    should be moved there.
    
    * Fix library order.
    
    Otherwise linker fails with unknown symbols.
    
    * Fix clang-tidy errors.
    
    * Remove NativeIam{Binding,Policy} classes.
    
    We've concluded that raw protos are better.
    
    * Fix build errors after rebase.
    
    * Apply review comments.

[33mcommit da7749bcbf603431bc441c94d90e30cbc0d52c62[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Jul 2 16:00:43 2019 -0400

    bug: Fix typo in testing_util/config.cmake.in (#2851)
    
    * Fix typo in testing_util/config.cmake.in

[33mcommit 7182d0db8f96e660eccae2cb6eee11cf7ff520f2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 2 14:08:29 2019 -0400

    Fix typo. (#2849)

[33mcommit 21656366887eb2a3286d6be79d8e67fb3a4e004a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 2 13:45:08 2019 -0400

    Split README vs. INSTALL builds (#2850)
    
    Split the builds that check the README instructions vs. the builds that check the
    INSTALL instructions. They have some stuff in common, but the builds take 45m
    to run because they build the libraries several times.

[33mcommit ce9e9343787a641bd6f1a7b0bdc2d43f80bdc48c[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Jul 2 13:30:11 2019 -0400

    bug: Include 'IncludeGMock.cmake' in testing_util/config.cmake.in (#2848)
    
    * Include 'IncludeGMock.cmake' in testing_util/config.cmake.in

[33mcommit f6e9eff7880757ab58b4c947de1db48b6211933f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 1 20:02:09 2019 -0400

    chore: Remove Travis code coverage build. (#2847)

[33mcommit 9e10bc2d48e85da60c21b4d4c2ba8727cbf7757a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 1 16:48:20 2019 -0400

    Bump version numbers after cutting release. (#2845)
    
    Also the release notes in google/cloud/README.md had the wrong version
    numbers, will fix that in the branch on a separate PR.

[33mcommit b5c93282f95658b3392d697b3f3654365a84b20a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 1 15:58:34 2019 -0400

    chore: Enable code coverage build on Kokoro. (#2844)
    
    This is the first step to remove the code coverage build from Travis.
    For a (hopefully short) while we will have two code coverage builds.

[33mcommit cca80c0c844bcdb123c73dbce19d2ffc1c61425c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 1 15:21:37 2019 -0400

    doc: Update Bigtable release numbers. (#2843)

[33mcommit 5886322447c64ecc794afc28f925526e1878e567[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 1 13:17:34 2019 -0400

    doc: Update release notes. (#2829)

[33mcommit 2faf676a126c772b117f8ec9c17e7f853b304e7d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 30 22:08:56 2019 -0400

    cleanup!: Remove RawClient::WriteObject(). (#2840)
    
    With the changes to use resumable uploads exclusively this function (and
    the corresponding functions in the derived classes) is no longer used.
    And once the function is removed then the
    `internal::InsertObjectStreamingRequest` class is not used either.
    
    BREAKING CHANGE: this change removes virtual functions from the
    `storage::IdempotencyPolicy` class, some customers may have implemented
    their own custom versions of this class. If so, their custom policies would need
    to be adjusted.

[33mcommit 1427c68c0ccf697ae514ff899a141b75bcacfb83[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 30 15:40:46 2019 -0400

    feat: Add functions to convert google::rpc::Status. (#2838)

[33mcommit 806d77a1c171000d9c6739a3e4512a49a52ceff3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 30 15:40:01 2019 -0400

    cleanup: Refactor ResumableUploadResponse. (#2834)
    
    In a future PR I will need to include
    `storage/internal/resumable_upload_session.h` from a public header.
    Refactoring `internal::ResumableUploadResponse` out of the bulky header
    where it was will minimize the impact of that future change.

[33mcommit 9776ce0b004a593b47332a3c51c0f576de8b109c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 30 15:39:38 2019 -0400

    bug: Use decorators for WriteObject. (#2835)
    
    This enables the retry and logging decorators for
    `storage::Client::WriteObject()`.  There is a lot of cleanup left to do,
    but I think that can wait as this fixes a bug where transient failures
    during an upload are not retried.

[33mcommit 12ae06bf0947595370d1fa2260a93281734bf372[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Sun Jun 30 15:39:08 2019 -0400

    Fix how grpc_utils loads gRPC (#2839)

[33mcommit dfab2e6804c1b1d074ecf2663afeafe4264d0d38[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Sat Jun 29 17:51:42 2019 -0400

    Move grpc_error_delegate to new grpc_utils library. (#2833)
    
    * Move grpc_error_delegate to new grpc_utils library.
    
    * Add GRPC_UTILS_VERSION variable.
    
    * Fix a couple of typos.
    
    * Fix bazel build errors.
    
    * Fix clang-tidy error.
    
    * Fix formatting.
    
    * Fix typo.
    
    * Add missing find_dependency

[33mcommit 571414492c28c215d2d932d92f3b91767745939f[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Sat Jun 29 11:39:35 2019 -0400

    feat: Add ability to optionally install google/cloud/testing_util (#2823)

[33mcommit f1f1cc621d13c905d0a49d08a9251dfd751a8f51[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Jun 28 17:57:42 2019 -0400

    Add \$ORIGIN to CMAKE_INSTALL_RPATH only on Linux. (#2830)

[33mcommit 83423775ddad81075935c775191a84663b95dd78[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Jun 28 23:56:55 2019 +0530

    Storage client mock (#2822)

[33mcommit 4126e4b4dda8b0cb01e1d8987f5b435ef0f75204[m
Author: Tim Ford <timfford@gmail.com>
Date:   Fri Jun 28 09:33:20 2019 -0700

    Allow specifying non-default scopes and subject in GoogleDefaultCredentials(). (#1866) (#2762)
    
    This is to enable callers who don't know ahead of time what type of
    credential they'll create (hence calling GoogleDefaultCredentials and
    not one of the more specific functions), but who need to specify the
    scopes and/or subject to be used if a service account file is used.

[33mcommit 4772b916d66b2b1108294ec2812b9dd63bdba352[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Jun 28 10:22:39 2019 -0400

    feat: Add equality support to StatusOr<T> (#2828)
    
    * feat: Add equality support to StatusOr<T>
    
    Fixes #2825
    
    * removed purposly broken test case
    
    * removed unneeded inline on template
    
    * PR comments

[33mcommit 0ac7b896ee447569993717ee6a09bb48573130fc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 27 13:41:01 2019 -0400

    cleanup: Fix constant names and enforce them. (#2824)
    
    We were inconsistent in our naming of constant variables, and the
    enforcing was broken. The Google Style Guide requires constants to use
    `kCamelCase`. I changed the `.clang-tidy` configuration to enforce this
    naming.
    
    I did not change any constants that were part of the public API, I did
    not see the point of breaking the API for this.

[33mcommit 769671ef9fb50556d98f8f0cc68f9eb89e8a15f1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 26 16:29:52 2019 -0400

    cleanup: Remove more cruft from bigtable::internal. (#2821)
    
    Lots of classes to support asynchronous APIs with callbacks (as opposed
    to futures). I wish for a more systematic way to find them than looking
    around and noticing the code is unused.

[33mcommit 43a1ca335e1bbb1133205aef29e4236c269ba2db[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 26 09:41:27 2019 -0400

    cleanup: Remove unused class in internal namespace. (#2820)

[33mcommit 4ef0f689b284f4f721ca72a50e39da4106c95852[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Jun 26 07:51:43 2019 -0400

    Adds an assignment operator so that StatusOr<T> can be assigned to
    from a non-OK Status.
    
    Fixes #2816

[33mcommit 6d03ca221c0f3b1ef715abb87a1d4904977b75fc[m
Author: Jseph <jsephcx@gmail.com>
Date:   Tue Jun 25 12:49:50 2019 -0700

    Resuming a Finished Upload Returns Closed Stream (#2804)
    
    When resuming a finalized upload return a stream where (a) `IsClosed()` returns
    `true` because one cannot add more data, and (b) `metadata()` returns the actual
    metadata of the uploaded object.
    
    Many thanks to @Jseph for the patches and to @remyabel for helping with the review.

[33mcommit 09d542b746139c822f6357b6adcb1945639c0e9c[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Mon Jun 24 13:53:48 2019 -0700

    Update the docs link to googleapis.dev (#2809)

[33mcommit de761d06c3a7b6004aacba4776add0227b95a369[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 24 13:21:17 2019 -0400

    cleanup: Simplify generation of version_info.h. (#2808)
    
    These files used to be generated by CMake and BUILD files on each
    compilation, but they rarely change, and to support the BUILD generation
    we generated and committed *_version.bzl files with basically the same
    contents. In this PR we change the CMake scripts to generate
    version_info.h in the source directory. We commit these files and the
    BUILD files are simpler. This also removes the need for those
    *_version.bzl files.

[33mcommit 999b53988fcd0e3dec8435bf44a4f44bb8162d03[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 24 09:59:11 2019 -0400

    Do not use Etags in HMAC Key tests or samples. (#2805)
    
    Apparently they do not work as I expect, until we figure out if my expectations
    or the code are wrong, just don't use them.

[33mcommit c2f23a1f18cf6d66a0049b56bb0a40142afc2bdb[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Sat Jun 22 06:12:32 2019 -0700

    Change refdocs portion of the release process (#2801)

[33mcommit aa5193ac3158c24a8afeacd94c7537d591ec6f3d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jun 22 08:24:30 2019 -0400

    bug: Use separate service account in CI tests. (#2803)
    
    We need to use a separate service account for each run of the CI tests,
    otherwise they interfere with each other when more than one build runs
    at the same time.

[33mcommit 4f147ea17bec439df08ee4ef210da825d329eebb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 21 16:10:51 2019 -0400

    cleanup: Another small amount of import friction. (#2800)
    
    I missed these problems in the last PR to reduce friction.

[33mcommit 0126fe419e92ceef5c35cc0452adfd1224190393[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 21 13:30:53 2019 -0400

    Install protos in googleapis (#2799)
    
    When we compile the googleapi libraries we should install their proto
    files too, that way other protos that import them may use them too. I
    refactored the code to generate these libraries because it was really
    tedious to change them otherwise. Note that the destination directory
    for these proto files is `$PREFIX/include`, the protobuf library places
    its own protos there, so I figured it was the right place.

[33mcommit ed06c5f5e493dbfc12a72ceb3b076bb7e1686c49[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 21 13:14:39 2019 -0400

    Restore HMAC Key integration tests. (#2798)

[33mcommit 7855e7da10b60ef48612b99fd723794ac5a868f2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 21 11:24:49 2019 -0400

    Reduce import friction into Google. (#2794)
    
    When we import the code into Google we need to apply a number of code
    transformations. The least desirable of these transformation is a series
    of patches to handle how some `bytes` proto fields are mapped to C++
    inside Google. These fields are always mapped to `std::string` in the open
    source version of protobuf, but are handled as a different type, inside Google.
    For extra fun, this type does **not** have the same API as `std::string`.
    
    This PR introduces three changes:
    
    - A type alias for each of the affected fields: `RowKeyType`, `ColumnQualifierType`
      and `CellValueType`. It is important to note that we have **no plans** to change
      the definition of these aliases for the external version of the C++ client.  These will
      map to `std::string` for the foreseeable future. Changing the definition of these would
      be considered a major API breakage.
    - Overloads for most constructors (and several functions) that can accept `std::string`
      or the internal Google type. As a side benefit, these overloads also accept
      `std::string_view` when you are using C++17.
    - A series of functions (in `google/cloud/bigtable/internal/google_bytes_traits.h`) to
      operate on these types. Inside Google we will have different versions of these
      functions.

[33mcommit 18c04198e178eca426b25f98f34599b7e7554958[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 20 20:59:21 2019 -0400

    Fix typo in external project include guard. (#2795)

[33mcommit a857e6132178980fbf52c6ae8e21a45fc84870ae[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 20 10:23:24 2019 -0400

    Initial config for Bigtable benchmarks. (#2788)
    
    Create GKE configuration file (templates) to launch the Bigtable bencharks.
    The benchmarks run every hour, using the latest version of the Docker image available
    at that time. This Docker image is automatically created on each commit to `master`.
    
    We run the benchmarks periodically because this is the easiest way to guarantee that
    only one instance of each benchmark is running.
    
    The raw logs from the benchmarks are captured in BigQuery tables, the analysis and
    dashboards will come in a future PR.

[33mcommit 0798b91cc6adac7448092e7742cf03f649a3449f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 20 00:58:50 2019 -0400

    Reduce friction for the next import. (#2792)
    
    Need an exclude `#include` for `google::protobuf::FieldDescriptor`
    inside google. And it seems better to move the function definition to
    the .cc file since (a) it is big, (b) it requires more includes, and (c)
    I do not think it is that performance critical.

[33mcommit 67cd884f7294f2d3599ed04ba6fc280b062bd4bb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 20 00:57:44 2019 -0400

    Run the storage benchmark as a CronJob. (#2790)
    
    Using a cron job seems to work better: at most one copy of the benchmark
    is running at a time, and it picks up the new Docker image without
    having to reset the YAML file.
    
    Also save the raw logs to BigQuery. It is "easy" to then parse the logs
    or output them to a more structured BigQuery table (and then plot stuff
    there).

[33mcommit 532df908daf69def729554d4b89aa3fdbe050da4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 18 15:14:50 2019 -0400

    Automatically build image for benchmarks. (#2787)
    
    In this PR we describe how to automate the steps to create the Docker
    image for the benchmarks. Once this is merged to `master`, we can enable
    the benchmarks and save their logs, but that will come in separate PRs.
    
    Also include the bigtable benchmarks in the image, as we will enable
    those in a future PR too.

[33mcommit a8d0b76a9852c3024d3f7ef3603e6e1bff3edc76[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Tue Jun 18 11:29:59 2019 -0700

    Use correct docs version (#2785)

[33mcommit 8261ffab4198aaf719a2dc5f8cba8652d8da999f[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Sun Jun 16 21:52:14 2019 -0400

    cleanup!: Don't include nljson.h in some public headers. (#2784)
    
    BREAKING CHANGE: this removes two functions from the public API that converted strings and `nljson` objects to a `google::cloud::storage::ServiceAccount`. These functions should have been cleaned up before 1.0 and were never intended for external use.
    
    Part of the work for #2772
    
    Thanks to @remyabel for these fixes.

[33mcommit ef595beeea9275878b862c0aaab8f2f7cf7fdaa5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 16 15:53:22 2019 -0400

    chore: Minimize impact of package server outages. (#2781)
    
    * chore: Minimize impact of package server outages.
    
    When the package servers for a distro go bad (and they do from time to time),
    our builds break because we cannot rebuild the images with the latest and
    greatest packages. In this PR we use Google Container Registry (GCR) to cache
    the Docker images with all the base packages we need to build the code.
    We do this only for the *install* tests, because those use the more obscure
    distributions, and they tend to fail more. We will use the same techniques
    for all builds in a future PR.
    
    The expectation is that GCR has a better observed SLO that the combination
    of all the package servers out there. It is based on GCS, so there is good
    reason to believe it should work well.
    
    To prevent our base images from getting stale, the builds on the `master`
    branch:
    - Try to build the base image, without using the cache.
    - If successful, they push the new base image up, and use that to run
      the build.
    - If not successful, they still use the cached image to run the build.
    
    This technique does not work well if the Dockerfile installs additional packages
    after the initial base image. I plan to refactor the builds in a separate
    PR to eliminate such cases.
    
    The cache is also invalidated when the contents of the base image changes,
    that is, we add a new tool or depedency to the image. That is relatively
    rare. We expect that rolling out such changes when the package servers
    are having an outage does not happen often, and if it does we will just
    need to wait the outage out.

[33mcommit 618925d7f6be9c374a3fec6f535e9a99b5efbe30[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Sat Jun 15 13:53:26 2019 -0700

    Add a kokoro job for generating and uploading refdocs to googleapis.dev (#2763)
    
    * Add configs and script for publishing refdocs
    
    * Add an option for using master for refdoc links
    
    * Fix style
    
    * Address code review
    
    * Fix style
    
    * Change how to trim
    
    * Refactor Doxygen configuration
    
    * Fix style
    
    * Introduce a trampoline wrapper script
    
    * Add number of CPU
    
    * File permission
    
    * Build the Docker image when BUILD_DOCKER_IMAGE is true
    
    * Remove pip install statement

[33mcommit 151cf0f467405773272bd321712ea3396c436bc5[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Sat Jun 15 10:15:16 2019 -0400

    Create separate CMake files for the test installs (#2768)
    
    * Create separate CMake files for the test installs
    
    * Address review comments.
    
    * Fix typo
    
    * Remove more code I forgot to remove.
    
    * Fix build errors.

[33mcommit ab70f91d1bc7b7237290ac495d4b82e9be6fabda[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 14 16:58:31 2019 -0400

    cleanup: Fix integration tests for failures. (#2778)
    
    Some of the integration tests for failures used "localhost:0" as a
    destination address that was known to fail. Recent versions of libcurl
    generate a different error for those addresses. Use "localhost:1" which
    should work unless the build is running on a machine running ancient
    Unix.

[33mcommit 2450f99971564305aa4599eabb6ea232ec8e5a60[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 14 16:46:51 2019 -0400

    bug: Treat files as binary for {up,down}loads. (#2776)
    
    The storage Client::{Upload,Download}File functions should treat the
    underlying files as binary. We should not be in the business of parsing
    the customer data. If the customers want to convert the files from
    Windows format to Unix format during the transfer they can use
    `Client::WriteObject()` and `Client::ReadObject()` instead.

[33mcommit ee807baccab8ed6ffd08488b24eba8aa39aef765[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 14 14:59:47 2019 -0400

    Cleanup CMake configuration options. (#2777)
    
    Mark the options that are unlikely to be useful as "advanced", so they
    do not show up in the CMake UI. Prefix all the options (that I could
    find) with `GOOGLE_CLOUD_CPP_` so folks can tell what they are about.

[33mcommit 66a193d966b03445d49008c284d47ae1f2047364[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 14 13:56:14 2019 -0400

    Add Visual Studio Code files. (#2775)
    
    Visual Studio Code is convenient when debugging Windows issues, we need
    to ignore the directories where it stores metadata though.

[33mcommit ef9d062721d7a6522c5f6e00fe1f93ad8b700c12[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 14 12:54:07 2019 -0400

    bug: Fix nlohmann json macro leaks. (#2774)
    
    Unfortunately we still expose the nlohmann headers in our public
    headers, which results in leaks of macros to the user's namespace. Until
    we have a better fix (see #2772) this removes all the macros I could
    find (i.e. anything starting with `NLOHMANN_`).

[33mcommit 3efb8bea0ad33d018b1ef8de98f4d7bf97ecbf73[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 14 10:55:47 2019 -0400

    Reduce data copies in Client::ReadObject. (#2759)
    
    When the application uses `std::basic_stream<char>::read()` we can copy
    the data received in the download straight into their buffer. And when
    the application calls something like `getc()` we can still copy directly
    into the internal buffer in the `ObjectReadStreambuf`.
    
    I had to change the internals of `CurlDownloadRequest` to support this:
    libcurl requires write callbacks (this is the callback for downloads,
    strange naming, but whatevs) process the full buffer they are given.
    When the application gives us a buffer in `.read()` that does not line
    up perfectly with the write callback buffer we need to save the data
    somewhere. I added a `spill` buffer in `CurlDownloadRequest` to keep
    this data. These are typically small and we can use a fixed-size array
    to support them.
    
    Update the API/ABI baseline. All the changes are in the
    `storage::internal::` namespace, and therefore not breaking or affecting
    the public API, but the tools do not know that.

[33mcommit d8b2cf0fbdc5063465c12bd43438dc649c1f41e3[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Jun 14 15:57:58 2019 +0200

    Fix bigtable_get_family code samples. (#2765)
    
    Remove the `bigtable_family_ref` which doesn't translate into C++
    client.
    
    Make `bigtable_get_family_metadata` and `bigtable_get_family` to the
    same snippet because there is no difference between them in the C++
    client.

[33mcommit c3f4c12e5f1cde9d8bf6c8670e3ca64081bde09c[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Thu Jun 13 14:56:03 2019 -0700

    Retry network commands for less flake (#2761)
    
    * Retry yum commands for less flake
    
    * Add grpc workaround to the generator script
    
    * Add retry3 to all the Dockerfiles
    
    * Regenerate INSTALL and README

[33mcommit 36e95a6a2c7f1a05ebed8edff61ffdf356fc04f1[m
Author: Grant Timmerman <granttimmerman@gmail.com>
Date:   Thu Jun 13 13:33:53 2019 -0700

    Remove storage location to match other code samples (#2760)

[33mcommit 1b6f61a9acba9dcfac4dee7add756393dfdfe496[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Jun 13 20:17:36 2019 +0200

    Reject IAM Binding protos with unknown fields. (#2764)
    
    The key motivation is the `condition` field, which breaks the assumption
    that the there is one member list per-role. However, to make it a tiny
    bit more robust we reject all Binding`s unknown fields.
    
    As a byproduct, parsing JSON was changed to return Status instead of
    throwing (it had been doing both).

[33mcommit d2bf022dd471d14cc196149769e38bfb6cecc6a1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 12 11:34:59 2019 -0400

    Create a configuration file for Google Cloud Build. (#2758)
    
    We will use this file to automatically (or at least "with a single
    button push") create the Docker image to run the benchmarks.

[33mcommit 0347fb585e11da1d4e36c5dad2ad157064ba5db2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 12 07:58:22 2019 -0400

    Create support files to run benchmarks in GKE. (#2756)
    
    To build and run benchmarks in a (mostly) reproducible way I created
    configuration files to create a Docker image with the benchmarks
    installed, and to run said Docker image in GKE. Eventually I would like
    these to automatically build and run using Google Cloud Build, but for
    now they are very handy when we need to run 20 copies of the benchmarks.

[33mcommit e8c138c7fe8ad663b6565a72d45068392282c1fa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 12 07:23:37 2019 -0400

    Change hash validators to operate on raw buffers. (#2754)
    
    To minimize data copies we need to operate on `char*` and `char const*`
    buffers provided by the application without storing them in a
    `std::string`. This PR changes the hash validators to work with such
    buffers.
    
    Update the API/ABI baseline because we changed the API for classes in
    `google::cloud::storage::internal::`.

[33mcommit 75b62d0bb931d475137342d2d3932e588161fe95[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Tue Jun 11 18:44:08 2019 -0400

    Disable optional's converting c'tor when U == optional. (#2757)
    
    This change disables optionals converting constructors (i.e.,
    `optional(U&&)`) when `U` is the same as `optional<T>`. In this
    situation we instead want to use optional's normal copy constructor.
    
    This bug showed up in our gcc 4.8 tests when using `optional<bool>`. I
    *think* gcc 4.8 exposed this issue because it probably *copies* the
    optional bools (e.g., on resize) instead of moving them. And an lvalue
    of type `optional<bool>` *is* explicitly convertible to type `bool`
    because of its `explicit operator bool()`, so the converting constructor
    was in the overload set, and in fact it was a better match for a
    non-const lvalue than was the copy constructor whose argument type was a
    const value.

[33mcommit ef706cfb61acc780b80ab5153763ea9095b03bc5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 11 17:10:47 2019 -0400

    Use check_cxx_symbol_exists() to search for RUSAGE_THREAD. (#2752)
    
    We were using check_symbol_exists() which uses the C compiler. On Linux, the C++ compiler defines `_GNU_SOURCE` by default, that enables `RUSAGE_THREAD`, and we can use it in our code. The CMake test based on the C compiler could not find the symbol because the C compiler does not define `_GNU_SOURCE`.

[33mcommit 2398729dc281a74dd99c2c48fd950dc7e9bb4531[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 11 16:40:55 2019 -0400

    Make build metadata configurable. (#2753)
    
    On development builds we annotate the build with the short git commit
    id, but in some cases this is not available (Google Cloud Build does not
    send the .git directory to the server), and in other cases we want to
    override it. Allow the developer (or script) calling `cmake` to set the
    build metadata.
    
    Update API/ABI baseline as this change removes a function in
    `google::cloud::internal::`.

[33mcommit 8ca7f55206d5baedb23f0b71957211497a84b767[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Tue Jun 11 12:47:36 2019 -0700

    Add custom doxygen layout (#2755)

[33mcommit 4f07d13f3d465b78ecffd19d596edef6e3224529[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Tue Jun 11 08:51:41 2019 -0700

    Allow an arbitrary subdir for uploading docs (#2751)

[33mcommit afd04acc5970de30bf7df09a80c74f7043a5e0da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 10 15:31:02 2019 -0400

    Add options to control number of samples. (#2749)
    
    To perform statistical analysis on the benchmark results we need to
    control the actual number of iterations. In many cases we want a minimum
    number of iterations. I think we still want the options to control the
    maximum test duration, it is useful when running quick manual tests.

[33mcommit 8709e23dae246e661116bbdf999152f68842f7ad[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 7 19:14:59 2019 -0400

    Fix one warning by Clang's static analyzer. (#2747)
    
    The static analyzer points out that the code can crash, and it is true:
    the application could call `operator++()` on the `.end()` iterator.
    While that is UB and crashing would be "Okay", so is /not/ crashing and
    doing nothing. I think the code is more readable like this anyway.

[33mcommit d93be78d816d72edef7b86d04621af86f0608b2d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 7 17:10:00 2019 -0400

    Do not use unsigned literals in EXPECT_EQ(). (#2746)
    
    This is no longer needed (if it ever was), so we can cleanup the code a
    little bit.

[33mcommit a186208b79d900b4ec71c6f9df3acf7638f01dc6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 7 14:51:16 2019 -0400

    Support running scan-build manually. (#2741)
    
    Too many false positives to enable automatically, but it does produce
    interesting messages. I want to be able to run it manually without too
    much effort.

[33mcommit 6faad196aa569dd5edbfc2b5cadcc94591f8afd1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 7 11:45:11 2019 -0400

    chore: Update Cloud SDK version. (#2745)

[33mcommit 657395c2424662d71ba139ca4db9f479a5ffd891[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 6 16:55:27 2019 -0400

    Remove unnecessary 'unsigned' literals. (#2744)
    
    Probably because I am lazy, I started using unsigned literals when
    comparing to an unsigned. This is not needed, warnings are produced when
    comparing signed vs. unsigned *variables*, but the literals are promoted
    to the larger (unsigned) type.

[33mcommit ec767162045961e59504978abdea8629e9299b2f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 6 16:54:55 2019 -0400

    Update googleapis to a recent version. (#2722)
    
    * Update googleapis to a recent version.
    
    Newer versions of googleapis include Bazel BUILD files to compile (most)
    of the protos, and in many cases include Bazel rules to generate C++
    libraries for these protos. Unfortunately we still need a custom
    googleapis.BUILD file because the bigtable protos do not have C++
    support (yet).
    
    I had to update gRPC at the same time, because it includes better
    `cc_grpc_library()` rules too.
    
    One has to be careful to disable the support for other languages in the
    WORKSPACE file, or the googleapis Bazel rules require code generators
    for Java, Go, and possibly other languages.
    
    I was also able to simplify the dependency on OpenCensus, as gRPC now
    pulls the right dependencies for it.
    
    Note that I removed the support for the Spanner protos in the
    googleapis.BUILD
    
    This is all based on work that @scotthart did for the Spanner library.
    
    The newer googleapis adds features to google/iam/v1/policy.proto which
    require additional libraries.
    
    Now that we depend on Bazel rules inside googleapis we need to explain
    how to configure these rules.
    
    Protobuf does not set RPATH correctly, I submmitted a PR:
    
    https://github.com/protocolbuffers/protobuf/pull/6204
    
    Until then we need to workaround it.
    
    Update API/ABI baseline: these are all changes in the protobuf-generated files,
    nothing to see here.

[33mcommit 1cc95570aaf877f9e86f64f50b7de246d5dad604[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 6 15:14:36 2019 -0400

    Enable -Wextra if the compiler supports it. (#2739)
    
    GCC and Clang provide additional warnings with -Wextra. While the value
    of these warnings might be limited, our customers may compile with
    -Werror and -Wextra, we do not want to break their code in this case.
    
    I also caught a couple of bugs in the examples by turning on these
    warnings, so they are useful.

[33mcommit 5ba1556d3545fd60e3d4f5bc62565ae379de4b02[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 6 14:27:56 2019 -0400

    cleanup: Refactor install for Cloud SDK. (#2740)
    
    Refactor the code to install the Cloud SDK (and some modules) to a
    single script shared by all the Dockerfiles. That makes it easier to
    upgrade to a newer version from time to time.

[33mcommit aee09b9d64bfadb52513a99aa76b16f19aa9a2cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 5 18:33:42 2019 -0400

    cleanup: Remove sanitizer support from CMake. (#2737)
    
    We are using Bazel for all the sanitizer builds, so we can cleanup the
    CMake files a bit.

[33mcommit 2dce970525deb2eab59dbf13b7e8b0e616107a45[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 5 18:33:26 2019 -0400

    Fix resource leak in nightly test. (#2736)
    
    The drive script just created one extra instance, did nothing with it,
    and leaked it. I am not sure why I did that: a mistake I guess.

[33mcommit d31ac10f6623111be099413881347002c2537531[m
Author: Scott Hart <sdhart@google.com>
Date:   Wed Jun 5 17:06:29 2019 -0400

    Bump version numbers (#2729)
    
    * bump version to one past release

[33mcommit 8d29713dd29d9c96b3b335efb015bff9c7960633[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Wed Jun 5 12:40:42 2019 -0700

    Support new directory structure of the refdocs (#2731)
    
    Introduce a new option GOOGLE_CLOUD_CPP_GEN_DOCS_FOR_GOOGLEAPIS_DEV which changes the relative locations of the doxygen tags.

[33mcommit b3e9967737983748a9aa4adb6a8e1f58a7334b7c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 5 15:09:26 2019 -0400

    Move libc++ build to Bazel. (#2735)
    
    Use Bazel to compile with libc++, this is much easier to maintain than
    the CMake approach as Bazel compiles all the dependencies from source
    with the same flags.
    
    One caveat: Bazel injects `-lstdc++` always, even though the compiler
    does not need it. I was unable to disable this, but seems harmless as
    `-lc++` and `-lc++abi` appear first in the command-line. Also, I
    verified only the libc++ headers are included (`__GLIBCXX__` was not
    defined).

[33mcommit a8a3e9b82155f16df1a4f3a294bea708a2756f51[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 5 14:35:57 2019 -0400

    Migrate UBSAN build to Bazel. (#2733)
    
    For what is worth, I tested this by enabling the right test in
    google/cloud/bigtable/force_sanitizer_failures_test.cc.

[33mcommit 8566df2618bea01d36f6bfa150c61da607ed7cd3[m
Author: Scott Hart <sdhart@google.com>
Date:   Wed Jun 5 13:52:58 2019 -0400

    updated release notes for v0.10.0 (#2728)
    
    * updated release notes for v.0.10

[33mcommit b2fcf441a317ac2f9d74b772e3d76a71cc623ba4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 5 09:40:50 2019 -0400

     bug: Use one mutex per data kind in CURLSH. (#2730)
    
    We are using libcurl incorrectly. I misread the documentation for
    libcurl and created a single mutex for all the "kinds" of data in a
    CURLSH handle. This is incorrect:
    
    https://curl.haxx.se/mail/lib-2019-06/0011.html
    
    I changed the library to use one mutex per data kind. I wrote a
    program to reproduce the bug, it never worked, but I think the
    documentation on how to run large-scale tests is useful, so I
    am merging the program anyway.

[33mcommit e088c20d1ffa1231f4d4ebdc9c291671246b525c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 4 13:52:24 2019 -0400

    Move ASAN build to Bazel. (#2727)

[33mcommit a2a73afb55a5a4b9eaffbad6ff96ce424acac35f[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Jun 4 18:33:02 2019 +0200

    Implement Table::AsyncReadRow. (#2726)
    
    * Implement Table::AsyncReadRow.
    
    * Eliminate unnecessary copy.
    
    * Fix linter warnings.
    
    * Fix linter warning.
    
    * Apply review comment.
    
    * Fix a typo.

[33mcommit d674de3b32b3eb4de69b96c35aa35e6727dd6f77[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Jun 4 22:01:41 2019 +0530

    Adding install rule to install storage/testing/mock_client.h (#2723)
    
    * Adding install rule to install storage/test/mock_client.h

[33mcommit 7fc1586a855dfb728d3285b6c7392834e7234f67[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 3 21:05:29 2019 -0400

    bug: WriteObject now supports empty streams. (#2714)
    
    Support writing empty streams via `storage::Client::WriteObject()`, the
    code was not right at all. This changed the API (and ABI) for a number
    of classes in the `storage::internal::` namespace, so we have to update
    the API/ABI baseline.

[33mcommit f0f9bef6b20a801e01daa5193958385ff88ed3c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 3 14:32:25 2019 -0400

    Fix other places where we mention http_archive(). (#2719)
    
    We need to use `strip_prefix` with `http_archive()` or things don't
    work. In the last contributed PR I forgot about them.

[33mcommit ad4dc2dfc792735f6ed2d7496b8ffccee1df18a6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 3 13:55:18 2019 -0400

    cleanup!: Remove strong string types (#2706)
    
     BREAKING CHANGE: Remove all the "strong types" for bigtable, such as `InstanceId`, `ClusterId`, `TableId`, etc. These were used inconsistently, and because they are all strings, they add very little value. This changed some of the constructors for `bigtable::Table` and several member functions in `bigtable::Table`, `bigtable::TableAdmin`, and `bigtable::InstanceAdmin`.

[33mcommit 22c810660b4acd41be68d40e666bed62ce423c99[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Jun 3 17:59:14 2019 +0200

    Implement Table::AsyncReadRows. (#2701)
    
    It follows the same principles as `CompletionQueue::MakeStreamingReadRpc`, i.e. accepts a callback for rows and a callback for overall stream status. The row callback is expected to return a `future<bool>`. To allow for flow control., before the `future<>` is satisfied, the client will not be receiving more data

[33mcommit d83c9462b265088ebdc7dddf6805eaa3c297dac6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 3 11:38:17 2019 -0400

    cleanup: Prefer the CMake CONFIG module for CURL. (#2720)
    
    This gives us the standard targets, with the correct dependencies and
    flags. Fallback on the native CMake module if nothing else is available.
    This is a port of the `vcpkg` patch for google-cloud-cpp, once merged we
    can cleanup the patch from the `vcpkg` port.

[33mcommit 7bb23b745eb62b643612e315347288f037fe06b8[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Jun 3 18:09:21 2019 +0530

    moving ref3339 formatting and parsing classes from storage to google_cloud_cpp_common (#2724)
    
    * moving ref3339 formatting and parsing classes from storage to google_cloud_cpp_common
    
    * update ABI baselines

[33mcommit 92500a086cab360089fcb5581def5d62fcf1750a[m
Author: Brian Richardson <skinny@knowhere.net>
Date:   Fri May 31 15:37:31 2019 -0700

    Update INSTALL.md Bazel instructions to include strip_prefix parameter and call grpc_deps() manually.  Thanks coryan! (#2718)

[33mcommit 693ad308385ccaaff65ae33dd7bef42c0677cecf[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sat Jun 1 03:43:16 2019 +0530

    Add location_type field to BucketMetadata (#2705)

[33mcommit 4922eaf322ec1f8292b8f6656434ec548949e821[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri May 31 14:39:03 2019 -0400

    Fixes bug caused by moving from a forward reference (#2716)

[33mcommit 6fa9a63ab25571ca96a5116cb092c952d9d23d4e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 31 09:50:04 2019 -0400

    Remove more async support classes. (#2708)
    
    More classes to support the old-style Async*() operations that are no
    longer used.

[33mcommit 18185f8f7978bf0d060c2b86f71ff499e3ee5596[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 31 06:28:00 2019 -0400

    Fix TODO references. (#2707)
    
    TODO entries should refer to a GitHub issue, not a person. That was
    probably my mistake.

[33mcommit bcefc9f6322860b546ee5727cb63cdb191592a7c[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Thu May 30 08:23:59 2019 -0400

    chore(storage): Remove remnant curl_streambuf.h header (#2703)
    
    This probably should have disappeared in #2693.

[33mcommit 1c32f4b91f9af86df3284194758a17ae1679e7d6[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Wed May 29 20:06:39 2019 -0400

    chore(bigtable): Remove some "namespace noex" remnants (#2702)

[33mcommit d6ab13ed74f3c99be3737ba6e06e361cb838bd60[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 29 13:50:41 2019 -0400

    bug: Fix build for macOS+CMake. (#2698)
    
    I did not think about macOS when using RUSAGE_THREAD, which is not a
    thing on BSD-based systems. Fixed the code to detect if the symbol exists,
    if it does use it, if it does not, do not allow more than one thread in
    the benchmark that measure CPU utilization.

[33mcommit baa3a03fa5ff4a8ad25a65b92f57782b0c330a4b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 29 13:10:02 2019 -0400

    Document bigtable::Consistency enum and its values. (#2700)

[33mcommit 981e63825ef53ce64044fa30ca355734c555855e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 29 13:09:48 2019 -0400

    Return an enum from Table::CheckAndMutateRow. (#2699)
    
    Returning a bool via `StatusOr<>` is prone to errors, too easy to say
    `!status_or` when you mean `!*status_or`.

[33mcommit b7af0a917f84cfd5401869b40864699648021a30[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 28 17:08:40 2019 -0400

    Implement a benchmark for {Upload,Download}File(). (#2696)
    
    This is similar to the other benchmarks, and mostly motivated because we
    have reports of poor performance for these operations on Windows.

[33mcommit acb7e8e58231adcc487edf7804ee03d656fb0975[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 28 11:49:42 2019 -0400

    A throughput vs. CPU benchmark. (#2695)
    
    Introduce a new benchmark to measure the throughput when uploading and
    downloading objects, as well as the CPU cost (think "cpu cycles per
    uploaded byte") to achieve that throughput. We will use this benchmark
    to evaluate some performance improvements I have in mind.

[33mcommit b4185486373cfa96ce706fb129e57b67beed546b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 28 09:49:51 2019 -0400

    Fix missing include reported by iwyu. (#2694)

[33mcommit 6901e5fc3341ee6d0b45fd0899adb6d8f47de931[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 27 22:43:59 2019 -0400

    feature: Automatically restart downloads on error. (#2693)
    
    A download can be interrupted for a number of reasons, but most commonly
    because the application does not read data from a download for several
    minutes (about 6 seems to trigger a disconnect, but that is purely an
    observation). With this change the download is restarted from the last
    received byte, and using the object generation used in the original
    download too.
    
    This change updates the API/ABI baseline because many classes in
    `google::cloud::storage::internal` changed. Since this namespace is not
    part of the public API these do not need to be flagged in the release
    notes, but the tools we use flag all changes.

[33mcommit 4a89cc74911816c8649813c92facb7e0ce7f33d2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 27 10:45:16 2019 -0400

    bug: Service account credentials not refreshing properly. (#2691)
    
    The code was not updating the expiration time when creating a new credential,
    effectively "refreshing" by creating an immediately expired credential. Most of the
    changes are (as usual) needed to make the code testable, in particular,
    `oauth2::ServiceAccountCredentials` was not using the mockable clock everywhere,
    and we needed functions to parse url-safe-base64-encoded strings.
    
    I updated the API baseline because there are a number of changes to private
    implementation classes, but the API/ABI checks do not know what is public vs.
    what is private.

[33mcommit f173e5dca1fc9ecdf014c3b536d930ffdf4c6a1f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 27 08:36:27 2019 -0400

    feature: Implement option to read from an offset. (#2690)
    
    Allow application developers to read an object starting at a given
    offset. This will also be used to restart downloads from the last
    received byte. Fix the code to properly combine this option and the
    gcs::ReadRange() option: the highest of the range beginning and the
    offset is used as the starting point.
    
    Refactored some code to avoid duplication.

[33mcommit c40f9f2c4f74df2597e46a98873f512d1a0d5cc7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 27 01:28:42 2019 -0400

    bug: Remove CURL* handle from multi-handle on errors. (#2688)
    
    Otherwise the CURL library is left in an inconsistent state. This is part
    of the work for #2655.
    
    With the more complex code path to remove the handle I need to explicitly
    track if it is in or not.  I think there is something we are doing
    sub-optimally here, but right now I have a bug to fix.
    
    This change adds a new member variable in
    storage::internal::CurlDownloadRequest. That is a ABI-breaking change,
    so we need to update the baseline. Note that the checker correctly
    reports this as non-breaking for the API.

[33mcommit feeccdcaf0a9c94c15a6a44660a3728245887517[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 27 00:06:30 2019 -0400

    DeleteAppProfile defaults to `ignore_warnings=true`. (#2692)
    
    Changing the default is a better experience for our customers. Setting
    `ignore_warnings=false` guarantees that the request will fail, as the
    service current rejects the request, even if no AppProfile is in use.

[33mcommit c41513a6ec8f6c37294310771a7c06d8931c9867[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 24 09:16:32 2019 -0400

    Update to Fedora 30. (#2687)

[33mcommit 085b8b403e0bcdd616a09c384433c68cd3aa5ffe[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 24 07:30:33 2019 -0400

    Refactor CreateHashValidator factory functions. (#2686)
    
    I am going to need these functions outside curl_client.cc. This
    refactors the functions to make them usable from other locations, and
    adds some testing for good measure.

[33mcommit 34c53396f5ffccd5b471afc95dfc7205cc3f549c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 23 19:14:49 2019 -0400

    Enable API/ABI checks for bigtable. (#2682)
    
    There are still a couple of changes we may want to make to the API, but
    I would prefer to notice those and not miss other breakage.

[33mcommit 5b745428c726134f8029a287ac14de530e3a13ce[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 23 17:55:23 2019 -0400

    Enable unit test for WriteObject. (#2684)
    
    Evidently we fixed the bug (#1735) preventing us from running this test,
    but neglected to enable it at the time.

[33mcommit 543a82e9d592fa2a8988f9718f205521f251d30f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 23 17:40:30 2019 -0400

    Fix install checks for storage library. (#2681)
    
    The install rules are supposed to be disabled when any of the
    dependencies are built using ExternalProject_Add(). Otherwise the
    users accidentally install non-working versions of our libraries.
    In this case I cut&pasted the wrong dependency name.

[33mcommit acff376f9ee6842f1369639ceb6ba1b057446d7b[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Thu May 23 11:01:27 2019 -0700

    Remove substring after space in language_version. (#2679)
    
    * Cut the CMAKE_CXX_COMPILER_VERSION after space.
    
    * Add a test for language_version.
    
    * Workaround regex on windows
    
    * Add compiler info to user-agent headers

[33mcommit 313171c496c4641519a30e4cce93ca882bb8c9a5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 23 10:08:34 2019 -0400

    cleanup!: Use google::cloud::future. (#2680)
    
    BREAKING CHANGE: Fix the last function that returned `std::future` to
    return `google::cloud::future<>`. The function name changes too, to
    be more consistent with similar functions.
    
    I removed the unit tests because (a) the tests would only be checking that
    WaitForConsistency() calls AsyncWaitForConsistency(), and (b) because we
    already have converage via the integration tests and example.

[33mcommit 0e05b7e417dca53872ca9e9bedf18ef66487fff6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 23 00:12:30 2019 -0400

    Implement TableAdmin::AsyncWaitForConsistency. (#2678)
    
    This function uses the polling loop to wait until the table reaches the given
    consistency token. I used a single integration test for AsyncWaitForConsistency() (polls
    until the consistency token is reached) and AsyncCheckConsistency() (checks only once) because
    the first one is more reliable, and it implicitly tests the second.

[33mcommit eb775ada3c77f28aac583e67d10d71e7092fb3c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 22 15:59:11 2019 -0400

    Fix documentation for GOOGLE_CLOUD_CPP_DEPENDENCY_PROVIDER. (#2677)

[33mcommit c0806f72ad0bcc9773cea62cc2be600fea26f69d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 22 10:24:47 2019 -0400

    Pass CMAKE_PREFIX_PATH to external projects. (#2676)

[33mcommit 9f9e9a476e9d19ebd1cdf754132b02dc95bee214[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 22 10:09:54 2019 -0400

    Refactor command-line parsing for benchmarks. (#2671)
    
    Wrote helper function to parse command-line, and use it in both benchmarks.
    I changed how the throughput benchmark specifies object sizes, because now
    we have something better than "N chunks" where the user has to guess (or
    read the code) to figure out what is a chunk.

[33mcommit 38dad231d81bed474af45aea67ddcc228a5aa40a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 21 16:59:04 2019 -0400

    Fix status of storage library in issue template. (#2675)

[33mcommit a1765431b0d0f2988ec69fd9c0bb5f7861776e85[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 20 19:43:55 2019 -0400

    Remove CompletionQueue functions using grpc::Status. (#2672)
    
    Also removed the (unused) BulkMutator for the noex::Table class, and the
    tests for the functions in CompletionQueue that used grpc::Status to
    signal errors.

[33mcommit bda1249632e99f654ad19f0758f0ae5788fbdd7c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun May 19 21:32:09 2019 -0400

    Send larger chunks is CurlResumableStreambuf. (#2668)
    
    The class was sending chunks of size 256KiB (the default configuration parameter),
    even when the application provides a multi-megabyte buffer, and then it would save
    the buffer to send it later, on the small 256KiB chunks. Sigh...
    
    This version still performs a lot of data copying, but that is a matter for a future
    change (there is already an open bug for it).
    
    The iostream classes keep pointers to a "buffer", which we must own. We need
    to keep the current_ios_buffer_ buffer in sync with these pointers, and we
    were not doing it right for data inserted one character at a time.

[33mcommit 76228fa0f3f48cad5be060f1db969f62f9bf76c9[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon May 20 03:07:22 2019 +0200

    `future<>::then()` doesn't destroy l-value refs. (#2670)
    
    Before this PR, if an l-value reference was passed to
    `future<>::then()`, it was moved from. This was wrong - they should have
    been copied from.

[33mcommit 06b951d46f4edcd04362fe396cf99bc9cdb03b27[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun May 19 11:53:46 2019 -0400

    Fix openSuSE build. (#2669)
    
    Evidently openSuSE refatored some of its dependencies and zlib-devel
    does not get automatically installed by some of the other libraries.
    Fixed the build scripts to install zlib-devel, and regenerate the
    instructions to include this new dependency.

[33mcommit f915fdda5997ab4923973c89a74809696cd0c670[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 18 21:06:00 2019 -0400

    Refactor common code in storage/benchmarks. (#2661)
    
    I am about to create additional benchmarks for the GCS library, so it is
    time to refactor common code across these benchmarks. That requires a
    new library, some unit tests for the library functions, and a lot of
    additional complexity in the BUILD and CMakeLists.txt files to support
    both.

[33mcommit bfe117d73160ee36a5371cba266b8974993f6626[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 16 18:18:22 2019 -0400

    Avoid SIGPIPE signals when connections break. (#2659)
    
    Automatically setup a signal handler for SIGPIPE on platforms where it
    is needed. libcurl recommends setting CURLOPT_NOSIGNAL for
    multi-threaded applications (and we expect the library to be used in
    such applications):
    
    https://curl.haxx.se/libcurl/c/threadsafe.html
    
    "When using multiple threads you should set the CURLOPT_NOSIGNAL option
    to 1L for all handles."
    
    "Note that setting CURLOPT_NOSIGNAL to 0L will not work in a threaded
    situation as there will be race where libcurl risks restoring the
    former signal handler while another thread should still ignore it."
    
    But also note that when setting CURLOPT_NOSIGNAL to 1L the documentation
    recommends:
    
    "When CURLOPT_NOSIGNAL is set to 1L, your application needs to deal with
    the risk of a SIGPIPE (that at least the OpenSSL backend can trigger)."
    
    This change implements this last recommendation.
    
    * Updated API/ABI checks.
    
    The prototype for `internal::CurlInitializeOnce()` changed. The script
    labels this as an API change, but we do not consider things in
    `internal::` part of the API, so this change is Okay.

[33mcommit 7c786914dc2266ad919ea4d77fda0125b65ba01e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 16 18:07:44 2019 -0400

    Remove noex::Table. (#2665)
    
    
    Obviously I removed any tests for it too, which is the bulk of this
    change. I also made the last adjustments in `bigtable::Table` to not
    depend on the `noex::` version, and removed many (but probably not all)
    supporting classes for Async* functions. There are separate bugs open to
    remove these supporting classes.

[33mcommit 8a56a7028a9f37640ed8ccf2de9f22864de84901[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 16 17:21:12 2019 -0400

    Fix support for empty chunks in resumable upload. (#2666)
    
    * Fix support for empty chunks in resumable upload.
    
    When doing resumable uploads we may need to send an empty chunk at the
    end of the stream. For example, because the stream has a round number of
    chunks, and all of them are sent before the stream is closed. At that
    point we need to send some indication to the resumable upload session
    that the upload is "done", and an empty chunk is the only choice.
    
    Our support for this was broken, which was Okay-ish because we do not
    use it (yet): our streams almost always have data in the buffer (that is
    a separate bug), and flush this buffer in the last request.
    
    With this change we fix the formatting of the Content-Range header to
    support empty chunks, add an integration test to verify this works
    against production, and fixed the testbench to parse these chunks
    correctly.

[33mcommit b6fcf5ee62d6a79f4c09071a3be422c8bf22ed35[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 16 09:36:22 2019 -0400

    Implement MutationBatcher without using noex::Table. (#2565)
    
    This version intentionally drops some functionality, specifically the
    previous version was able to handle partial results from a BulkApply()
    to admit more mutations early. Unfortunately the server does not send
    partial results yet, and the code is more difficult to maintain.
    
    As @dopiera suggested, we can simplify the data structures now that
    MutationBatcher is non-streaming.

[33mcommit 445980fd058a01fcf656b39e5ca4cf2d37d9537d[m
Author: Takashi Matsuo <tmatsuo@google.com>
Date:   Wed May 15 11:02:02 2019 -0700

    Use correct user-agent for internal analytics. (#2632)

[33mcommit bbfe405555d8325b6f489e56ee12a9173d524ad1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 21:02:01 2019 -0400

    cleanup!: Remove template parameter in SampleRows. (#2652)
    
    BREAKING CHANGE: Removed the `Collection` template parameter from
    `Table::SampleRows`, this allowed users to changed the returned
    collection type, but that extra flexibility is not worth the complexity
    for a rarely used API.

[33mcommit cf89512803ad6fc167c58ba51ed3a58f55973037[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 15:29:05 2019 -0400

    fix!: Inconsistent return type in AsyncCheckAndMutateRow. (#2650)
    
    BREAKING CHANGE(bigtable.async): `Table::CheckAndMutateRow` returns
    `StatusOr<bool>` to indicate which branch of the predicate was taken
    in the atomic change. Meanwhile, `AsyncCheckAndMutateRow()` returned a
    `future<StatusOr<proto-with-long-name>>`. Changed the async version to
    return `future<StatusOr<bool>>`, note that the Async* functions are
    still experimental and subject to change.

[33mcommit b5bfaf418c5112ba4ed0b6cbf3bb52bc724e51ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 13:24:35 2019 -0400

    fix!: Return type for WaitForConsistencyCheck. (#2649)
    
    BREAKING CHANGE: The return type for WaitForConsistencyCheck() was a
    `future<StatusOr<bool>>` where most related functions return a
    `bigtable::Consistency` enum.

[33mcommit 5836574cf71708f85782af41d4353cce2d035564[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 11:08:01 2019 -0400

    Remove noex::TableAdmin. (#2646)
    
    Remove the class and the tests associated with it. There is probably
    some more dead code related to async functions, but we have open bugs to
    delete that code too.

[33mcommit ac05ddf20d3c91d0bee849096558c74bdccbe0af[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 11:00:36 2019 -0400

    Fix nits in bigtable-quickstart.dox. (#2647)
    
    Made the `.dox` file more readable by using a link alias, and link the
    other examples from this doc.

[33mcommit a43ac29f681174b17d5cc630720fa54370b85ca0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 10:52:04 2019 -0400

    Cleanup the advanced read/write examples. (#2648)
    
    The example used to include all the code, which was not useful as this
    is not an example you run end-to-end, but rather a series of code
    snippets.
    
    Also use link aliases to make the source `.dox` file more readable.

[33mcommit a2be5816c158331406920532e6e4e375c00f4537[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 08:32:18 2019 -0400

    Fix doxygen page for Hello Instance Admin example. (#2639)
    
    First, the name of the doxygen file did not match the name of the
    example, so renamed it. Then make sure all types and functions mentioned
    in the document are links to the Doxygen docs. And cross-reference each
    portion of the example with other related functions or types.

[33mcommit a121b68503b5dc8c6d2b6b138caea2e870cd089c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 07:39:32 2019 -0400

    Reorganize Doxygen landing page for bigtable. (#2643)
    
    * Reorganize Doxygen landing page for bigtable.
    
    Make it look like the landing page for storage, which I think is more
    readable and uses vertical space more efficiently.
    
    * Address review comments.

[33mcommit 9f32aa8ae605e6c82fb7a780407c3027f930d4d9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 9 07:02:39 2019 -0400

    Fix doxygen page for Hello Table Admin example. (#2638)
    
    * Fix doxygen page for Hello Table Admin example.
    
    First, the name of the doxygen file did not match the name of the
    xample, so renamed it. Then make sure all types and functions mentioned
    in the document are links to the Doxygen docs. And cross-reference each
    portion of the example with other related functions or types.

[33mcommit 4b2e7269e351009c0f166c51d1fdbd6b04439555[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 8 19:43:56 2019 -0400

    Doxygen TableView constants. (#2645)

[33mcommit c26cec6b40497f6960468bf4b0b7917f0acfe8a8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 8 19:43:38 2019 -0400

    Fix nits in storage-main.dox. (#2644)

[33mcommit b594fb4f2122f0858a46744c26ae296a3ab3a84a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 8 18:00:33 2019 -0400

    Remove noex::InstanceAdmin. (#2641)
    
    Also remove all the tests for this class, and made the last few changes
    so bigtable::InstanceAdmin does not depend on it.

[33mcommit b9b95741a64ab3e2dbbe10f56e0be73a824bad85[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Wed May 8 17:39:56 2019 -0400

    Add missing quotes in shell snippets. (#2642)
    
    * Add missing quotes in shell snippets.
    
    Also change one block from 'sh' to 'bash' for consistency.

[33mcommit 9d72038bb76e0ccfe6a2ebf40c58934b25616720[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 8 17:01:48 2019 -0400

    Fix doxygen page for Hello World example. (#2637)
    
    Make sure any reference to functions or classes are actual links to the
    documentation. Also cross-reference other functions or classes that the
    user might be interested in, for example, if we show one type of
    mutation, link the other types too.

[33mcommit 709e3ef30fe32bf3045f2d8598bda52d8cbd1a4b[m
Author: Todd Derr <salty@google.com>
Date:   Wed May 8 15:56:37 2019 -0400

    Bump version numbers in master for next release (#2636)

[33mcommit 1c84bf47d6face003482ae997d351aca2383c82a[m
Author: Todd Derr <salty@google.com>
Date:   Wed May 8 12:50:03 2019 -0400

    0.9.0 release notes [skip ci] (#2627)
    
    May 2019 release (0.9.0), includes:
    * Bigtable v0.9.0
    * GCS v1.0.0
    * Common v0.7.0

[33mcommit 7a6e375c75b50baf34f6c784444b4ba6199e9edb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 8 12:08:58 2019 -0400

    Simplify the bigtable_hello_*_admin examples. (#2633)
    
    Remove redundant code, and move the (single) function in the example to
    the body of `main()`. Also use explicit return types, the normal
    aliases, and general cleanups.

[33mcommit 217507b33bc73e5e8901bec8b54d545a7bdb5484[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 7 14:13:02 2019 -0400

    Rename hello-world-type examples. (#2631)
    
    Renaming the examples to make their role clearer. There is some amount
    of duplication and cleanup needed, but that will be in a future PR.

[33mcommit 9aa7388514dfdfbc30dcc1115deb09678c20e037[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 7 10:27:20 2019 -0400

    Another pass fixing nits. (#2630)

[33mcommit 5a9a9abe538d664333df6d76e33b78693b456923[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 7 07:42:50 2019 -0400

    Make the instance_admin_async_snippet consistent. (#2629)
    
    Use `using google::cloud::future;` like in the other examples, and name
    the futures foo_future.

[33mcommit 9f622d59128bf5800eaa7aa31455d87999be3dd1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 7 07:42:30 2019 -0400

    Consolidate InstanceAdmin snippets to one file. (#2628)

[33mcommit 1f4eb310518a1955a8411a92d46e5a7a36c6a399[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 22:55:45 2019 -0400

    Consolidate region tags to one program. (#2625)
    
    One region tag was duplicated, and the other was all by its lonesome in
    a single program.

[33mcommit c2d78a1d5952f557d4257fdf4b14b5cd32ea6f48[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 22:14:21 2019 -0400

    Use explicit return types in table_admin_snippets.cc (#2622)

[33mcommit 139f5bc2263858e9b91d4f99e6a8b6da5e87af93[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 22:01:23 2019 -0400

    Explicit return types in quickstart and hello world. (#2623)

[33mcommit a807cbc296278e8621b9b3c69468dad7fc93d8cd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 17:55:51 2019 -0400

    Use explicit return types in table_admin_async_snippets. (#2621)

[33mcommit 5d59bf7dc39b29b21621fc7b9e2241b832e2faa7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 17:26:18 2019 -0400

    Explicit return types in data_async_snippets.cc (#2619)

[33mcommit 8ff1358beca193783a7345d333597172f56926e2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 17:26:00 2019 -0400

    Copy permissions only when needed. (#2620)

[33mcommit c98ac0f74ed75df085b7caf24ed42f1f0655b8c7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 16:21:53 2019 -0400

    Use explicit return type in data_snippets.cc (#2618)

[33mcommit 81f6fd9bb9391fbe317887d73445e2887c333400[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 15:58:20 2019 -0400

    Use explicit return types in bigtable_instance_admin_snippets.cc. (#2616)

[33mcommit 8a3f999ba5f4c28fa97281e4881acddee3f3ee61[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon May 6 14:02:00 2019 -0400

    Use explicit return types in instance_admin_async_snippets.cc (#2610)

[33mcommit ff8e5c0fca67023f08a57e23c5e3f13e2a7ddce1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 13:46:42 2019 -0400

    Create aliases for table schema view constants. (#2615)
    
    Define aliases for the google.bigtable.admin.v2.Table.View constants.
    We do this for other constants and it seems more consistent to have them
    for these too.

[33mcommit 1c08aa509646f96c5a1331ebd71df2e0b554f7d6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 13:46:08 2019 -0400

    Fix broken links and link INSTALL.md directly. (#2614)

[33mcommit d89aab18b7d4302d7723a0f20a22a475de83f781[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 12:20:00 2019 -0400

    Implement missing example for CheckAndMutate. (#2611)
    
    Implement an example of CheckAndMutate that modifies a cell if another
    cell does *not* exist. This was a long outstanding bug (#1190). In the
    process to fix this I removed a number of hard-coded row keys, fixing (I
    think) #2404.

[33mcommit 223b3736f71e81540f5176d336f77f8760f57ecd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 12:14:12 2019 -0400

    Remove namespace aliases from header files. (#2613)
    
    All but one of them was harmless, but I would rather be able to search
    and find none than think which ones are Okay.

[33mcommit 1a87d0c3cb17fde3e424b1548417d8b441feb3db[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 11:23:22 2019 -0400

    Improve error messages in integration test. (#2612)
    
    The integration test for WaitForConsistencyCheck was not reporting
    errors correctly. Also the names of the tests where just redundant.

[33mcommit cbb3d090c8de24f3ef5e0a3b7726fd6220b225ee[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 6 08:59:37 2019 -0400

    Cleanup the Doxygen documentation. (#2605)
    
    I made a pass through the Doxygen documentation for Cloud Bigtable,
    making the following changes:
    
    - I documented the `google::cloud::bigtable` namespace (oops).
    - I removed any symbol in the `internal` namespace from the generated
      documentation. Made the same change for the Cloud Storage and common
      libraries.
    - I moved a few symbols into the `google::cloud::bigtable::internal`
      namespace, as they were not intended for general use.
    - I removed a forward declaration for AsyncRetryAndPollUnaryRpc, a
      symbol that does not exist, but the forward declaration made it appear
      in the docs.
    - I filled in some missing documentation, and fixed the formatting and
      wording for some Doxygen comments.
    - I fixed some code samples that rendered poorly in the HTML output.

[33mcommit 8fe0cd3a983602605eb1550b925187f49fc7efc4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun May 5 08:21:18 2019 -0400

    Remove bigtable::GrpcError. (#2606)
    
    This exception class is no longer used, removed.

[33mcommit 3282f33e46f6c8fc8451ccac225d2369ec28d8da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 4 23:43:50 2019 -0400

    Fix typo on check-abi.sh script. (#2607)

[33mcommit 528a823c93c2d86567a93d36cd277d8234e224b2[m
Author: Billy Jacobson <billyjacobson@users.noreply.github.com>
Date:   Sat May 4 18:05:36 2019 -0400

    Adding delete table region tag for hello world (#2608)

[33mcommit 48f1247d7b83aeab9792daabb54f0425f5646be0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 4 17:59:59 2019 -0400

    Update documentation for top-level classes. (#2596)
    
    I updated the doxygen documentation for bigtable::Table,
    bigtable::TableAdmin, and bigtable::InstanceAdmin. Fixed a lot of
    nits, documented which operations are idempotent (and thus normally
    retried), documented how to configure the policies in bigtable::Table,
    their default values for all 3 classes. And also which operations are
    thread safe on these classes.

[33mcommit 09f794293e017b14c7c5b4e7ba21dd89f339365e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 3 12:45:42 2019 -0400

    Remove google/cloud/spanner. (#2593)
    
    This code has moved to googleapis/google-cloud-cpp-spanner.

[33mcommit 413a98de84d37f042644b3ce2b6c135e62e3c2ca[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 3 08:24:10 2019 -0400

    Support running the admin tests and examples in a nightly build. (#2592)
    
    We cannot run the Cloud Bigtable admin tests and examples on every build,
    because we run out of quota if we do. But we can run it once every day,
    which at least would detect problems before we cut a release.

[33mcommit 831d04e38b3a3a233b5d611cd7a12ed7074b0e62[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 2 22:24:50 2019 -0400

    Fix the admin tests and examples to run against production. (#2591)
    
    Introduce new scripts to run the admin integration tests and examples
    against productions. There were a number of small problems in the
    tests and examples that I had to fix to get the tests to pass.
    
    These tests will be enabled in a future PR as part of a nightly build.

[33mcommit 2ec0039ed1a91f7a0758feaf9d820a03a7c5f263[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 1 23:34:52 2019 -0400

    Need 'ignore_warnings' to actually delete an AppProfile. (#2586)
    
    Without setting `ignore_warnings == true` deleting an AppProfile typically
    fails during tests. There may be a case for making the default `true`, but
    I think that is a different PR, right now I want these tests to actually
    work when executed against production.

[33mcommit 913b241c8d65beb266d2801b55f34d289b51b5ec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 1 23:25:47 2019 -0400

    Implement bigtable_create_replicated_cluster example. (#2588)
    
    The description says "Create replicated cluster in current project" which
    I think this sample satisfies.

[33mcommit f05d19389678929abcf4160b764717b8f52cc1b1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 1 23:23:09 2019 -0400

    Implement bigtable_check_table_exists example. (#2587)

[33mcommit 306647f46ea11fbaec12c03ab854a0c5f4eba24a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 1 06:38:05 2019 -0400

    Remove polling loops from samples with future. (#2585)
    
    Some of the code snippets showing how to use functions that return
    `google::cloud::future<>` did a loop polling the status of the future.
    This takes a lot of vertical space in the code sample, and does not add
    much. This PR makes these examples simpler, and still show how to poll.

[33mcommit e27eea6449d00eae39d7013d10bf2525e5b7ad8c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 30 21:06:40 2019 -0400

    Implement bigtable_get_or_create_table example. (#2581)
    
    This is one of the required DPE examples.

[33mcommit 9a3f9d0d38b4634516a9a2ee2551704ab4316038[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 30 10:58:15 2019 -0400

    Prevent transient problems from breaking production test. (#2578)
    
    One of the test runs against production failed in this test:
    
    https://source.cloud.google.com/results/invocations/7e17585e-596f-40c3-b237-e4745b54dfc1
    
    The log is not detailed enough to diagnose the problem, so first I
    fixed that. My guess is that the test failed because the mutations
    used to prepare data for the test are non-idempotent, so any transient
    failure will stop the test. I fixed that too.

[33mcommit 7bfb316d16c2844bae0c85f50c728136bcf4ec24[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 30 10:06:30 2019 -0400

    Spanner experiments (#2569)
    
    Changed spanner_tool to make it easier to create more experiments. Implemented a number
    of subcommands.

[33mcommit 0cd882cadcaf6b81704f55bcd2ef103f44c8c63c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 30 06:20:36 2019 -0400

    Implement bigtable_list_column_families sample. (#2580)
    
    This is one of the required DPE examples, it shows how to iterate
    over the column families of a table and print them.

[33mcommit df34a600469aaf4c972733bad2c62b4d4855a571[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 30 06:19:53 2019 -0400

    Implement bigtable_get_or_create_family example. (#2582)
    
    This is another one of the DPE-required samples for Cloud Bigtable.

[33mcommit b3caeefac54f22e55e0829e8898fe6df1e9ae191[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Apr 29 21:36:37 2019 +0200

    Implement InstanceAdmin::AsyncSetIamPolicy. (#2571)
    
    * Implement InstanceAdmin::AsyncSetIamPolicy.
    
    This fixes #1537.

[33mcommit 37d8c32a13a92cadcfa8673f0ccabcb8a67b127d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 29 13:57:37 2019 -0400

    Use the bigtable_get_table_metadata region tag. (#2577)
    
    Seems like the code was already there, we just did not know what
    region tag to use.

[33mcommit 16dfb4ad8c22df7725f030a500664ac9a7c398dc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 29 13:25:12 2019 -0400

    Add bigtable_delete_rows region tag. (#2576)
    
    As best as I can tell, this region tag is just an alias for
    bigtable_truncate_table, so I am reusing the sample for both region
    tags.

[33mcommit 5a63ac9effed3cc462b3f5117b685bc6ff8e606b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 29 12:28:58 2019 -0400

    Return google::cloud::future from InstanceAdmin functions. (#2574)
    
    A few functions were returning `std::future<>` because they were implemented
    before we had `google::cloud::future<>`, changed the return type to
    be consistent with the `Async*()` variants.
    
    Changed the implementation to use `Async*()`, that seems simpler than having
    an implementation using blocking calls in a separate thread.
    
    Removed a bunch of redudant unit tests once the implementation
    is refactored. We already have unit and integration tests for
    the `Async*()` versions of these functions.

[33mcommit fac544969e0215e3d3c67f8e96b00571fe953951[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 29 12:17:09 2019 -0400

    Consistently use namespace aliases in examples. (#2575)
    
    Consistently use `namespace cbt = google::cloud::bigtable` in the examples.
    That makes the code snippets less crufty and therefore more readable.

[33mcommit 41c30cca2a9e744914cc351f32b90c91614068b4[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Apr 29 14:22:53 2019 +0200

    Implement InstanceAdmin::AsyncDeleteAppProfile. (#2553)

[33mcommit f32eea0524333da23d7371736606633202828e76[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Apr 28 21:27:42 2019 -0400

    Remove invalid region tags. (#2570)

[33mcommit 5844dec96f70a0186e881a347c46f8efaea5c838[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Apr 28 14:51:28 2019 -0400

    Preserve timestamps for unchanged files. (#2568)
    
    * Preserve timestamps for unchanged files.
    
    Adding `IncludeBlocks: Merge` apparently triggers a bug in
    clang-format(1), where it changes the timestamp of the file even if
    there are no formatting changes. I think we want that directive, so I
    changed the check-style.sh script to workaround the issue.
    
    While testing this I discovered that cmake-format has the same problem,
    so I worked around that bug too.
    
    Finally, I made some cosmetic changes to make my IDE happy inside this
    script.
    
    * Address review comments.
    
    * Address review comments.

[33mcommit dfb9403bb5be169b76cc954a5bc06d51c55885ac[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Apr 28 17:50:20 2019 +0200

    Implement InstanceAdmin::AsyncGetAppProfile. (#2552)
    
    This fixes #1531.

[33mcommit 348e4eac0f7e6d83d1fac329afca7425418046d2[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Apr 28 16:38:57 2019 +0200

    Implement InstanceAdmin::AsyncCreateAppProfile. (#2551)

[33mcommit 3bc16d50fe15bd50c2eaaa89c6dc58e266eb3e6f[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Apr 28 16:37:03 2019 +0200

    Implement InstanceAdmin::AsyncGetIamPolicy. (#2555)

[33mcommit 632b682cafd049f207a134d6d2bab6f377a90044[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Apr 27 18:31:12 2019 -0400

    Cleanup the InstanceAdmin snippets. (#2566)
    
    The snippets included code to parse the command-line arguments and to
    print usage messages. These are not interesting to any user. Use the
    same inline lambda trick from other code samples to keep the extracted
    sample code simpler to read.

[33mcommit b32cde6f1bbcf4f4f54b1b1b2c633b4be3b728aa[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sat Apr 27 12:48:27 2019 +0200

    Reimplement AsyncDeleteCluster. (#2550)
    
    This fixes #1528.

[33mcommit 83b95eb25252678a1f92423259933419229a74fc[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Apr 26 21:53:39 2019 +0200

    Implement AsyncTestIamPermissions. (#2546)

[33mcommit 4b5d1cf0456fc9d0c9e19b50bfb1d0a3386d19d4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 26 15:37:58 2019 -0400

    Fix exit status in examples runner. (#2549)
    
    Sometimes we were failing to report the exit status, and even when we
    did it was not obvious there was a problem, because it may have scrolled
    up past the terminal size.

[33mcommit e6ee49ffb8497273d246588484ae9d91a3b48aa4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 26 13:35:54 2019 -0400

    Implement examples for Apply() and BulkApply(). (#2547)
    
    These are the examples required by DPE. I chose to receive the arguments
    for these examples, such as the key, column family names, column names,
    etc., from the command-line. I think this lets the user experiment with
    different values more easily.

[33mcommit ba18ab4f42af3c1c6892e32ed002933272ae6821[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 26 13:34:59 2019 -0400

    Fix race condition in async_read_stream_test. (#2548)
    
    The test for "read 3 messages and then an error" was a bit optimistic:
    sometimes all three messages and the error are coalesced and then the
    client just sees the error. Add some synchronization to make sure this
    does not happen.

[33mcommit 66fd82ca4adf836773d7709ac431c62fab50c7df[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 26 07:52:00 2019 -0400

    New implementation of Table::BulkApply(). (#2544)
    
    This version does not rely on the `noex::Table*` classes.

[33mcommit c7d8de118190ab120aed5b1b0764126a054218d5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Apr 25 12:21:42 2019 -0400

    Refactor BulkMutator state to a separate class. (#2538)
    
    I think it is easier to reuse this class for both asynchronous and
    synchronous mutators.

[33mcommit 954d301b731b20a582e4ce89e2cd4d5bfa380015[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Apr 25 11:33:49 2019 -0400

    Remove Snapshot-related functions, tests, examples, etc. (#2534)

[33mcommit 3be779c7dea2c19a28be10b7b6326b70df3f3989[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Apr 25 11:26:45 2019 -0400

    Fix Ubuntu build by disabling the HMAC Key tests in production. (#2542)
    
    There is a problem in production (the feature is not GA, things happen),
    which breaks the builds. I created a bug to restore these tests later.

[33mcommit 0b1b73a61af801cc57b88b9e12048f18d26107c5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Apr 25 09:24:28 2019 -0400

    Fix noex build and improve build logs. (#2539)
    
    We cannot install `clang-format-7` on all versions of Ubuntu. We already install it on the
    section of the Dockerfile for Ubuntu:18.04, so remove it from the generic section, and things
    are happy.
    
    I also changed the CI build scripts to actually print any errors while creating the docker images.
    I could not figure out why the build was broken until I did that.

[33mcommit 23bede2592034f2a0e8d54305a0e82b3b4d01f44[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 24 22:05:58 2019 -0400

    Rename AsyncBulkApply support classes. (#2536)
    
    The current classes will be deleted with all the `noex::` classes,
    and I want to use their current names for the new
    `Table::AsyncBulkApply()` implementation.

[33mcommit c06617a53c49df5e962492df87cb2cc1787c4fb2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 24 22:05:45 2019 -0400

    Wrap streaming read RPC loop. (#2533)
    
    This introduces a new way to implement the even loop for a streaming
    read RPC. This version uses callables (as opposed to pointers to member
    functions) to wrap the call that creates a asynchronous streaming read
    RPC, I think those are more readable (and allegedly more efficient).
    
    This version also uses the `PrepareAsync*()` generated functions, which
    are less racy than `Async*()`. The latter immediately start the loop by
    calling `Start()` on the streaming read RPC, which can create a race
    because the most common action in response to a successful `Start()` is
    to call `Read()` on the returned `ClientAsyncReader<>`, but said reader
    may not have been returned yet.

[33mcommit 24fa54f3f2dbbac8df80073547055f9bb7aa7b6f[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Wed Apr 24 21:19:04 2019 -0400

    Move to clang-format-7 (#2535)
    
    The only changes involve spacing around adorned array types (e.g.,
    "char* []" -> "char*[]".

[33mcommit 0f4c723ce3634eea4f3bc65962595ab943863516[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Wed Apr 24 18:08:23 2019 -0400

    Add the "IncludeBlocks: Merge" clang-format option (#2532)
    
    Specify that clang-format should merge include blocks, which is
    how the majority of the code is already formatted.  Then fix the
    10 current outliers.  This will allow for a smoother transition
    to the new clang-format, where the default is to split include
    blocks based on category priority.

[33mcommit 2ca38ad8be115b8e6cfe5b29115226de4f85d6bb[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Apr 24 23:58:45 2019 +0530

    Adding `AsyncGenerateConsistencyToken` and `AsyncCheckConsistency` to `TableAdmin`. (#2530)
    
    This change will close #1499

[33mcommit 5f21dc4fbee2fea4bea57dec8a4195cc0aa58efb[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Apr 24 15:54:55 2019 +0200

    Remove AsyncFutureFromCallback. (#2531)
    
    It's no longer used.

[33mcommit f2e5f312b3d4280220b947c20ab4808befed6880[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 22 19:44:57 2019 -0400

    Support move-only callables in future<T>. (#2529)
    
    I noticed this while trying to use `future<T>` in a larger change,
    separating the change to its own bug seems to make sense.

[33mcommit 6572c0e4cb98d373d584fd9e2449503d2ba7baeb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Apr 21 11:05:52 2019 -0400

    Fix typos and comments in the CompletionQueue test. (#2528)

[33mcommit ce3eaaec2c0a48c01455f5b2cb59b7c5fa550866[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sun Apr 21 18:54:57 2019 +0530

    implementation of `TableAdmin::AsyncListTables` (#2527)

[33mcommit cf173f6d43f5f7be9edf6c691715c5c9f721069b[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Apr 19 20:47:56 2019 +0200

    Implement InstanceAdmin::AsyncUpdateAppProfile. (#2516)

[33mcommit 78290322fc9644fbd75b2f81eca2c5af5f805e46[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 19 13:22:23 2019 -0400

    Restore code coverage uploads. (#2526)
    
    ETOOMANYQUOTES.

[33mcommit e66af7d9e38700f360de6d10768f37432e8063f9[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Fri Apr 19 11:03:14 2019 -0400

    Check for (and fix) whitespace formatting in non-C++ files (#2522)
    
    Add a phase in ci/check-style.sh that fixes whitespace formatting
    in files not handled by clang-format.  For now this simply removes
    trailing blanks.
    
    Also build paths to ignore in style checks by reading .gitignore.

[33mcommit cd3bc6b4eb20cf5c22c5e981ad0314969493a61a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Apr 18 22:22:37 2019 -0400

    Implement remaining bigtable_read_* samples. (#2523)

[33mcommit daba79d827316540b1b52c8b3ae8db1d32c1fad0[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Apr 18 18:59:17 2019 -0400

    Fix chocolately link. (#2521)

[33mcommit 77a2c35761274c3cf3cfe4ffe63ef4b1327e86a8[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Thu Apr 18 08:27:53 2019 -0400

    Coalesce the separated #include blocks (#2519)
    
    This allows clang-format (6) to order the includes based on our
    "IncludeCategories" priorities.

[33mcommit 289153539d5bdc43feda5717a2011ffca55fb94d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 17 18:25:07 2019 -0400

    Implement remaining column family examples. (#2514)
    
    This change implements the remaining column family examples for Cloud
    Bigtable.

[33mcommit 13dc1443a3a84402a0fe77d18b68bde15779223d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 17 17:13:58 2019 -0400

    Add links to best practices for bucket policy only. (#2517)

[33mcommit 903035279cb90bd10491752fa54c3b6ed05a2e2c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 17 16:57:21 2019 -0400

    Refactor Table::*ReadModifyWriteRow(). (#2518)
    
    The new implementations do not depend on the code in `noex::Table`.

[33mcommit 4374b3a9805b1c566889ce07d06c62cadb8b5971[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 17 14:06:20 2019 -0400

    Fix new ShellCheck warnings. (#2515)
    
    I changed one of the scripts while @remyabel was fixing all these
    warnings.

[33mcommit ab008031df3c6b36c9d0c81bd73b5168bcf343fe[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Apr 17 18:53:06 2019 +0200

    Implement InstanceAdmin::AsyncUpdateInstance. (#2512)

[33mcommit 154dd0b1cd26f8d98dd41c0d41b154b0d3514a9b[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Apr 17 18:52:54 2019 +0200

    Implement InstanceAdmin::AsyncCreateCluster. (#2495)

[33mcommit f15eb70fab918295d9319f2c36c820fef0d7317c[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Apr 17 11:18:44 2019 -0400

    Put quotes around variables where necessary. (#2476)

[33mcommit b7cc9755ae3ba36b7e95d3c9cf2c2e0eb6e3b459[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Apr 17 17:07:02 2019 +0200

    Implement InstanceAdmin::AsyncUpdateCluster. (#2511)

[33mcommit 06484217d45777c054da216b1b7cd521f7e9654e[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Apr 17 16:54:55 2019 +0200

    Implement InstanceAdmin::AsyncCreateInstance. (#2494)

[33mcommit 82e17f846dc9498fc6d2baa7751d4c486cd83d82[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Tue Apr 16 22:21:35 2019 -0400

    Moves enablers to LHS of assignment to prevent callers specifying. (#2493)
    
    It's preferable to use SFINAE on the left-hand side of the assignment so
    that it's declaring the type of a non-type template parameter rather
    than on the right-hand side where it's instead setting the default type
    for a regular (type) template parameter. This way is preferred because
    it prevents callers from overriding the SFINAE by explicitly specifying
    the template parameter, which callers could do if the enabler were only
    setting the default.

[33mcommit 9084e32fcbea448923229e7cd0866c49d502d97f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 16 18:50:24 2019 -0400

    Implement bigtable_get_family_metadata example. (#2492)

[33mcommit f3a5ebcce42b06eef85189e8c07cd5a9610e26c7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 16 17:34:13 2019 -0400

    Support compiling spanner_tool with CMake. (#2486)
    
    Compile the spanner protos in googleapis. I had to split the
    bigtable_protos into a number of smaller libraries because there are
    shared protos between bigtable and spanner.

[33mcommit 8dcf3bded1598df71603b8ff6038a2a09e68a110[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Apr 16 23:00:22 2019 +0200

    Implement InstanceAdmin::AsyncListAppProfiles. (#2491)

[33mcommit 6202824434cee727f1e10e1d4f3598a110c61078[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 16 16:14:55 2019 -0400

    Update the README for Cloud Bigtable. (#2485)
    
    Get it to the same standard as the Google Cloud Storage README.

[33mcommit 0de95660d2ac2d4b835b768f336a20bc9b05f42c[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Apr 16 21:36:42 2019 +0200

    Reimplement AsyncListClusters with futures. (#2483)
    
    The test is a modified version of its noex counterpart.

[33mcommit 42badbcb39b273b7e85a8f5ebd1707433d749baa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 16 14:06:44 2019 -0400

    The Google Cloud Storage C++ client library is GA. (#2488)
    
    In this change:
    
    - We update the version number for the Google Cloud Storage C++ client
      to 1.0.0.
    - We mark the library as GA in the README file.
    - We enable the API checks for the library, one of the CI builds will
      break if we break the API. Unfortunately the build also breaks with
      ABI changes, but in that case we can just update the baseline.

[33mcommit d6955a8eb0e9d9a00fb4f5a5b7b8ce638897d967[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Apr 16 19:21:08 2019 +0200

    Bypass creating real alarms in MockCompletionQueue (#2490)
    
    This fixes #2489.
    
    Without this fix a timer could be deleted before it was fully handled by
    `grpc::CompletionQueue`. Refer to #2489 for details.

[33mcommit 89a228a2f48e5b74f71ad2c812558ade6b1352bc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 16 08:43:18 2019 -0400

    Support P12 files in GoogleDefaultCredentials(). (#2487)
    
    If we cannot load a file as a JSON file, assume it might be a P12 file
    and try to load it as such.

[33mcommit 9ef6a376fabaa14a51661d7beb3fc811e66425e5[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Apr 16 07:43:04 2019 +0530

    Implementation of TableAdmin::AsyncDropAllRows (#2484)

[33mcommit d90126dac4618030d96ca4daa600a09d3b2e73e8[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Apr 15 21:24:47 2019 -0400

    Declare and assign local variables separately. (#2475)

[33mcommit b52d5e5a07d45f8606e56886723ff88adb37955e[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Apr 16 03:24:25 2019 +0200

    Reimplement AsyncListInstances via futures. (#2482)

[33mcommit 4688ac26cc71c3a8bd35b4fa2cfe8bf63bc4229e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 15 14:43:29 2019 -0400

    Support P12 key files. (#2480)
    
    Application developers can now use a P12 file to initialize the
    credentials used to access GCS. This PR includes an integration test to
    verify these credentials are usable for both accessing GCS as well as
    signing URLs.

[33mcommit 469a5136e3511953725c4e050f9f27288edf6fb4[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Apr 15 14:29:24 2019 -0400

    Fix portability/logical errors in shell scripts. (#2474)

[33mcommit 37bddb518bbc727ccf54f20f4046499b096b586d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 15 13:57:05 2019 -0400

    Improve README for storage client. (#2430)

[33mcommit 64ddda9a4746ff7c42830f65bcb117827908544c[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Apr 15 09:58:47 2019 -0700

    Adds spanner_tool for easy experimenting (#2477)

[33mcommit 249939b3c4558c701e1239a3da62d1a3c7add824[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Apr 15 16:41:57 2019 +0200

    Fix a race condition in MutationBatcher. (#2465)
    
    Fix a race condition in MutationBatcher.
    
    This fixes #2140.

[33mcommit 0ec7d411ef6b8357624a1a19809cafe1c4719bed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 15 08:29:05 2019 -0400

    Implement GC rule examples. (#2481)
    
    Model these examples after the C# and Python counterparts. The values
    for the GC rules are identical to the values in the other languages,
    which seems like a good idea. I made the column family names arguments
    in the command-line, so people can play with them a bit.

[33mcommit 9bfe8bf1af643b2e9fe3c5535fccd0cb97e1c9b1[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Fri Apr 12 14:50:47 2019 -0400

    Add v0.8.1 release notes (#2478)

[33mcommit 079945ce780f9a5c0219bea3977e050ae7641905[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Fri Apr 12 14:50:35 2019 -0400

    Purge some newly-introduced trailing whitespace. (#2479)

[33mcommit a780edbed4f4d7dcea1438a0116464bb5dde5622[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Apr 12 11:26:50 2019 -0400

    Enable ShellCheck in check-style.sh (#2472)

[33mcommit 559f5c94c65ee12902fa239c3dfad1777f3c8911[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Apr 12 10:17:24 2019 -0400

    Enclose instances of $0 in quotes (#2473)

[33mcommit 478fd5a676682311175e0ee5055253dc7292e388[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Apr 12 17:50:48 2019 +0530

    Implementation of `TableAdmin::AsyncDropRowsByPrefix` (#2464)

[33mcommit 0c064ff573ff3cd213111dfbcad411932352b574[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Fri Apr 12 00:09:13 2019 -0400

    Stub spanner_client library. (#2466)
    
    This is just to set up a directory for future Spanner client development.
    This is a work in progress and should not be used - it currently has no functionality aside from supplying library version information (and a corresponding test).
    Modeled after (and largely copied from) bigtable.

[33mcommit 68bd8c03df6308df61043072fc91048ac9a9180e[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Thu Apr 11 19:12:31 2019 -0400

    Merge 0.8.1 (#2469)
    
    * Avoid std::make_exception_ptr() in future_shared_state_base::abandon() (#2460)
    
    Some implementations of std::make_exception_ptr() use throw/catch, so
    we should avoid it under !GOOGLE_CLOUD_CPP_HAVE_EXCEPTIONS.  This is
    fine becase we never use future_shared_state_base::exception_ in that
    case.
    
    * Use SFINAE to constrain applicability of the BulkMutation(M&&...) ctor (#2461)
    
    The unrestricted BulkMutation perfect-forwarding constructor was a
    better match than the (generated) copy constructor for a non-const
    lvalue, so its embedded static_assert requiring convertibility to a
    SingleRowMutation meant that non-const BulkMutation lvalues could
    not be copied (so they could not be used as pass-by-value function
    arguments, for example).
    
    So, make the "convertibility to a SingleRowMutation" requirement a
    SFINAE constraint instead, meaning the perfect-forwarding constructor
    will be disabled when it does not apply, and that allows the copy
    constructor to be found instead.
    
    * Include what you use: std::function, std::string, std::vector. (#2457)
    
    Ensure that google/cloud/storage/internal/range_from_pagination.h
    can be included in any context by adding the include files it uses.
    
    * Include what you use: google/cloud/storage/version.h (#2458)
    
    Ensure that every header that uses "inline namespace STORAGE_CLIENT_NS"
    first includes google/cloud/storage/version.h.
    
    * Include what you use: google/cloud/bigtable/version.h (#2459)
    
    Ensure that every header that uses "inline namespace BIGTABLE_CLIENT_NS"
    first includes google/cloud/bigtable/version.h.

[33mcommit 9e36af28bb9cf04ad6be572d611feec19cf6cb53[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Thu Apr 11 18:43:10 2019 -0400

    Fix typos in these READMEs: support->supports (#2470)

[33mcommit 8e8dd3d83ec27b7a5176f9fe43cdd93aa5ace3dc[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Thu Apr 11 17:28:29 2019 -0400

    Use the unparsed args in export_variables_to_bazel (#2467)
    
    This allows properly passing arguments (i.e. YEAR) without them ending
    up in the bazel file as (likely empty) variables.

[33mcommit d8de9ceabe9d84adb2badf6e4564eef515a4096d[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Apr 11 16:32:47 2019 -0400

    Add test for using google-cloud-cpp as a submodule. (#2462)

[33mcommit 21734077fd45f329ad9afe20870d4661d7c6eb8d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Apr 11 11:50:52 2019 -0400

    New integration tests for SignUrl. (#2456)
    
    Wrote the integration tests for `Create*SignedUrl()` as C++ integration
    tests, using the internal `CurlRequest` class to verify the generated URL
    is usable. That let me simplify the driver script for the examples.
    
    Use separate signing vs. HMAC service accounts in the integration tests.

[33mcommit 89ead341bbe3fdf2ad4845d5bac928cb4829da13[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Apr 11 09:44:31 2019 -0400

    Use CMAKE_BINARY_DIR to make google-cloud-cpp work as a submodule. (#2455)

[33mcommit 1d94ac056bd0b8f3f33a0d30929f6f9f7c9e7e11[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Apr 10 21:41:14 2019 -0400

    Fix test names. (#2454)

[33mcommit 37396d3cb3f57d16264bd4cd690bfc301875e6c6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 10 19:46:48 2019 -0400

    Restore accidentally removed comment. (#2453)
    
    I read the comment wrong and thought it was unnecessary, my mistake,
    restoring it in this PR.

[33mcommit 5ecae12980e16b7870187ba5f8840a7c687cf5f6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 10 19:46:30 2019 -0400

    Refactor V4 signed URL conformance test. (#2452)
    
    Move the test to a new file, with a more descriptive name, and fixed a
    few nits in the test. I am making room for an actual integration test
    for signed URLs and mixing both kinds of tests in one file was getting
    confusing.

[33mcommit fb6ba6b0a010a4ed77cea548f5b1205e55d6987f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 10 16:32:48 2019 -0400

    Use SignBlob API if needed. (#2449)
    
    When the local Credentials cannot sign a blob, either because the
    credentials type does not support this, or because the credentials do
    not match the signing service account we need to fallback on the
    SignBlob API.

[33mcommit faff89d15705c8c2d69f0285bcbdac99473ee481[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 10 14:42:34 2019 -0400

    Fix HMAC key leak in integration test. (#2450)
    
    I forgot to cleanup the HMAC key created in CreateHmacKeyForProject().

[33mcommit 4ded23ee081ed9d846f6588ec5bc508beeb8a0cb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 10 14:01:53 2019 -0400

    Cleanup implementation oauth2::*Credentials. (#2448)
    
    I needed to implement ComputeEngineCredentials::AccountEmail, a virtual
    function to determine the service account associated with a Credentials
    object, if any.
    
    In the process I started a small exercise in yak shaving. There is some
    (rather trivial actually) code refactored from 3 oauth2::*Credentials
    classes into oauth2::RefreshingCredentialsWrapper. There was a lot of
    coupling in this code, and the const-correctness had (and probably still
    does have) much to be desired.
    
    I actually stopped myself before doing far more cleanup, because what I
    need for the SignBlob support is fixed, and the code is better, if not
    quite as good as it could be *yet*.

[33mcommit 25b6918ce5f4c175fab6a6c0411512759a0e74ce[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 10 10:42:08 2019 -0400

    Add SigningAccount options to Sign*Request. (#2447)
    
    When singing a blob, either as part of a signed policy document or a
    signed URL, we may want to use a different account (and it must be a
    service account) than the account used for authentication. This is the
    only way to use a authorized user account to access GCP, but sign the
    URLs with a different service account. Or when using GCE authentication
    we may want to use a different service account for the signed URLs.
    
    Note that these options are currently unused, a future PR will connect
    them to the rest of the code.

[33mcommit ae4aef34a45b5c42763b15b71e09bf1c1b117d5e[m
Author: Scott Hart <sdhart@google.com>
Date:   Wed Apr 10 10:31:56 2019 -0400

    2391 moved operator== and operator!= from member to free functions (#2443)

[33mcommit b2f90d28fb029d3faf6b84e14c8abde356c56b63[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Wed Apr 10 08:32:23 2019 -0400

    Remove noex::Table::ReadModifyWriteRow() and SampleRows() (#2409)

[33mcommit d9c0af7e4e84937681cfc0d72292e28e28d7bf24[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 10 06:25:01 2019 -0400

    Refactor UsingTestbench() function. (#2446)
    
    In some tests we need to know if we are running against the testbench,
    for example, because the testbench implements special headers to control
    its behavior, or because the testbench does not implement some
    functionality (signed URLs is the one I can think of). We had multiple
    versions of this function.

[33mcommit bf56ab91c4f4ecaa858f35c9869da8ec3011623c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 23:04:15 2019 -0400

    Add a number of missing examples to CI build. (#2444)
    
    A number of the examples were not being run as part of the CI build.
    If you are wondering, a little birdy called "code coverage" told me
    about these.

[33mcommit 0e7b22387ffa60b99cef120a7820713c8e8ce3d6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 21:23:32 2019 -0400

    Fix cut&paste mistakes in HMAC key examples. (#2445)

[33mcommit 6d623cc6e72b0bd1b58d338fe710a69a5842d4c1[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Tue Apr 9 18:08:17 2019 -0400

    Create code snippet for bigtable_row_exists (#2416)

[33mcommit 6683c1c3f699a2f0198c451c0204ae8260735f53[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Apr 9 17:42:28 2019 -0400

    Output content-length-range parameters as numbers, not strings. (#2438)

[33mcommit debbe564bae8827571c43801e44bed4ecc99a666[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 16:05:49 2019 -0400

    Fix inconsistencies in SignBlob{Request,Response} tests. (#2429)

[33mcommit 6ff6153f7f1da039ed70dd87bd8fd3fe6f82aae1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 15:32:11 2019 -0400

    Implement internal::*Client::SignBlob(). (#2431)
    
    We do not plan to expose directly to application developers, but with
    this PR it is possible to use the IAM API to sign blobs:
    
    https://cloud.google.com/iam/credentials/reference/rest/v1/projects.serviceAccounts/signBlob
    
    the usual tests for retries and an integration test is part of the PR.

[33mcommit 403543c0d2a419d51d7f75e8d6e68d9d7c702657[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 15:04:12 2019 -0400

    Implement "Make Bucket public using IAM" sample. (#2439)

[33mcommit f41220503287c20ad8dad9b9693f37fa1b13d0ec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 14:52:20 2019 -0400

    Fix region tags for bigtable_hello_world. (#2437)

[33mcommit 6c0ad23fb67eeee1d00c53acea96c13eb562a5da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 13:40:57 2019 -0400

    Fix flaky HMAC key integration tests. (#2436)
    
    I was being paranoid about leaving HMAC keys undeleted after a test, so
    I introduced loops to delete them at the end of the integration tests.
    But that is racy because another build may be trying to run the tests at
    the same time and their keys would be deleted too.
    
    We should consider creating a new service account for each build, so
    they are better isolated from each other, but that requires additional
    permissions, I created #2435 to track that.

[33mcommit 1f359bd1c22f89f9b49a7c41edbc8207ee891c77[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 9 12:43:07 2019 -0400

    Prepare Credentials class to support SignBlob API. (#2428)
    
    Instead of using RTTI to determine what Credential classes can be used
    to sign documents use a virtual function. In a future PR we will first
    try to sign blobs locally using the Credentials class, if that fails we
    will use the SignBlob API.

[33mcommit e6d1493ad11f56fe17ebcb98bf1d83e1f2733910[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Tue Apr 9 10:16:22 2019 -0400

    Standardize documentation on "cmake-out" for cmake's binary output. (#2399)

[33mcommit 13ab180348a6f734bd55ecec52adcaf44258f7e0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 19:01:41 2019 -0400

    Remove invalid region tags. (#2432)
    
    This PR removes the region tags that do not exist in the internal
    tracking tool. We still want the examples for the library reference, but
    these examples will not be reference by cloud.google.com website.

[33mcommit 81e6c6abbef438bbe159c22e316471579df083ba[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 19:00:57 2019 -0400

    Fix typos in region tags. (#2433)

[33mcommit fe31922f6ea2d143509b824f89cd16759abacc2b[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Mon Apr 8 18:52:56 2019 -0400

     Clean up relational operators (#2419)
    
    Clean up relational operators.
    
    * Convert all member operators to free functions.
    * Fix a bug in operator== for CommonMetadata (it wasn't checking owner)
    * Standardize on using std::rel_ops
    * Move 'friend' declarations to class private sections.
    * changed operator<< for RowRange to not require friendship
    
    In cases where I was able to implement the operators using the existing
    public API I did so, otherwise I preferred making them friends over adding
    to the API.
    
    I left PaginationIterator operators defined inline in the class because
    all the verbiage necessary (forward declaration, friend declaration,
    then definition) to make them friends makes it less readable IMO.

[33mcommit ab09d075cb0323497190cde9aa4993881f76f2c6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 16:57:00 2019 -0400

    Implement get-bucket-class-and-location example. (#2426)
    
    This is one of the standard examples for GCS client libraries, it should
    show how to get the storage class and location of a bucket.

[33mcommit c5ab5569bbe0a569cf1c18b89a56527d241d2009[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 16:19:21 2019 -0400

    Add storage_stream_file_upload region tag. (#2427)
    
    This example already exists, we just needed the right region tag.

[33mcommit 60117041083c3fe9925fab2eb650807eb96066cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 15:38:52 2019 -0400

    Implement SignBlobRequest and SignBlobResponse. (#2424)
    
    This is part of the changes to use the APIs to sign blobs. That will
    allow us to sign URLs and policy docs, even when the credentials are
    not service account credentials.

[33mcommit c7337c327d21f54c355b09e777cae5a5a6b4221b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 15:10:46 2019 -0400

    Enable HMAC Key integration tests in production. (#2423)
    
    The HMAC Key support arrived (for whitelisted projects) to production,
    so we can enable this for our integration tests.

[33mcommit 28717cfb31ba29ef3ab5c8eecaf4aa5847dcd04c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 14:14:13 2019 -0400

    Start document to create testing resources. (#2425)

[33mcommit 72398fece01bcbfe166e5c2bb4b22f7fe55bccf2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 8 13:32:59 2019 -0400

    Multiple fixes to the HMAC implementation. (#2422)
    
    The `serviceAccount` query parameter is now called
    `serviceAccountEmail`.
    
    The `secretKey` field when creating a HMAC key is now called simply
    `secret`.
    
    The testbench was not returning errors correctly, and some errors did
    not include the necessary debugging information.
    
    The UpdateHmacKey() request should use `PUT` not `POST`.
    
    Only inactive HMAC keys can be deleted, so the testbench needs to check
    this, and the unit + integration tests should deactivate a HMAC key
    before trying to delete them.
    
    DeleteHmacKey no longer returns the metadata for the deleted HMAC key,
    it returns an empty response (which we represent by `Status`).
    
    Set Content-Length in CreateHmacKey(). For somewhat silly reasons
    `CurlRequestBuilder` does not automatically set the `Content-Length:`
    header to 0 when the payload is empty: the same code path handles POST,
    PUT, GET, and DELETE requests, and the header is only required for POST.

[33mcommit 9ea05b020c67c7f7b2a98f242cd1d249f671405d[m
Author: Todd Derr <todd.derr@gmail.com>
Date:   Mon Apr 8 13:25:10 2019 -0400

    Make optional's relational operators free functions. (#2418)

[33mcommit 0a4753e081cc282f27070388cb2958b640746f53[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Apr 6 16:29:40 2019 -0400

    Fix region tags for a couple of storage samples. (#2412)

[33mcommit 19c92f3b92465316f5dd64fdf169d8b50508d119[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 5 18:04:05 2019 -0400

    Create HMAC Key samples. (#2410)
    
    We want separate samples to enable and disable a HMAC Key for
    consistency with the samples for other languages.

[33mcommit 3284e3413b3d1a6c1e7057852ec7356638235138[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 5 14:54:32 2019 -0400

    CMake: Use CURL::libcurl instead of CURL::CURL (#2407)
    
    This matches what libcurl exports and also what FindCURL defines as of CMake 3.12+.
    
    See: https://cmake.org/cmake/help/v3.12/module/FindCURL.html

[33mcommit 457171a55c7209f32b0ed86fd6921a060c1eac8d[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Fri Apr 5 12:52:18 2019 -0400

    Implement bigtable::Table::AsyncReadModifyWriteRow (#2402)

[33mcommit 127b967be348a5a40faf0ff7ca2b3ad8c330946a[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Apr 5 10:35:41 2019 -0400

    bumping version numbers for next release (#2405)

[33mcommit 2658dbf4526a028a82dcad2b38ce3aedc3859b76[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Apr 5 12:33:44 2019 +0200

    Async start a longrunning op and poll for result. (#2357)

[33mcommit 1d4b8836b19a8e07924b92d241360d9fa69dc341[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Apr 5 05:23:47 2019 +0200

    Implement future-base async multi-page requests. (#2393)

[33mcommit a0161d57c29f7019a598ffaabfc8049a5a2cbed0[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Apr 4 16:43:43 2019 -0400

    release notes (#2403)

[33mcommit 01cb07e5f3705d5e34c8518108bfbdd0c622e370[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Apr 4 14:10:01 2019 -0400

    Do not throw exceptions in WriteObject(). (#2400)
    
    We were still throwing an exception in WriteObject() for some types of
    errors. This fixes that problem and adds integration tests to verify we
    do not throw exceptions in other media operations (downloads, uploads,
    etc.)

[33mcommit 9f154a340fcffc7d6c6e18af6755a70c396bf17b[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Apr 4 14:02:13 2019 -0400

    keep instance_admin_endpoint_ and admin_endpoint_ in sync (#2401)

[33mcommit fefcfb7b61915181956f999ea0672f67ab655018[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Apr 4 13:28:13 2019 -0400

    Create code snippet for bigtable_read_prefix list (#2396)

[33mcommit f5d22462ee11d37b57d104cb77978a47f9a503c7[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Apr 4 17:32:55 2019 +0200

    Make `StartAsyncPollOp` accept future<Operation>. (#2384)
    
    Per coryan@'s suggestion, StartAsyncPollOp is always used in then, se we
    might make it friendlier to use in such a case.
    
    This change allows calling StartAsyncPollOp before the operation is
    ready, which allows us to not capture arguements required for its
    creationg in yet another entity - that was cumbersome.

[33mcommit 7b682b1cd31417b9f079be4ded6b3eebabae5731[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Apr 4 09:20:23 2019 -0400

    Fixed small StatusOr::op bool, usage bug (#2389)

[33mcommit 8ee6f94738173d7dda376809eb4a923ad3c1c126[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Apr 4 08:44:53 2019 -0400

    BulkMutator is overusing UNKNOWN error. (#2377)

[33mcommit 0892f0be688032dadfd9ddb3d81c85eb4686413a[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Thu Apr 4 18:09:58 2019 +0530

    Implementation of TableAdmin::AsyncModifyColumnFamilies (#2394)

[33mcommit c95207fc0e0a2e96209bdd943f478032306883fb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Apr 4 08:26:52 2019 -0400

    Always use resumable uploads in ObjectWrite() for better error detection and retries. (#2397)
    
    Currently we have 3 ways to upload object data:
    
    If you give the library a string, we upload using a single POST request.
    If you create a ObjectWriteStream this might be backed by a resumable upload, in which case a "chunk" is uploaded at a time (using PUT), and we apply the full retry loop for each chunk.
    If you create a ObjectWriteStream without resumable uploads the library just tries to upload your data, if there is an error the library cannot recover.
    Instead of improving the error handling and detection for the second approach this PR proposes that we simply remove it. There is some downside: for small objects the second approach is faster, but for small objects the first approach is even faster than the second.
    
    This is a big change and we can discuss how to break it into smaller pieces if you want. Note that the public APIs remain the same, we just changed one of the implementations.
    
    If you are wondering why we implemented all three, it is because we implemented the first and second approaches first because they are easier to implement.

[33mcommit 56c83b6644911b7b8303e5ce0bf28587179d2437[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Apr 3 09:48:04 2019 -0400

    Ignore additional build dirs in check-style (#2386)

[33mcommit 02dbadf2575c5c87ab190ca1edf63a43b13964e2[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Wed Apr 3 08:51:37 2019 -0400

    Implement bigtable::Table::AsyncCheckAndMutateRow (#2382)

[33mcommit e30b1bfb207fe6dbd6415280cfdb2eb1e677d9db[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Apr 2 12:40:43 2019 -0400

    Return an error when downloads fail to start. (#2385)
    
    Before returning a ObjectReadStreambuf from `CurlClient::ReadObject()`
    verify that the stream has actually started to download. If it cannot,
    then we want to signal this as a error so the retry loop can retry the
    download.

[33mcommit 568b27a6bf7dec3c03af00eb9e04ba761874f4ae[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 1 18:25:42 2019 -0400

    Fix Object*Stream move constructor and assignment. (#2383)
    
    We were not moving the state and formatting flags, evidently
    `std::ios_base` has a `move()` and `set_rdbuf()` functions for this purpose,
    but those are not available in gcc-4.8 (and others), so this change is
    more complicated that it would be otherwise.

[33mcommit 4bfb249145767fd2740a339403206ac6ed64060a[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Apr 1 16:37:35 2019 -0400

    Support policy documents (#2370)

[33mcommit 61286d5447d8905cb603288a508b2d373c111cbb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 1 12:27:19 2019 -0400

    Use exceptions to report "cannot happen" errors. (#2380)
    
    A couple of functions were using `Status` to report an error that can
    only happen if our code is using the libcurl APIs incorrectly. We use
    exceptions for that in other places, we may want to change this, but at
    least we should be consistent.

[33mcommit fbffa630e93bbb6cd95ce1e9a0223b6b0b203bcc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 1 12:10:39 2019 -0400

    Fix inconsistently named function in RequestBuilder. (#2381)
    
    The other two `RequestBuilder::Build*` functions are named after the
    return type, `RequestBuilder::BuildUpload()` was different for no good
    reason.

[33mcommit 9115a27dfda55e954cb921d43906eb183fe55a60[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 1 09:27:27 2019 -0400

    Report errors detected in CurlDownloadRequest. (#2378)
    
    CurlDownloadRequest was dropping errors on the floor, when it should
    not. I think I did not do a great job converting this class to StatusOr.
    In any case, I added an integration test to show that the errors are
    reported. Note that the errors are not handled correctly yet (no
    retries for example), that will be the subject of a future PR.

[33mcommit 35c147eeab88c9bac6abaf60dfb13194ba165d91[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 30 21:57:49 2019 -0400

    Do not raise exceptions in ReadObject(). (#2375)
    
    The plan was to return the status in the ReadObjectStream, that was not
    working when there were errors (such as authentication problems)
    preventing us from even creating a valid ReadObjectStreambuf. The
    "solution" proposed here is to create a streambuf that is permanently
    set to "this is an error stream, everything is terrible".

[33mcommit 4e4b31e646b449a763e75dd366aa909efa4679c9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 30 21:56:47 2019 -0400

    Remove unused test functions. (#2376)
    
    We stopped using these functions when the Client class was changed to
    report errors via StatusOr/Status.

[33mcommit 0160ebc1c1caa1b10b9e2f679eaae2fb78cd0e43[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Fri Mar 29 17:33:50 2019 -0400

    Create code snippet for bigtable_delete_particular_cells (#2369)

[33mcommit d8460d31bbf3411559a99a43d2c0aed2c54ff766[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 29 07:45:50 2019 -0400

    We need Bazel 0.24.0 from now on [skip ci]. (#2368)

[33mcommit 82019a43041b2954aa0eb137035fedb2e2d291bc[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Mar 29 08:47:47 2019 +0530

    Adding region tags to snippets (#2367)

[33mcommit c3363d7aef5a19de6f4630d5a0a318df2f41c276[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Mar 28 22:53:35 2019 -0400

    Implement bigtable::InstanceAdmin::AsyncDeleteInstance (#2362)

[33mcommit 92ae48ecb70107e5511eb64f766ee17bcd72f0ac[m
Author: katre <katre@henchmonkey.org>
Date:   Thu Mar 28 14:04:31 2019 -0400

    Add required dependencies so genrule can access CC and CC_FLAGS. (#2358)

[33mcommit 8a7827ef0123ff67e44a09fbb090731255f5ca6e[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Mar 28 12:11:24 2019 -0400

    Updates bazel used in CI (#2360)

[33mcommit c5648b705e8f0e9198487b8868098b3352fe7c1b[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Mar 28 11:25:34 2019 -0400

    Create code snippet for bigtable_delete_all_cells (#2353)

[33mcommit 88fefae36576626c66db4eb94154692c4188a632[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Mar 28 10:11:01 2019 -0400

    Create signed URL V4 conformance tests (#2250)

[33mcommit bf6e35f3dab7e206eec7c34e27bed1cfee2555f5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 28 07:51:33 2019 -0400

    Fix flakiness caused by drop all rows quota (#2355)
    
    Before running each integration test we cleanup the test table, removing
    all rows from it. We used `DropAllRows()` for this, but there is limited
    quota for this operation and the builds are failing because we exceed
    that quota. Use `BulkApply()` when the number of rows is relatively
    small, which is most of the time, and fallback on DropAllRows()
    otherwise.
    
    This basic plan became a bit complicated because the version of the
    emulator we can use has a bug in dealing with rows
    deleted via `Apply()` or `BulkApply()`:
    
    googleapis/google-cloud-go#1240
    
    The bug is fixed, but that version has not made it to a usable SDK yet.
    The bug does not affect rows deleted with `DropAllRows()`.
    
    So to save `DropAllRows()` quota we will use `BulkApply()` when running
    in production, and to workaround the bug use `DropAllRows()` when using
    the emulator.
    
    Since we need to know whether we are using the emulator in the
    `TableIntegrationTest` fixture, refactor the function to check that.

[33mcommit bf252b343f7931ff3dd2f83089f7de16e99c01b6[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Wed Mar 27 15:47:50 2019 -0700

    Add region tags around PUT signed url (#2354)

[33mcommit 51f3709cb2ce0c6c7c30568395e9937997fbff62[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Mar 27 22:08:11 2019 +0100

    Implement longrunning ops via StartAsyncPollOp. (#2347)

[33mcommit add1a189e6c86d4648191c2f2418c117feaf031f[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Mar 27 16:59:47 2019 -0400

    Removed unneeded enablers in storage/ (#2352)

[33mcommit 4893a300d06910fcb729b5431f00653418730987[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Mar 27 16:59:06 2019 -0400

    removed redundant enablers in bigtable/ (#2351)

[33mcommit 97b6ef1c7ce7874795732d76e05ab6751c29851b[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Mar 27 16:08:49 2019 -0400

    Fix some region tags for storage samples. (#2346)

[33mcommit 69d7158d0ce14a2d27b66e6da2baf8946ba023e1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 27 16:08:25 2019 -0400

    Disable debug output for googleapis_project. (#2349)
    
    It was useful when bootstrapping the new googleapis dependency, now it
    is just noise, I should have removed it when I merged the final version.

[33mcommit 241ef65c7219550a7c819b4f9d027bbb08b3a35b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 27 14:55:01 2019 -0400

    Consistently warn about async-APIs status. (#2348)
    
    The async APIs in Cloud Bigtable are not stable yet, we had not put the
    warning in all the right places, fixed that, and a few typos too.

[33mcommit 79d0347dbe6c1510f30213de12ae530bf8cb31bc[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Mar 27 13:25:52 2019 -0400

    Cleanup some FromHttpResponse fn's to take std::string (#2345)

[33mcommit 9835b14aedfd782e157d67e2a58006ecc7a1c432[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Mar 27 15:07:29 2019 +0100

    Reimplement AsyncPollOp via futures. (#2339)

[33mcommit 6566614f312f9103d4f916ab810990cde28e1994[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Mar 26 16:15:34 2019 -0400

    Add change object storage class sample. (#2342)

[33mcommit 82086d8cd33421fed671ad71483650849cb9e536[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 16:07:56 2019 -0400

    Fix std::size_t to int warnings. (#2341)
    
    These are easy because the values are small enough to fit into the
    destination type, so a `static_cast<>` does the trick.

[33mcommit 9f5bf83a6cb48d985a0d06e07cf36a1f9a4afbc2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 16:02:58 2019 -0400

    Update README shields. (#2343)

[33mcommit 06471d893f0c7bb3024b1c81bfd37e6b3bdd63e5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 15:46:01 2019 -0400

    Fix misspelling and warnings. (#2340)
    
    We misspelled "ou*t*standing" as "oustanding". We were also converting
    from `std::size_t` to `int` without a cast, which produces warnings in
    MSVC.

[33mcommit 49df3b020dc714ee41aaea19b4d7dc5c677fe600[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 13:48:07 2019 -0400

    Add instructions on how to use the installed libraries. (#2335)
    
    Show how to integrate with CMake, Make, and Bazel in the landing pages
    and in the INSTALL.md page.

[33mcommit d2188903adab6fc7f75ad8f34e1bca0da1308a01[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 13:47:17 2019 -0400

    Implement ObjectMetadata::set_storage_class(). (#2334)
    
    The field is writeable, though not via Update or Patch operations.

[33mcommit e5fe8535019c19c18a1bbe181035150cd567c4f2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 13:46:41 2019 -0400

    Disable some MSVC warnings because Protobuf. (#2337)
    
    Protobuf headers generate too many warnings on MSVC. Specifically, they
    use `std::iterator<>` which will be deprecated in C++17, but MSVC warns
    about it now, and they convert from `int64` to `int` without a cast,
    which MSVC also dislikes.

[33mcommit 7e108d34b3806efa2c365c7a3035d28c83f5e31a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 12:56:09 2019 -0400

    Fix missing `using` declaration. (#2338)

[33mcommit 3c4d27e588edea61d5ffe05f55f5b8cf50c24b6a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 11:27:37 2019 -0400

    Update reference ABI after latest changes. (#2336)
    
    I recently changed some data structures in google/cloud/storage. I
    thought it would be interesting to highlight how these changes affected
    the ABI and (to the degree it is measurable) the API:
    
    https://source.cloud.google.com/results/invocations/b5597a24-982c-45ec-b9e9-945a7c9ddc8d/targets/cloud-cpp%2Fgithub%2Fdocker%2Fcheck-abi/log
    
    Starting on line 4363 (sorry, can't create direct link). In summary the
    changes that affect "Source Compatibility" are:
    
    - I removed some functions from the `google::cloud::storage::internal::`
      namespace. This change is allowed, though technically API breaking.
    - The name of a field in `internal::CreateHmacKeyResponse` changed, this
      also allowed, though technically API breaking.
    
    The report also highlights a number of A*B*I breaking changes, which I
    list here for completeness sake, though we allow these at any time:
    
    - The size of the `HmacKeyMetadata` class changed. Note that the
      report does not call this an API breaking-change.
    - There is a similar change to `internal::HmacKeyResponse`.

[33mcommit 02c28830d6fc3a094ea3deaa46f2f565e8fd4453[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 06:59:10 2019 -0400

    Simplify Makefile configuration. (#2333)
    
    Generate better pkg-config configuration files for the Cloud Bigtable
    and Google Cloud Storage C++ client libraries. While we do not use
    pkg-config, nor do we use Make for that matter, we should expect that a
    good number of our customers would:
    
    https://www.jetbrains.com/research/devecosystem-2018/cpp/
    
    Giving them easier to use pkg-config files seems like a good idea, at
    relatively low effort.

[33mcommit 2e659803a1e880157fffada7e06e2984e385afa3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 06:54:41 2019 -0400

    Refactor ObjectMetadata to JSON conversion functions. (#2330)
    
    I need to clean these up to properly support `set_storage_class()`. The
    functions had different naming conventions, return types, and fairly
    limited testing. Fixed all that so when we implement
    `set_storage_class()` the values are inserted in the right calls.

[33mcommit 732a8978edb2914db25a3c9311f81fcb4d003152[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 26 06:53:20 2019 -0400

    Fix ADR status [skip ci]. (#2332)

[33mcommit 5e0dc3551aec046a2e07d6fc25521689f9b23dce[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Mon Mar 25 22:42:01 2019 -0400

    Create code snippet for bigtable_get_family (#2326)

[33mcommit d465918c19d85fb78c5e67b68da802858c088e1b[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Mar 25 20:51:47 2019 -0400

    Added binary-distributions adr [skip ci] (#2329)

[33mcommit 82a34c5fb2176fb02e967d97ea1239ef4dca148e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 25 16:57:57 2019 -0400

    Remove pkg config references from the documentation. (#2327)
    
    Fix the documentation, where we still had a couple of places saying that
    `pkg-config` was an optional mechanism to configure dependencies. We
    have eliminated the need for this, and the code is cleaner. Also fix the
    description of how we support dependencies via CMake.

[33mcommit 41203f6ecd1571409bc7573d010ddc2e41ce419e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 25 16:33:55 2019 -0400

    Update HMAC functions to catchup with protocol. (#2328)
    
    The JSON protocol for HMAC keys is (as advertised) not stable. Changed
    the implementation to catchup with the latest updates in the spec.

[33mcommit 07f860f064c8fc080c6807225965ceb54af20347[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 25 14:49:16 2019 -0400

    Make multiple attempts to download json.hpp. (#2325)
    
    Some of the CI builds are failing because this file fails to download.
    Use the standard technique: make multiple attempts to download, using an
    exponential backoff.
    
    Typically we rely on ExternalProject_Add() to implement the download
    retry loop, but for this file we cannot because early versions of
    ExternalProject_Add() cannot download single files.

[33mcommit 02caa53c389fcbc23db6b2c3eb967654620a1ad0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 25 14:45:42 2019 -0400

    Change CMake-config files to work without `pkg-config` dependency. (#2323)
    
    In this PR we fix `FindgRPC.cmake` to do not depend on `pkg-config`, and change the
    generated config files for `googleapis` and `bigtable_client` to take advantage of this
    new file.
    
    To test these changes I modified the `ci/test-readme/Dockerfile.*` files to also build
    sample programs using CMake after installing `google-cloud-cpp`. Separately we enabled
    these builds as presubmit tests.

[33mcommit e6475d3982e1cfb26e40651a2f0d6a148233b027[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 25 13:33:38 2019 -0400

    Support including nlohmann::json before our headers. (#2324)
    
    In hindsight this was obvious. The customer may chose to include
    nlohmann::json before our headers, and we need to support that too.

[33mcommit 39d83d33c11bacf4990fc6869ca94fd555c456fc[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Mar 25 12:11:46 2019 -0400

    Implement storage create bucket with storage class/location sample. (#2321)

[33mcommit 8200acec4f5f72e126877c46cdb58570a4b16b64[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Mar 25 21:03:56 2019 +0530

    Moving `noex::TableAdmin` async functions to `TableAdmin` (#2317)
    
    This change is for moving `noex::TableAdmin::AsyncCreateTable` to
    `TableAdmin::AsyncCreateTable`.

[33mcommit 6202a7db799b9955128cc9bbc3f7b2c3af233578[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Mar 25 11:33:32 2019 -0400

    Set CMAKE_SKIP_INSTALL_RPATH for bigtable_protos (#2289)

[33mcommit 5818ee8618edd80808da71041c85e5fbec85830b[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Mar 25 11:33:04 2019 -0400

    Implement remove/add object owner samples. (#2318)

[33mcommit 84ee5c13ff48ecd5ad4889aeb3e2874ffb3f225c[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Mon Mar 25 10:24:11 2019 -0400

    Do not depend on noex::Table::AsyncApply(). (#2292)

[33mcommit 617454184a68c0bff4611cb67adaccbb89025dd9[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Mar 25 19:50:44 2019 +0530

    Moving `noex::InstanceAdmin` async functions to `InstanceAdmin` (#2316)
    
    This change include `InstanceAdmin::AsyncListInstances`,
    `InstanceAdmin::GetInstance`, `InstanceAdmin::AsyncGetCluster` and
    `InstanceAdmin::ListClusters` functions.

[33mcommit fe0a278a0cee3c17be46ed5ee1b97dd95cef372b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 25 08:45:55 2019 -0400

    Allow third-parties to use nlohmann::json. (#2315)
    
    Using both nlohmann::json and google::cloud::storage together should be
    possible, but some bugs were preventing customers from doing so. First,
    we needed to `#undef` the include guards for nlohmann::json because
    otherwise customers cannot include the header. We also needed to remove
    literal operators nlohmann::json puts in the global namespace.
    
    Eventually we should audit our public headers to not expose the
    nlohmann::json types at all, but that is a more difficult fix.

[33mcommit e9b125db6d6c1c0e10bc07cfe1c7370b7113b538[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Mar 25 04:27:36 2019 +0530

    Adding region tag in Bigtable C++ client samples (#2307)

[33mcommit dc0a9cb6ebe3d6ec520709b43edc7aa856f4529d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 23 17:57:54 2019 -0400

    Workaround build problems on openSUSE:Leap. (#2311)
    
    This weekend openSUSE:Leap released the 1.1.0i version of the OpenSSL
    runtime libraries, but they did *not* release the development libraries
    at the same time. Effectively this means that installing the development
    libraries requires a downgrade.
    
    I just changed both openSUSE:Leap and openSUSE:Tumbleweed to always
    allow a downgrade when installing the development tools.

[33mcommit e2f1aeacd5255cea148809eb587c7d3d10a7f1bf[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Sat Mar 23 13:39:35 2019 -0400

    Implement add bucket owner sample. (#2295)

[33mcommit feef8451b0be5d000f29296f4fed833ba0e5530e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 23 12:32:37 2019 -0400

    Fix openSUSE build. (#2306)
    
    openSUSE's version of libcurl returns different error codes when
    trying to connect to an invalid URL (we use http://localhost:0 in our
    tests). Changed the curl_client_test to just check for "error" and not
    care about the actual error code.
    
    Also added a separate test for the CurlHandle::AsStatus() function.

[33mcommit 53a83d51c995c1a4621a105069870ba6824dfa31[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Sat Mar 23 10:24:36 2019 -0400

    Replaced (date +%s) with {RANDOM} (#2291)

[33mcommit 34da3bb63c1b918650dc903a3858c6b2f97bbf5c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 23 08:23:54 2019 -0400

    Enable presubmit for "test-install" builds. (#2294)
    
    I thought we could away without these, but evidently not. A weird
    platform specific bug just sneaked by (the openSUSE:Leap build is
    broken), and I am about to submit changes to test the installed CMake
    modules, and that is very tedious to test without these presubmits.
    
    Note that merging these files will not active the builds, this is
    just in preparation for a future change in the internal configuration
    for Kokoro.

[33mcommit f7f7bc509b7f3f68c980f78d70ccf4aad6da4b5b[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Mar 22 11:16:34 2019 -0400

    Pass CMake flags if we disable testing (#2279)

[33mcommit d32d1eac2c1d81eae7b676aa1d9ad7cd3fc434d3[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Mar 22 11:09:07 2019 -0400

    Create sample for adding CORS configuration to a bucket. (#2280)

[33mcommit 824784ea4d9653fa43f81649a54e879ec0c2e92f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 22 10:32:02 2019 -0400

    Map curl_easy_perform() errors to StatusCode. (#2285)
    
    We were mapping all CURLE_* errors to kUnknown, we can do better for at
    least some of the errors. This matters because kUnknown is not
    retryable, but some of these errors are.

[33mcommit fda670cd18082148054a650d42547d6f349a72f8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 21 12:56:45 2019 -0400

    Remove googleapis submodule. (#2255)
    
    Remove the third_party/googleapis submodule, replace it with an external
    project. The external project is compiled, more or less, as usual:
    
    - CMake downloads the code.
    - CMake calls CMake to configure the external project.
    - CMake calls CMake to build the external project.
    - CMake calls CMake to install the external project.
    
    The interesting differences are:
    
    - After downloading the code we copy a `CMakeLists.txt` file and some support modules because googleapis does not include build scripts (other than Bazel `BUILD` files).
    - The googleapis external project creates (right now) a single `googleapis-c++::bigtable_protos` target, leaving room for future targets such as `googleapis-c++::spanner_protos`.
    - The installed pkg-config files manage dependencies a little bit better, but fully fixing that is for a future PR (this is is too big already).

[33mcommit afe8c7b76471b2596bd64ba7d90786da253fe2bb[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Mar 21 11:29:31 2019 -0400

    Pass NCPU to external projects. (#2273)

[33mcommit 2f700e4a329f44c68861836b1a9ff5c98fb6ac3a[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Mar 21 10:59:55 2019 -0400

    Add some missing dependencies to config.cmake.in (#2282)

[33mcommit 4278b0cf20f51d41930c547c6c77f2efb3cf3127[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Thu Mar 21 18:32:52 2019 +0530

    Adding region tag in BigTable C++ client samples for better documentation. (#2267)

[33mcommit 0282eae4a676ebbebe67181b0492b99cf10b28e1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 21 08:30:24 2019 -0400

    Add a FindgRPC module. (#2276)
    
    With this module we can simply write:
    
    ```
    find_package(gRPC REQUIRED)
    ```
    
    and this works whether gRPC was installed via CMake or via Make. This is
    needed to remove the googleapis submodule, because when compiling
    googleapis we want a simple way to discover where gRPC is. It should
    also help us simplify the INSTALL instructions for customers that want
    to use CMake.

[33mcommit 0e20ceecba02d7e84bd8a377d89fd3031eae43dc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 20 20:55:40 2019 -0400

    Write a custom module for find protobuf. (#2269)
    
    Finding protobuf is a mess (see the documentation in the module for
    details), but with this module we can just type:
    
    find_package(ProtobufTargets REQUIRED)
    
    and it works. In the future we will use this module to remove the
    googleapis submodule, and we will install it so application developers
    can benefit from a simpler way to discover protos.

[33mcommit 66d39658882d2d8d88a50f3b0bf6d1af009fcb8b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 20 20:03:43 2019 -0400

    Use standard name for grpc_cpp_plugin target. (#2270)
    
    gRPC creates a gRPC::grpc_cpp_plugin target, so why create a target with
    a different name for the same thing? Note that sometimes we need to
    create the target ourselves, maybe because the gRPC library does not
    have CMake-config files installed. But even then, we should just use the
    standard name.

[33mcommit 6144196f8212b001ce4196078c574e7f86e18ffd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 20 18:00:37 2019 -0400

    Refactor MSVC runtime configuration. (#2268)
    
    We had this in the gRPC config, but there is nothing gRPC specific about
    it, and we will need it in a separate file for the `googleapis`
    submodule removal.

[33mcommit e3f55e64b13007d310939bc36a43a5670855c267[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Mar 20 09:10:30 2019 -0400

    Create examples for bucket static website configuration. (#2263)

[33mcommit de3b1e3af2618db80bfea77b24d697461e4ee774[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Mar 20 09:10:12 2019 -0400

    Break from stream loop early if we encounter an error (#2261)

[33mcommit 330228bc8b614bc276ed372e565bb463380c13d0[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Wed Mar 20 00:04:00 2019 -0400

    Do not construct an OK grpc::Status with an error message (#2259)
    
    * Do not construct an OK grpc::Status with an error message
    
    grpc::Status says, "It is an error to construct an OK status
    with [a] non-empty error_message," so use grpc::Status::OK instead.
    Similarly, don't ask for status.error_message() when status.ok().
    
    * Fix build/test failures
    
    TIL that vanilla ctest doesn't check the test binaries are up to date.
    
    * Fix formatting of shortened lines

[33mcommit 9635ffe66f71e3b75435aa99da724e0549bdf591[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 20 00:00:20 2019 -0400

    Implement TableAdmin::AsyncDeleteTable(). (#2258)
    
    This implements `TableAdmin::AsyncDeleteTable()`, the integration test,
    and an example. No unit test is needed because that would just duplicate
    the existing unit tests for `internal::AsyncRetryUnaryRpc`.

[33mcommit 0502ab8a9067cd9bc124545b5b59c9ccf514586b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 19 14:00:16 2019 -0400

    Fix several region tags. (#2257)
    
    I copied the wrong region tags into the previous set of bugs.
    
    See #2256 for details.

[33mcommit 38cbbc7529fab10bbbb20f50214ed1c7ab7d024f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 19 13:24:33 2019 -0400

    Implement asynchronous retry loop for simple RPCs. (#2252)
    
    This PR implements an asynchronous retry loop for simple (unary) RPCs.
    
    The loop calls `CompletionQueue::MakeAsyncRpc`, on retryable failures it
    sets a timer (based on the `RPCBackoffPolicy`) and tries again when the
    timer expires.  If the `RPCRetryPolicy` is exhausted, or if the operation is
    non-idempotent, or if the error is not retryable then the operation fails, and
    the last error is reported back to the application (via an `future<StatusOr<T>>`).
    
    In addition to implementing a unit test for the retry function, I modified
    `TableAdmin::GetTable` to serve as a template.

[33mcommit 05cbab3053ff8da5c1543c2f67d15be51da5625a[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Mar 19 18:15:59 2019 +0530

    Moving functions from noex::InstanceAdmin to InstanceAdmin (#2251)
    
    Following functions are added with this PR
    
    `CreateAppProfile`
    `GetAppProfile`
    `UpdateAppProfile`
    `ListAppProfiles`
    `DeleteAppProfile`
    `GetIamPolicy`
    `SetIamPolicy`
    `TestIamPermissions`
    
    Please see #2099 for more details.

[33mcommit f5af7365440c5b359adf66c950a906e8ff6dc41c[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Mar 18 23:05:54 2019 -0400

    Create an example to print the CMEK key in an object. (#2243)

[33mcommit 60d2e334ec22688524a4e56234008ad1a35b289f[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Mar 18 21:13:52 2019 +0530

    Moving noex::InstanceAdmin function to InstanceAdmin (#2241)
    
    This commit includes following functions
     - `ListInstances`
     - `GetInstance`
     - `DeleteInstance`
     - `ListClusters`
     - `DeleteCluster`
     - `GetCluster`

[33mcommit 805f7bc3b153240557377358aeb6e07ab5739f1a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 18 10:53:31 2019 -0400

    Disable signals in libcurl. (#2248)
    
    TIL: libcurl uses signals to perform timeouts by default. This change
    disables the signals for all the handles we create, per the
    documentation on:
    
    https://curl.haxx.se/libcurl/c/CURLOPT_NOSIGNAL.html
    
    I will try to write a regression test later, though it might be hard
    because it requires "waiting for a couple of minutes" to get the
    signal.
    
    In any case, given the documentation, and the fact that there is a bug
    report (#2225) associated with this, I believe we should incorporate
    these fixes.

[33mcommit 1d5d58d223793e460bb0010f4a012ecec7ba0c4e[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Mar 18 10:04:32 2019 -0400

    Update gRPC in Dockerfiles and install instructions (#2238)

[33mcommit 8e4b6ac5a275fb90ab6505078ce343793db4958c[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Mar 18 09:48:10 2019 -0400

    Create an example changing object encryption from CSEK to CMEK. (#2244)

[33mcommit 4d5b6683246eee38d500332d2d9714853d93efc5[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Mar 18 19:14:29 2019 +0530

    Moving non Async functions from `noex::TableAdmin` to `TableAdmin`. (#2240)
    
    `GetSnapshot`, `DeleteSnapshot` and `ListSnapshots`

[33mcommit 3ac6950df755db6c62129a2c785d98442ebfe617[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Mon Mar 18 09:15:08 2019 -0400

    Remove noex::Table::Apply() and BulkApply() (#2247)

[33mcommit a1a29d2b9fe4ec55036b1205961514387d097923[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 16 11:11:22 2019 -0400

    Support g::c::Status in retry and backoff policies. (#2237)

[33mcommit 273ecad7131c2bd1b8a7f21601568e506eb223aa[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sat Mar 16 02:18:23 2019 +0530

    Moving more non-Async functions from `noex::TableAdmin` to `TableAdmin` (#2232)

[33mcommit eee17948952347875a1a4f149cea8a637c1d4215[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Fri Mar 15 16:47:05 2019 -0400

    Remove noexTable::CheckAndMutateRow() and ReadRows() (#2221)

[33mcommit bea70e320e59c6aca84c4ebe2125c2009d5f36da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 15 13:20:06 2019 -0400

    Do not initialize statics in constructors. (#2235)
    
    This fixes most of the integration tests to follow the design
    established in #2230.

[33mcommit a6c4638c187edfaad80683d983b6d586b41673c5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 15 13:06:00 2019 -0400

    Implement simple asynchronous RPCs with futures. (#2224)
    
    In this PR we introduce functions to create simple (unary) asynchronous
    RPCs that return a future<StatusOr<T>> instead of taking a callback
    parameter. Because the futures can also accept callbacks via `.then()`
    these new functions will (soon) replace the callback-based functions,
    without loss of functionality.
    
    The implementation does not use any locking because I could not
    reproduce the synchronization problems. If we find out there is a
    problem we can introduce them again.

[33mcommit 16549a383241f30df94e283f851fbc7034586d16[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 15 10:38:36 2019 -0400

    Modify the scripts to update the ABI snapshot. (#2220)
    
    Developers would be able to run:
    
    $ BUILD_NAME=update-abi ./ci/kokoro/docker/build.sh
    
    to update the ABI snapshots. The new snapshots were created using that
    technique.

[33mcommit 1a606662ebb23478c648113af398204bf8a343c5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 15 10:11:22 2019 -0400

    Explicitly include grpcpp/resource_quota.h (#2233)
    
    We are getting grpc::ResourceQuota by accident, we need to IWYU because
    this will no longer be the case in the near future.

[33mcommit b2ac7673dd0aa2fe882aafc3f138a7f7ec3e9f79[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 14 22:06:04 2019 -0400

    Initial draft of "flags" for integration tests. (#2230)
    
    The integration tests have been using this weird pattern where we store
    the command-line flags as static member variables of the test
    "Environment", and then we initialize these member variables in the
    environment constructor.
    
    This solves the problem in one integration test, so we can discuss the
    pattern to follow in all others.
    
    Part of the changes for #2181.

[33mcommit 5ec89d85c21c83b49b4a7fc722949a6e3da30ac2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 14 16:00:31 2019 -0400

    Fix object revision tracking (#2229)
    
    The testbench was using the same variable to keep track of the latest
    generation of an object, as well as the generator for new generation
    numbers. That works kind of Okay until you start deleting revisions.
    With this PR we use two different variables to track this.

[33mcommit fe275a0faa540035d9e04e0250984280b356a8f8[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Mar 14 15:00:14 2019 -0400

    Changed to use the latest version of bazel (#2223)

[33mcommit dd9444b5354f45e86b7111a02226361cfe40f621[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Mar 14 13:03:39 2019 -0400

    Implement examples of lifecycle management. (#2228)

[33mcommit 477059964846c982c339209e065a6d82e92a9674[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 13 22:52:12 2019 -0400

    Fix hmac key snippets (#2227)
    
    I forgot the magic incantation to turn code snippets into actual
    snippets.
    
    * One of the tags was too long.

[33mcommit 691aa307241d846351e600fe9afe92bf66cd9726[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 13 18:58:12 2019 -0400

    Implement UpdateHmacKey(). (#2218)
    
    Implement the `Client::UpdateHmacKey()` function, with the usual
    battery of tests, examples and documentation.

[33mcommit e621a0f86bf4beb0d8aba8fa8161d9f9f0ae9dd0[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Mar 13 18:20:27 2019 -0400

    Fix a couple of issues in README.md under the Windows section [skip ci] (#2217)
    
    The chocolately command was not copy/paste friendly. This fixes that. Note that
    the leading space is intentional since we are doing a line continuation. Also,
    the other parts of the guide mention installing git, so we add that as well to
    be consistent.

[33mcommit 9653b50da179bbec46a8115931170a1e2a9a2ba4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 13 18:15:56 2019 -0400

    Fix Kokoro + Windows build. (#2222)
    
    For some reason `vcpkg integrate` is freezing. We have not needed this
    for a long time (when we switched to Ninja), so I just removed it.
    
    I had to add some more debug logging to get here, which I think it is
    generally useful, so I am leaving it in.

[33mcommit abecda143b305f57853eb5d7b35154af5be1a5fa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 12 22:49:38 2019 -0400

    Implement Client::GetHmacKey. (#2215)
    
    Another operation for HmacKeys. Usual battery of tests and examples.

[33mcommit 2d7cdc87a86adcc039d0381424ca25243ea349fa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 12 22:41:46 2019 -0400

    Remove check-abi build from Travis. (#2210)
    
    Now that this build has been moved to Kokoro we no longer need it on
    Travis.

[33mcommit 669aa5f49974c478407a1980ee3c5839b6d6b37d[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Tue Mar 12 14:23:58 2019 -0400

    Upgrade grpc to v1.19.1 (#2211)

[33mcommit 6c53c1b5dfffc075279661f1636d5f7e1e47fd83[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 12 13:58:54 2019 -0400

    Fix version integration test (#2213)
    
    I did not notice one of the PRs was going to break the build. Note that
    it did *not* break the build, the build passed once, but the second run
    would be broken because the object versioning examples changed the state
    of a global bucket.
    
    The "Right Thing"[tm] would be to not use a global bucket. I plan to do
    that in a future PR, but for now we need to get the builds restored
    quickly.

[33mcommit bebfb0f0ed857976f452705147b5a04ba10a30c1[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Tue Mar 12 08:24:37 2019 -0400

    Create storage examples for object versioning. (#2194)

[33mcommit 379f7801572dcc09048d075043f2bbe9cf94952b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 12 08:20:32 2019 -0400

    Implement Client::DeleteHmacKey (#2207)
    
    This PR implements `Client::DeleteHmacKey()`, including the integration
    tests, unit tests, and examples. It also consolidates the integration test
    a bit, putting all the current (and future) CRUD operations for HMAC keys
    in a single test.

[33mcommit 4945d88afad3c7dc32fec4dd188e81aae112bb45[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 23:40:03 2019 -0400

    Implement asynchronous timers with futures. (#2206)
    
    This PR adds CompletionQueue functions to create timers that just return
    a `google::cloud::future<>`.

[33mcommit 6f6bbfbfe113c7756c79ea8fa43620818b747c50[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Mon Mar 11 22:25:36 2019 -0400

    Remove noex::Table::ReadRow() (#2196)

[33mcommit a575b4182eb4d9cfe784503d9d1492ef2acef88f[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Mar 12 07:54:01 2019 +0530

    moving GetTable, ListTables and DeleteTable from noex::TableAdmin to TableAdmin (#2205)

[33mcommit a5ed90aac1cb287d0a5bbfd75603824ea26c2ef0[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Mon Mar 11 22:06:30 2019 -0400

    Fix comparison functions (#2204)

[33mcommit e3d363de465735c3929d2b9df8b5ea2e557016d6[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Mar 11 21:50:00 2019 -0400

    Create an example listing objects with a prefix. (#2183)

[33mcommit 62d0f2db2e2415d9f8083b2c297167a261fbedb8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 21:48:52 2019 -0400

    Examples and integration test for ListHmacKeys(). (#2201)

[33mcommit cafe76f5aa362b8f5b02ef396452ea9a128b53c6[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Mon Mar 11 20:15:25 2019 -0400

    Mention pushing the release to Microsoft vcpkg (#2202)

[33mcommit f1bd69779b2d9a65b5e9fcc249de1f1977e2c805[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Mar 12 02:32:07 2019 +0530

    Moving noex::TableAdmin::CreateTable to TableAdmin::CreateTable (#2191)

[33mcommit e9f5f2383a9d8d64e5543b2ee97049723ea217ee[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 15:19:51 2019 -0400

    Refactor HmacKey requests. (#2199)
    
    First, I noticed that we could get rid of the `Client::*ForProject()` overloads if we
    used an option to override the default project id.  That reduces the overall surface
    and fits more naturally with all the other optional parameters.
    
    Then I noticed that there was a lot of commonality across all the request types for
    HmacKeys. We only have two such types so far, but we will get 5 of them, all with
    a common `project_id()` field and (more interesting) with special handling for
    `OverrideDefaultProject`.

[33mcommit 0cce79e24d8a77d138957803d6074d21ffc1d049[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 15:04:39 2019 -0400

    Add `HmacKeys: list` API to the testbench. (#2198)

[33mcommit 9f6e12fdc5d20369fe198ce3a6634aba300c6e13[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 13:48:31 2019 -0400

    Add Client::CreateHmacKey examples. (#2185)
    
    Add code snippets for `Client::CreateHmacKey()`, the region tags are
    guesses, we can change them later if they turn out to be wrong. The
    examples are disabled when running against production because the
    feature is in EAP right now.

[33mcommit eacecb28a8cc802107570f9751c15747ca9cf27f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 13:09:01 2019 -0400

    Fix trivial typo. (#2197)

[33mcommit 734c76dc3aa3bef2367ad62e6c5a79960779aee0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 12:23:19 2019 -0400

    Implement ListHmacKeysReader and friends. (#2190)
    
    This PR introduces the classes to iterate over the HMAC keys. Because
    the iterators need a function on the `RawClient`, I made the changes to
    support that too. A future PR will include the changes to
    `storage::Client` and the corresponding test and examples.

[33mcommit 9d462a70c08e28bb0bd580be2d3615b8e58da49e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 12:13:11 2019 -0400

    Kokoro support to run ABI checks. (#2195)
    
    These changes will allow us to run the ABI checks in Kokoro. The script
    will *not* fail on ABI failures, but the failure reports will be
    available internally. I am planning to add scripts to update the
    baseline in a future PR.

[33mcommit 63fcd93928a6aaab1bf045bccb610938ba246b21[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 11 09:55:30 2019 -0400

    Improve error messages in {Upload,Download}File. (#2193)
    
    The previous messages used confusing naming for what file was a problem.
    The new messages are more explicit, calling out what role does the file
    in question is playing.

[33mcommit a422b631e09a1af0f0bcfbb35d3dca86b0a4f96d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Mar 10 15:27:18 2019 -0400

    Handle object names with slashes. (#2189)
    
    TIL: Flask does not handle identifiers with slashes unless you use the
    `path:` directive:
    
    http://flask.pocoo.org/snippets/76/

[33mcommit db6e3c9c8dc3da550320d2af0c60574566795242[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Fri Mar 8 20:28:10 2019 -0500

    Remove trailing whitespace (#2187)

[33mcommit 062e80cf86d962b357630df35841a2f5340c3c44[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Fri Mar 8 17:29:01 2019 -0500

    Eliminate TABs from source files. (#2184)

[33mcommit 599e58d23adab528a211594e8665efa7022af71e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 8 16:50:59 2019 -0500

    Refactor List{Object,Bucket}Reader classes. (#2171)
    
    I am going to need a third version of these classes to list HMAC keys,
    and that is too much cut&paste, even for me.

[33mcommit 6da6dac5f83a6eb2cd2f3f3732be3dd22fef89f1[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Mar 8 16:29:10 2019 -0500

    Do not throw exceptions from ClientOptions. (#2168)

[33mcommit 3c078655fe24720016d63288693ff60dfd0de7a8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 8 16:28:35 2019 -0500

    Properly handle files with spaces. (#2179)
    
    Fixes the script in case we ever ran into files with spaces.

[33mcommit 4213cba8bc3837378e1032f18f11587da6b6eb3b[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Fri Mar 8 15:20:52 2019 -0500

    Remove Mutation body from FailedMutation (#2169)
    
    It no longer makes sense to keep them because the mutations are received by value.

[33mcommit b264eee604caeb4e47ac3761a809b5bed0ae6de7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 8 14:25:09 2019 -0500

    Fix region tag for one example. (#2180)

[33mcommit fc5f03ac0bd5aaa36c2063a476348cf42376347a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 8 14:14:29 2019 -0500

    Implement Client::CreateHmacKey. (#2167)
    
    This PR adds the Client::CreateHmacKey function, it also adds the usual
    unit and integration tests.  The integration test is disabled in
    production because the feature is still under EAP. The examples will
    come in a future PR.

[33mcommit 52b8e180b617452e088bd1ecfd162041a2391465[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Mar 8 20:00:03 2019 +0530

    StatusOr for ReadRowParser tests (#2172)

[33mcommit 31f3037424e39d6d5f18231cf40d2d770ade043e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 8 08:01:36 2019 -0500

    Implement Requests for `HmacKeys: list`. (#2170)
    
    Introduce new classes to support `Client::ListHmacKeys()`.

[33mcommit 9060d8a2d6732cafbe64030db6613259e127eb3d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 7 15:22:29 2019 -0500

    Update the ABI dumps. (#2166)
    
    We decided to update the ABI dumps to learn more about how these tools
    work. I updated the ABI dumps for google_cloud_cpp_common,
    storage_client (was missing) and bigtable_client. These files are huge,
    so I am committing them compressed, that also keeps the line number
    stats more sensible.

[33mcommit 58ddfc952abb66df69bbdab5c0f858fd4c492181[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Mar 7 09:34:58 2019 -0500

    Return std::vector<FailedMutation> for Table::BulkApply() (#2135)

[33mcommit 766a7688627e8791ac00b8830be8cb340bd02e74[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Mar 7 15:33:40 2019 +0100

    Migrate MakeAsyncFutureFromCallback to StatusOr. (#2133)

[33mcommit 95725a1629d1a4e6f73c70f54e9258c052be8ac4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 7 08:06:35 2019 -0500

    Implement CreateHmacKey{Request,Response}. (#2157)
    
    This is part of the work to support HMAC keys.

[33mcommit 0f36d3d7ea84096ab931996d1923582f97d04396[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 6 23:11:38 2019 -0500

    Refactor service account examples. (#2164)
    
    With the addition of HMAC key-related functions it makes sense to create
    a separate example for all the service account-related stuff.

[33mcommit 668e4ecdef28ec0baf03d4c216a30a05dd2cde77[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 6 23:10:15 2019 -0500

    Save some space in the Travis log. (#2165)
    
    The pretty Travis log is limited to 10,000 lines (you can get more, but
    only in "raw" form). I think we should reserve those lines for the stuff
    we care about, so I am pruning a bit:
    
    - dump-logs.sh will only run on failures, because that is when we need
      to see the logs.
    - I moved some of the report pretty printing to a separate file so we
      still saw those reports on success and failures.
    - The Docker image creation is only interesting if it fails, so save the
      log to a file and print it (only on failures) in dump-logs.sh

[33mcommit cb947a900b8f12d1e1479aeb3d175815f06258a5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 6 17:52:00 2019 -0500

    Update check-abi script. (#2155)
    
    The intention in this script was to dump the HTML reports in a location
    where dump-logs.sh could find them. That second script prints the report
    in text format in the build log. They got out of sync a while back when
    I moved the output directory for binaries.

[33mcommit 3e2b00fcd3f0133b0cbf32c570350e3b568cc232[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 6 17:51:25 2019 -0500

    Better return type for Base64Decode. (#2154)
    
    The sequence of bytes returned by Base64Decode *might* represent a
    string, but it can also be a binary blob. Return just
    `std::vector<std::uint8_t>`, the caller can convert if they have
    special knowledge allowing them to use a std::string`.

[33mcommit fc3723c2f92b5ba654234aa94c735438575cda28[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 6 14:27:03 2019 -0500

    Implement `HmacKeys: insert` in testbench. (#2156)
    
    This PR implements the testbench changes to support `HmacKeys: insert`,
    the changes to the library will come in separate PRs.

[33mcommit 7814e02ee7b8497d09ca48fa940187a359332245[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 6 12:46:39 2019 -0500

    Implement V4 signed URLs. (#2130)
    
    Add a new function to create V4 signed URLs. This PR also includes unit
    tests and examples.

[33mcommit 94e58b4b5ba9bba958f215d55baa78d910986c4f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 6 10:12:24 2019 -0500

    Simplify Base64Encode() implementation. (#2153)
    
    There is no need to implement retry loops because writes to a
    BIO_s_mem() buffer are guaranteed to not block. Well, we could run out
    of memory, but in that case the retry loop does not help either.

[33mcommit 6500e974860a0b85fc3ebc6a04f035cc8ba9f382[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 5 23:21:42 2019 -0500

    Refactor GCS project components in the testbench. (#2152)
    
    I am about to add more complex functionality for the `projects/`
    endpoint (to deal with HMAC keys), so we need a little refactoring to
    keep these new functions in their own file.

[33mcommit 5a514b90da6313171a70d6617536c158f2d7da47[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 5 21:35:19 2019 -0500

    Refactor function to create Base64 BIO chains. (#2151)
    
    We can use the same function to attach the Base64 filter to the encoding
    and decoding chains, for reduced code and less magic.

[33mcommit a802fe94598d68bbf13c407e932cd0f748514f95[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 5 17:25:50 2019 -0500

     Implement class to represent HMAC key resources. (#2150)
    
    HMAC keys are a new type of resource in GCS that allow application
    developers to authenticate using HMAC. As any resource they can be
    created, listed, modified, and deleted. This PR just introduced a class
    to represent the metadata for the resource.

[33mcommit 1225f6d1fdf289dcce60472cd73185621cc1f5ba[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Tue Mar 5 15:48:36 2019 -0500

    Bump versions in master to be one greater than the current release (#2149)

[33mcommit 05c626d997b7514bc2396eba4dce60a374e7ad0c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 5 15:31:07 2019 -0500

    Remove unnecessary casts. (#2147)
    
    Removed a lot of `static_cast<>`, specially around `unique_ptr<>`.

[33mcommit 4bb0ac06357618ada338799cc0923ee4c4e2eda0[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Tue Mar 5 14:42:05 2019 -0500

    Add estimated_size_in_bytes() accessor to BulkMutation (#2139)

[33mcommit 61a2eace6ba1a8554d5c28b7a4f9d63e9d714c24[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Tue Mar 5 13:20:01 2019 -0500

    Update release notes. (#2142)
    
    * Update release notes.
    
    * Address review comments.

[33mcommit 6b98a34394063a3f4f2bbe7e9d3f0bc96eedc534[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 5 11:12:10 2019 -0500

    Refactor Base64Encode() implementation. (#2143)
    
    We had two implementations that were nearly identical.

[33mcommit 87e597bad600866a927358f9e191ea39def5eec4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 4 22:12:06 2019 -0500

    Remove OpenSslUtils struct. (#2141)
    
    This "struct" only had static member functions. I just moved the private
    member functions to the .cc file and things are copacetic.
    
    With Bazel we use BoringSSL, which has a different API for Base64
    encoding and decoding. Also moved the includes for OpenSSL headers to
    the .cc file, because that is where we use them.
    
    Refactor UrlsafeBase64Encode implementations.
    
    Thanks to @devbww for the suggestion. Also refactored RightTrim()
    because there was a single use of this function.

[33mcommit efb8c1f622ea6296759733f735e968ef84349eaf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 4 19:03:13 2019 -0500

    Implement make_ready_future(). (#2132)
    
    This is a convenience function to create futures that are immediately
    ready. The current implementation is maybe suboptimal, but easy to
    understand.

[33mcommit 9f9d0dba7b2fe2b6f202b151fffc2af1e1cddf95[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 4 16:07:04 2019 -0500

    Use gcloud SDK to get cbt tool. (#2138)

[33mcommit 68858545859446af7d0d6135d960754db67cc00a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 4 13:39:14 2019 -0500

    Retry the docker setup in the Kokoro builds. (#2136)
    
    Sometimes the docker setup (preparing the Docker image for the build)
    fails with transient errors. Instead of manually restarting the build,
    let the robots try 3 times. The setup takes ~3 minutes so even the worst
    case retry is not that terrible.

[33mcommit 9e1fcad54a389a811e1c6d40b42fb6a7ced4c9cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 4 13:23:30 2019 -0500

    Remove as-bazel-dependency build. (#2137)
    
    We successfully moved this build to Kokoro. We can remove it now.

[33mcommit 826eb161626c457bd4e63fbc8530b1485ccd9927[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Mar 4 17:03:23 2019 +0100

    Fix linter warnings. (#2134)
    
    clang-tidy was complaining at the underscores.

[33mcommit 979c477f31308d933b7cf7a59185048201d29bae[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 2 14:34:41 2019 -0500

    Implement V4SignedUrlRequest. (#2128)
    
    This class in not part of the public API, it will be used by
    `storage::Client` to accumulate all the optional parameters in a V4
    signed URL request. Just like we did for V2 signed URLs, this class just
    creates the blob to be signed, the actual signing happens in the
    credentials class.
    
    I will also need to insert the `host` header if the application does not
    provide one.

[33mcommit 27bb4bb67978db3ce2c9100d1d75b1cff127409d[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Sat Mar 2 08:05:46 2019 -0500

    Change bigtable::FailedMutation to work with google::cloud::Status (#2108)

[33mcommit 2fa7dbaf9eb97c57598d0425984db95f39adaa30[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 2 07:42:33 2019 -0500

    Support different RSA-SHA256 signature formats. (#2129)
    
    For V4 signed URLs we need to encode the signature using hex format,
    while for V2 signed URLs we need to encode them using Base64. In this PR
    we decouple the function to create the signature from the functions to
    encode them.
    
    I changed the return value of SignStringWithPem to signal that it is a
    byte array. In a separate PR I am planning to cleanup all these
    functions because they are handling byte arrays and strings kind of
    loosely. That is a cleanup independent of the V4 signed URLs though.

[33mcommit c09c233545e6df7cf030256344bf4f097ee508ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 1 13:43:34 2019 -0500

    Use new location for openSUSE:Leap Docker images. (#2127)
    
    Like openSUSE:Tumbleweed, Leap will be moving from here:
    
    https://hub.docker.com/_/opensuse?tab=description
    
    to here:
    
    https://hub.docker.com/r/opensuse/leap
    
    Change the source for the images before they remove the old ones. Also
    some tweaks because apparently gzip is no longer implicitly installed.

[33mcommit e87d16c835075524d32f1f53c2a0601f890bf914[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 1 11:53:56 2019 -0500

    Fix Kokoro build for integration tests. (#2126)
    
    Pin the version of Bazel to the version that is known to work with our
    dependencies. The newer version does not work with gRPC + protobuf until
    a future release of gRPC.
    
    I think letting Kokoro magically upgrade Bazel behind the scenes for us
    was not a good idea.

[33mcommit a9eaad55ff4c5e25db6be531715e515f3c5d9c5d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 1 08:04:33 2019 -0500

    Rename SignUrlRequest to V2SignUrlRequest. (#2124)

[33mcommit 5443e149d0385614360ce5c4a445d101c1000b4b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 1 07:23:35 2019 -0500

    A build for google-cloud-cpp as dependency. (#2123)
    
    Some of our customers will use google-cloud-cpp as a Bazel dependency,
    there is Starlark code that loads `google-cloud-cpp` and its
    dependencies, and this code should be tested.
    
    We currently have a build for this on Travis. This creates the
    configuration files for Kokoro, the plan is to remove the Travis build
    once the Kokoro build is working.

[33mcommit e45f7d6aebf045304f2b5926a65865ca63638e79[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 28 23:23:18 2019 -0500

    Remove Travis build for shared libs. (#2122)
    
    The ci/kokoro/docker/shared build tests the same things.

[33mcommit b025c4f8a5d4bacf03f5654301b7c5edc8b6872f[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Mar 1 03:54:40 2019 +0100

    Use StatusOr<> in `ReadRows` (#2118)
    
    The value returned by `Table::ReadRows()` is
    (informally) an InputRange of `StatusOr<Row>`.

[33mcommit e204cd07232a77f143f68fcbe63774be3265bc75[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 28 21:49:03 2019 -0500

    Fix name of openSUSE Tumbleweed image. (#2125)
    
    The images for openSUSE tumbleweed have migrated:
    
    https://hub.docker.com/_/opensuse?tab=description

[33mcommit f69df2b526bc0780bf180af1f73b5c4b759468e2[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Feb 28 22:30:21 2019 +0100

    Switch gcs2cbt to use MutationBatcher. (#2117)
    
    Switch gcs2cbt to use MutationBatcher.

[33mcommit bd1efa3728cf40fb08c0cdab2fbaee233eb549ef[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 28 13:42:23 2019 -0500

    Refactor parts of SignUrlRequest to base class. (#2121)
    
    This will be used to create a V4SignUrlRequest, which shares many, but
    not all, the properties of a V2 signed url. I think renaming
    SignUrlRequest to V2SignUrlRequest should happen in a future PR too.

[33mcommit 88fb5d6c359201d2a227cd54620a433feba9ab48[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Feb 28 13:03:36 2019 -0500

    Makes optional's operator bool explicit. (#2119)

[33mcommit 32017bb2e13880653d7b60fe442d5d2a96b094e3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 28 13:00:15 2019 -0500

     Enable all cores in Kokoro. (#2115)
    
    I forgot that the build scripts are tuned for Travis, which only has 2
    cores, while Kokoro VMs have (I believe) 4.
    
    Also fixed some indentation nits.

[33mcommit ebe01db08a1bba1bd1c56103936351358f80f2b3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 28 11:07:55 2019 -0500

    Make build.sh executable. (#2120)

[33mcommit 4163c7a00b164ae9ebcf4910f7ef30018f5e5bc0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 28 10:58:11 2019 -0500

    Cleanup handling of SignedUrlRequest options. (#2114)
    
    I think it is cleaner for the options to perform no translation on their
    inputs, and let the request class do any processing. This will be more
    useful with the V4 signed url request, where the handling of request
    headers is slightly different.
    
    clang-tidy was unhappy with `set_option()` for a long function name, so
    I changed all of them to `SetOption()`, they are all private anyway, so
    no harm.

[33mcommit 5daa9f9cde2e911a1dc4001ca5a0862f2fc23ce7[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Feb 28 01:27:16 2019 +0100

    Add MutationBatcher::AsyncWaitForNoPendingRequests (#2109)
    
    This member function returns a future which will be satisfied once all
    requests submitted to MutationBatcher will have completed. One can
    obtain multiple such futures.
    
    The intention is to relieve the user for the necessity to keep track of
    submitted requests.

[33mcommit 907ddb35335216d6434b6f09415a27a77ef4bfe8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 27 17:28:44 2019 -0500

    Properly handle subresources in V2 signed URLs. (#2111)
    
    We should allow at most one subresource, and we should always put the
    subresource first in the URL. This will be handy for V4 signed URLs too.

[33mcommit dfa3bc3b8a84ec10eb65e8d5eb1ac551cebc8113[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 27 16:29:45 2019 -0500

    Silence MSVC warnings. (#2110)
    
    The warning is not applicable in this case, the standard guarantees that
    the result here is exactly what we want. Use a static_cast to silence
    the warning.

[33mcommit f075a6247dfcb9521ab0d12d0740bb2821c99e90[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 27 16:13:59 2019 -0500

    New functions for SHA256 hashes. (#2105)
    
    V4 signed urls require SHA256 hashes, encoded in Hex format. The current
    implementation is really not optimized, but we do not expect signed URLs
    to be a feature in the critical path.

[33mcommit 4d522c837ed888e85f077680f7273667953803cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 27 16:02:19 2019 -0500

    Format timestamps as needed by V4 signed URLs. (#2104)
    
    In V4 signed URLs we need to format timestamps as YYYYMMDDTHHMMSSZ, and
    (in some places), ignore the sub-day components and just print YYYYMMDD.

[33mcommit 1b164ffce3e95cc0eb5c37cc48f739ccb7644a23[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Feb 27 20:05:00 2019 +0100

    Make MutationBatcher public API. (#2095)
    
    That entailed moving it out of `/internal` and replacing callbacks with
    promises/futures.

[33mcommit fd5b2df11b083a87504975904fb5a800e5f2f869[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 27 13:55:15 2019 -0500

    Simplify kokoro windows build (#2103)
    
    Now that vcpkg is using a sufficiently recent version of googletest we
    can simplify the build scripts a bit.

[33mcommit 0cecd14bf4c6fe47e09fd63ff8835d4346b978b6[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Feb 27 18:51:23 2019 +0100

    Fix int overflow in MutationBatcher config. (#2102)

[33mcommit 51e147b7c10dab5839fb65a3486ae0438ff8e4d1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 27 12:11:45 2019 -0500

    Rename format_rfc3339.{h,cc}. (#2101)
    
    As part of the changed for signed URL V4 we are going to need other
    functions to format `std::chrono::system_clock::time_point`. This change
    is a pure refactor, so the file name makes sense when I add more
    functions to it. Oh, and I want a single file because there is some
    platform-specific stuff in the `.cc` file that I do not want to sprinkle
    around.

[33mcommit ae5ffbacf647a11c16a342b1131c3723cfa0beeb[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Wed Feb 27 09:07:33 2019 -0500

    Rename  bigtable_samples_instance_admin.cc and  bigtable_samples_instance_admin_ext.cc (#2094)

[33mcommit a45f3a1c8faa6a1d4605efd3f442be6d4475605a[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Feb 26 22:58:47 2019 +0100

    Make use of the streaming batch mutation API. (#2085)
    
    Per design, MutationBatcher should admit mutations as soon as other
    mutations finish, not by the time the whole batch exhausts its retry
    limit. This PR implements exactly this via:
    - confirming mutations to the user as soon as we know they are done
    - admitting more mutations in such an event
    - releasing a slot for a next batch as soon as the first attempt
      retry finishes.

[33mcommit 713cd3adc5266def0b762eb83dea2482b34bffb7[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Mon Feb 25 17:11:46 2019 -0500

    Add size() for BulkMutation (#2091)

[33mcommit 9f36062a59cc560f60a54d39e449404f869d752e[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Feb 25 12:25:06 2019 -0500

    removed unneeded rvalue arguments (not forwarding references) (#2089)

[33mcommit 96853c399a667a1663c0da0bbd1a49d0187a01a1[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Mon Feb 25 10:11:21 2019 -0500

    Remove bigtable::internal::ThrowRpcError() (#2088)

[33mcommit 9c0d6e0ff5d82c5606b72587c432b463442f280d[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Sun Feb 24 16:29:53 2019 -0500

    Gives google::cloud::optional value conversion c'tors matching std::optional (#2087)

[33mcommit e4be34a8cf37666e0d301e4779b3fbf97dad2966[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Sat Feb 23 17:22:29 2019 -0500

    Use StatusOr in TableAdmin::SnapshotTable (#2076)

[33mcommit 2133c5fa916f9862ea25175a5aaf4f33fad167c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 23 13:14:51 2019 -0500

    Collect Windows minidumps. (#2078)
    
    We just had a build fail:
    
    https://source.cloud.google.com/results/invocations/dca9991e-1167-4b49-a4b0-7432d4a4dab6/targets/cloud-cpp%2Fgithub%2Fwindows%2Fcontinuous/log
    
    It recommends that we add this change:
    
    ```
    Be sure to add an artifacts regex to collect data from **/win_minidumps/*.dmp
    ```
    
    I do not know exactly how these are usable, but while I research that,
    let's get the ball rolling on collecting these minidumps so we can
    figure out why we are crashing the system.

[33mcommit 43fb753baaf2c04265c09bd3047ad073431e44aa[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sat Feb 23 16:35:04 2019 +0100

    Refactor MutationBatcher tests. (#2073)
    
    This refactor will allow for testing streaming replies. It splits the
    expecected response to `MutateRows` RPC into `ResultPiece`s. Every
    `ResultPiece` specifies which mutations are known to have failed
    (transiently or permanenty) or succeeded.

[33mcommit 96e17bd6ee6efae5046c7dc221d2b817ed4b32d6[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Sat Feb 23 10:34:15 2019 -0500

    Simplify all of our endian functions down to two Encode/Decode operations. (#2068)

[33mcommit e15f2c226afe28b3ec4774a7c7745f1db1bd2a54[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 22 17:43:12 2019 -0500

    Remove the Xcode 7.3 build from Travis. (#2077)
    
    We will not be building with Xcode7.3 anymore. We gladly accept PRs, but
    won't be testing this ourselves.

[33mcommit d0f02b038d77bacd69cf426063fb578a922300d7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 22 17:22:55 2019 -0500

    Replace TEST_CASE with TEST_SUITE for tests. (#2075)
    
    Newer versions of googletest prefer TEST_SUITE over TEST_CASE.
    
    On the `Kokoro Windows` build we cannot use vcpkg to install googletest
    because vcpkg has an old version of googletest. So we switch to using an
    external project *just for googletest*. A bit ad-hoc, but will do while
    we try to get googletest to create a release and so forth.
    
    Manually remove the googletest vcpkg.
    
    The package is sticky in the cache. Have to manually remove the
    installed files or they are used instead of the external project
    version.

[33mcommit 72c9302e2854fda70705644d89a46db9625c7469[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 22 14:31:23 2019 -0500

    Remove the Travis + Bazel build. (#2071)
    
    The Kokoro:Ubuntu build is also using Bazel, we do not need two separate
    builds to check that Bazel works.
    
    I left the TEST_BAZEL_AS_DEPENDENCY=yes build on, because this is the
    only build where we check that including `google-cloud-cpp` as a Bazel
    dependency works.

[33mcommit 360a083970a0e5276e9d58389322eb6432e2a9fb[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Fri Feb 22 14:31:03 2019 -0500

    Remove MAINTAINER directives in Dockerfiles. (#2070)

[33mcommit c82075b3bca243a8717c1729247e19e3f1bafb0b[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Fri Feb 22 13:34:22 2019 -0500

    Add the `scaling` parameter to the `ExponentialBackoffPolicy` examples. (#2069)

[33mcommit 1970090384a2482b08cdfc2aefb9e04caf9eca5d[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Feb 22 19:17:50 2019 +0100

    Refactor admission into a separate function. (#2072)
    
    This is going to be needed in the following commits because there are
    going to be several triggers for admission.

[33mcommit dae9e9db3318683decbcd6fef9c2e32824f41ca4[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Feb 21 19:32:20 2019 -0500

    Return StatusOr for Table::ReadRow() (#2066)

[33mcommit fdef8c57bac6563033a31807b1c396fcbf270276[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 21 19:00:37 2019 -0500

    Show badges for the install build too. (#2067)
    
    I thought it would be nice to advertise that we actually test these
    install instructions.

[33mcommit 9df8c9507abbee39a1c0f142465bc8d20fe152c3[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Feb 21 23:52:52 2019 +0100

    Add synchronization to MutationBatcher::Batch. (#2063)
    
    It will be touched from multiple callbacks without obtaining the
    `MutationBatcher`'s lock.

[33mcommit 1835ccc2e6147bd6a6508502053e259e7fa745fd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 21 15:58:35 2019 -0500

    Fix flaky integration test(s) for Bigtable. (#2057)
    
    We used to create a separate table for each test case in the integration
    tests. That makes the test case easier to write (and reason about), but
    creating a table is very slow in the production tests, and one can
    easily hit the daily or peak quota for Bigtable:
    
    https://cloud.google.com/bigtable/quotas#operation-quotas
    
    In this PR we change the integration tests to share a common table. I
    had to normalize the table schema: typically we had column families
    named "family{1,2,3}" but sometimes it was "fam{0,1,2,3}". I also
    changed the SetUp() function to drop all the rows in the table, so at
    least the table is clean.
    
    Note that some of the instance admin and table admin tests still create
    tables, but those are typically disabled when running against
    production.
    
    In addition, the PR fine tunes the message size for the original flaky test.
    
    The intention of the test is to verify that we can write and read cells much
    larger than the default gRPC maximum message size (~4MiB).
    
    This default is too small for Cloud Bigtable, where cells can be much
    larger than 4MiB. The library achieves this by setting a larger value
    (~256MiB) for the maximum message size.
    
    The test was creating a row of ~250MiB. I think testing with 128MiB is
    more reasonable. Large enough to prove that we are not using the 4MiB
    setting, yet small enough to finish quickly and avoid trouble with any
    message overhead.
    
    I was able to run the test with the new setting about 1000 times without
    problem. But note that other issues (contention in the bigtable master,
    quota limits on the number of tables created by hour / day / etc.) could
    also turn this test flaky. That is why I did the refactoring for CreateTable().

[33mcommit 6f714b9ce814e7cae5b4c697f40baefdd58d51f8[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Feb 21 12:55:44 2019 -0500

    Add bigtable::Cell constructors without labels argument (#2053)

[33mcommit ccb108d3c3fd1a10220a0a3631edb1ebc030552c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 21 10:33:05 2019 -0500

    Fix Ubuntu:14.04 install instructions. (#2056)
    
    I thought I had tested these, but obviously I did not because they did
    not work :disappointed: I guess that is why we have CI builds.

[33mcommit 5686fd1d730837eb50d57d2a7d2e78ebb338a934[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Feb 21 16:25:46 2019 +0100

    More fine-grained outstanding size bookkeeping. (#2058)
    
    For now, this change is a noop, but it is needed for when we're going to
    use the streaming version of `BulkMutator`. We want to update these
    sizes on every finished mutation.

[33mcommit ad575e5e394566517db7613dccca98a1922e1344[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Wed Feb 20 22:53:07 2019 -0500

    Return StatusOr for Table::Apply() (#2044)

[33mcommit 8c860bf7784eae17f50f84a0059367723c19e522[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Feb 21 01:06:00 2019 +0100

    Keep Apply callbacks in MutationData. (#2055)
    
    Currently, `Batch` holds all callbacks in a `deque<>`. This is enough if
    all mutations finish at the same time. When we make use of streaming, it
    will no longer be true.
    
    When mutations finish, we want to release resources held by them early,
    so that we can let more mutations into the `BatchedMutator`. In order to
    make it possible, this change starts keeping the callbacks in a hash-map
    indexed by indices of `SingleRowMutations` in `BulkMutation`.
    
    We will also need to update stats as individual mutations finish, not
    the whole batch, so the callbacks are packed together with the
    per-`SingleRowMutation` stats into `MutationData`.

[33mcommit d449f1fb578b92119d9af8d546750edaa01136af[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Feb 20 22:50:32 2019 +0100

    Eliminate BatchFinishedCallback. (#2051)
    
    `BatchFinishedCallback`'s purpose was to circumvent inability to pass a
    `unique_ptr<>` to a lambda. In the future, we will need to reference
    `Batch`es from multiple callbacks, so it has to be a held by a
    `shared_ptr<>` anyway.

[33mcommit d613809fa530640b05ad5cc55f5d1cd31c06e6e0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 20 14:11:34 2019 -0500

    Remove clang-tidy and libc++ builds. (#2052)
    
    These builds are now running on Kokoro, we can free the more limited
    bandwidth on Travis.

[33mcommit 85da68e15cd19834f56705597032898d96c232ad[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 20 12:49:16 2019 -0500

    Update instructions to setup Linux VM [skip ci]. (#2050)
    
    * Add instructions to create Linux VM [skip ci].

[33mcommit 5bc6e39fa1fa56d30210dd887167d466468d0b24[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Feb 20 08:23:47 2019 -0500

    Removes unused import of chrono_literals (#2049)

[33mcommit 7b9d549ca20017a2d01249b19e11547c8562eb14[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Wed Feb 20 07:59:34 2019 -0500

    Add Bucket Policy Only samples (#2022)

[33mcommit 4d1a0b0622d029e117cb418efe6614f3a2b6c571[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 19 14:55:33 2019 -0500

    Increase timeouts in future<> tests. (#2047)
    
    Some of the tests verify that waiting for an event for X milliseconds
    gets a response. The timeouts were typically 10ms or 50ms, but that is
    too short for the CI systems (we got a failure with the 10ms timeout).
    
    I increased all the actual waits to 500ms. I am not sure that is long
    enough, but since I have only seen one failure due to timeouts with 10ms
    it cannot be that terrible. Note that this will not slow down the tests,
    this the the maximum time to wait, but if the scheduler and thread
    communication works as usual the tests complete in less than 1ms.
    
    Some calls to wait_for() or wait_until() are expecting a timeout or
    are "waiting" for an event that already took place. In those cases I
    left the values unchanged.

[33mcommit d0ebabaaadc85f86f196ab1f4213665cb9efbbb8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 19 14:34:05 2019 -0500

    Increase timeouts for CompletionQueue tests. (#2045)
    
    The CompletionQueue test failed once with a `wait_for(50_ms)` timing
    out. Evidently the timeout is too short, so increase it to 500_ms.
    Personally I dislike timeout values in unit tests, but this is a test to
    verify that timers set via the gRPC completion queue work, so a generous
    timeout is fine I think. Note that the test will typically complete much
    faster than 500ms.

[33mcommit a43f7830523aeba17ec632c2e3f32c2997979216[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 19 14:18:44 2019 -0500

    Update instructions to setup windows workstation. [skip ci] (#2043)
    
    Updated with newer version of Windows, and also recommend using Ninja as
    the CMake backend. Ninja is much faster, and that is nice when doing
    manual builds.

[33mcommit 3792ffacd4a8d20f0f9b338a1c3bda8e92cf42e3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 19 00:27:58 2019 -0500

    Limit all Kokoro builds to 120 minutes. (#2041)
    
    We had some builds at 40 minutes and others at 120 minutes. 40m is
    too short, use the same value everywhere. We should set the default
    in a single place in the internal configuration, but first make all
    the values consistent.

[33mcommit cb7f8aa0209aea339578b84bf6e161b778e75c2a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 19 00:17:02 2019 -0500

    Create Kokoro configurations for Travis builds. (#2040)
    
    I should probably have included these in the previous PR.  These
    files configure the Kokoro builds that will replace existing Travis
    builds. These builds are *not* enabled, that will require separate
    changes in the Google internal Kokoro configs.

[33mcommit f9d75b8028767d3c2af434a1fa902750bda87bb4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 19 00:16:41 2019 -0500

    Search only if the log file has been created. (#2039)
    
    Because we start the testbench in the background, the log file may not
    exist when we start waiting for the port number to be printed on it. We
    need to test if it exists before running sed.

[33mcommit 18f9e088ecc8a4e37afcbd069274270309b19e17[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Feb 19 04:04:13 2019 +0100

    Change TableAdmin API to use StatusOr<>. (#1958)

[33mcommit 21a1b2b244edc8710ca3c8167b500cd771686a61[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Mon Feb 18 17:59:54 2019 -0500

    Return StatusOr for Table::ReadModifyWriteRow() (#2037)

[33mcommit b5b33b6f340d34057655edba9979001cad048cbb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 18 15:26:20 2019 -0500

    Only require googletest if it is needed. (#2035)
    
    When compiling with -DBUILD_TESTING=OFF the tests are disabled. This is
    useful for package maintainers who build the same version over and over
    and do not want to rebuild the tests every time, nor do they want the
    dependency on a library (googletest) that is not needed at run-time.

[33mcommit 37dfea404e645ea661ff92b5163e500d32e08cff[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Feb 18 13:45:01 2019 -0500

    added needed include for async_stream.h (#2034)

[33mcommit 48e87a111f9fcefcf59b929456cbe4ea86be2d63[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 18 11:53:11 2019 -0500

    Support additional build types. (#2033)
    
    Add support for the additional build types in Travis. These builds can
    be moved to Kokoro, but we need to merge these changes first, then
    enable them in Kokoro, and then remove them from Travis.
    
    The code coverage build uses Travis-specific scripts, so these changes
    do not include them.

[33mcommit 041f3ea21578109c7ecefa022873773eaf0ee383[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 18 11:20:46 2019 -0500

    New scripts to extract README.md instructions. (#2026)
    
    The Dockerfiles in ci/test-readme/ can be used to generate a big chunk
    of the README.md file (specifically the instructions on how to install
    development tools). I created a script to extract this portion, and used
    it to update the README.md file.  I also added instructions on how to
    generate the instructions.

[33mcommit 7beb5d14769ac519a9c44f9bd2884033e46cf878[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 18 11:19:47 2019 -0500

    Enable OpenSSL when compiling libcurl as external. (#2029)
    
    We disabled most protocols when compiling libcurl as an external project
    because they often require additional libraries and managing that was
    becoming difficult. But I got overenthusiastic and I removed OpenSSL
    too. With local integration tests that is not a problem (we do not use
    HTTPS in that case), but failed with production tests. *And* our
    CI builds do not use external projects when running against production.
    
    This fixes the immediate problem. A future PR will need to fix the
    testing gap.

[33mcommit adeccb9f797d1df0539dc1992c83737a107568a7[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Feb 18 11:09:16 2019 -0500

    removed 'move' tests (#2031)

[33mcommit c865a20ab3ab154eaed50dc69c08e1e6761f9342[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 18 11:07:28 2019 -0500

    Fix flake on request-pay examples. (#2030)
    
    Changing the billing configuration of a bucket is an atomic operation,
    but the propagation of this change to the objects in a bucket is not. We
    need to delete the object using the requester-pays feature to avoid
    races.

[33mcommit 88ad9eab286b0883f7707bb3ea4eb5f38b6b2117[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Feb 18 11:01:09 2019 -0500

    Standardize on fully qualified using declarations (#2028)
    
    * fixed all usings in storage/
    fixed formatting
    
            modified:   ../storage/bucket_metadata_test.cc
            modified:   ../storage/bucket_test.cc
            modified:   ../storage/client_bucket_acl_test.cc
            modified:   ../storage/client_default_object_acl_test.cc
            modified:   ../storage/client_notifications_test.cc
            modified:   ../storage/client_object_acl_test.cc
            modified:   ../storage/client_object_copy_test.cc
            modified:   ../storage/client_service_account_test.cc
            modified:   ../storage/client_sign_url_test.cc
            modified:   ../storage/client_test.cc
            modified:   ../storage/client_write_object_test.cc
            modified:   ../storage/doc/storage-main.dox
            modified:   ../storage/examples/storage_bucket_acl_samples.cc
            modified:   ../storage/examples/storage_bucket_iam_samples.cc
            modified:   ../storage/examples/storage_bucket_samples.cc
            modified:   ../storage/examples/storage_default_object_acl_samples.cc
            modified:   ../storage/examples/storage_notification_samples.cc
            modified:   ../storage/examples/storage_object_acl_samples.cc
            modified:   ../storage/examples/storage_object_samples.cc
            modified:   ../storage/internal/bucket_acl_requests_test.cc
            modified:   ../storage/internal/bucket_requests.cc
            modified:   ../storage/internal/bucket_requests_test.cc
            modified:   ../storage/internal/compute_engine_util_test.cc
            modified:   ../storage/internal/curl_client_test.cc
            modified:   ../storage/internal/curl_handle.cc
            modified:   ../storage/internal/curl_resumable_upload_session_test.cc
            modified:   ../storage/internal/default_object_acl_requests_test.cc
            modified:   ../storage/internal/format_rfc3339_test.cc
            modified:   ../storage/internal/generate_message_boundary_test.cc
            modified:   ../storage/internal/hash_validator_test.cc
            modified:   ../storage/internal/http_response_test.cc
            modified:   ../storage/internal/logging_client.cc
            modified:   ../storage/internal/logging_client_test.cc
            modified:   ../storage/internal/logging_resumable_upload_session_test.cc
            modified:   ../storage/internal/notification_requests_test.cc
            modified:   ../storage/internal/object_acl_requests_test.cc
            modified:   ../storage/internal/object_requests.cc
            modified:   ../storage/internal/object_requests_test.cc
            modified:   ../storage/internal/openssl_util.h
            modified:   ../storage/internal/parse_rfc3339_test.cc
            modified:   ../storage/internal/retry_client.cc
            modified:   ../storage/internal/retry_client_test.cc
            modified:   ../storage/internal/retry_resumable_upload_session_test.cc
            modified:   ../storage/internal/service_account_requests_test.cc
            modified:   ../storage/internal/signed_url_requests_test.cc
            modified:   ../storage/list_buckets_reader_test.cc
            modified:   ../storage/list_objects_reader_test.cc
            modified:   ../storage/notification_metadata_test.cc
            modified:   ../storage/oauth2/authorized_user_credentials_test.cc
            modified:   ../storage/oauth2/compute_engine_credentials_test.cc
            modified:   ../storage/oauth2/google_application_default_credentials_file_test.cc
            modified:   ../storage/oauth2/google_credentials_test.cc
            modified:   ../storage/oauth2/service_account_credentials.h
            modified:   ../storage/oauth2/service_account_credentials_test.cc
            modified:   ../storage/object_test.cc
            modified:   ../storage/service_account_test.cc
            modified:   ../storage/storage_version_test.cc
            modified:   ../storage/tests/bucket_integration_test.cc
            modified:   ../storage/tests/curl_download_request_integration_test.cc
            modified:   ../storage/tests/curl_request_integration_test.cc
            modified:   ../storage/tests/curl_resumable_streambuf_integration_test.cc
            modified:   ../storage/tests/curl_resumable_upload_session_integration_test.cc
            modified:   ../storage/tests/curl_streambuf_integration_test.cc
            modified:   ../storage/tests/curl_upload_request_integration_test.cc
            modified:   ../storage/tests/object_checksum_integration_test.cc
            modified:   ../storage/tests/object_hash_integration_test.cc
            modified:   ../storage/tests/object_insert_integration_test.cc
            modified:   ../storage/tests/object_integration_test.cc
            modified:   ../storage/tests/object_media_integration_test.cc
            modified:   ../storage/tests/object_resumable_write_integration_test.cc
            modified:   ../storage/tests/object_rewrite_integration_test.cc
            modified:   ../storage/tests/service_account_integration_test.cc
            modified:   ../storage/well_known_headers_test.cc
    
     Changes not staged for commit:
            modified:   ../storage/bucket_test.cc
            modified:   ../storage/client_bucket_acl_test.cc
            modified:   ../storage/client_default_object_acl_test.cc
            modified:   ../storage/client_notifications_test.cc
            modified:   ../storage/client_object_acl_test.cc
            modified:   ../storage/client_object_copy_test.cc
            modified:   ../storage/client_service_account_test.cc
            modified:   ../storage/client_test.cc
            modified:   ../storage/client_write_object_test.cc
            modified:   ../storage/internal/curl_resumable_upload_session_test.cc
            modified:   ../storage/internal/logging_client.cc
            modified:   ../storage/internal/logging_client_test.cc
            modified:   ../storage/internal/logging_resumable_upload_session_test.cc
            modified:   ../storage/internal/retry_client_test.cc
            modified:   ../storage/internal/retry_resumable_upload_session_test.cc
            modified:   ../storage/list_buckets_reader_test.cc
            modified:   ../storage/list_objects_reader_test.cc
            modified:   ../storage/oauth2/authorized_user_credentials_test.cc
            modified:   ../storage/oauth2/compute_engine_credentials_test.cc
            modified:   ../storage/oauth2/service_account_credentials_test.cc
            modified:   ../storage/object_test.cc
            modified:   ../storage/storage_version_test.cc
    
            modified:   ../storage/bucket_metadata_test.cc
            modified:   ../storage/bucket_test.cc
            modified:   ../storage/client_bucket_acl_test.cc
            modified:   ../storage/client_default_object_acl_test.cc
            modified:   ../storage/client_notifications_test.cc
            modified:   ../storage/client_object_acl_test.cc
            modified:   ../storage/client_object_copy_test.cc
            modified:   ../storage/client_service_account_test.cc
            modified:   ../storage/client_sign_url_test.cc
            modified:   ../storage/client_test.cc
            modified:   ../storage/client_write_object_test.cc
            modified:   ../storage/doc/storage-main.dox
            modified:   ../storage/examples/storage_bucket_acl_samples.cc
            modified:   ../storage/examples/storage_bucket_iam_samples.cc
            modified:   ../storage/examples/storage_bucket_samples.cc
            modified:   ../storage/examples/storage_default_object_acl_samples.cc
            modified:   ../storage/examples/storage_notification_samples.cc
            modified:   ../storage/examples/storage_object_acl_samples.cc
            modified:   ../storage/examples/storage_object_samples.cc
            modified:   ../storage/internal/bucket_acl_requests_test.cc
            modified:   ../storage/internal/bucket_requests.cc
            modified:   ../storage/internal/bucket_requests_test.cc
            modified:   ../storage/internal/compute_engine_util_test.cc
            modified:   ../storage/internal/curl_client_test.cc
            modified:   ../storage/internal/curl_handle.cc
            modified:   ../storage/internal/curl_resumable_upload_session_test.cc
            modified:   ../storage/internal/default_object_acl_requests_test.cc
            modified:   ../storage/internal/format_rfc3339_test.cc
            modified:   ../storage/internal/generate_message_boundary_test.cc
            modified:   ../storage/internal/hash_validator_test.cc
            modified:   ../storage/internal/http_response_test.cc
            modified:   ../storage/internal/logging_client.cc
            modified:   ../storage/internal/logging_client_test.cc
            modified:   ../storage/internal/logging_resumable_upload_session_test.cc
            modified:   ../storage/internal/notification_requests_test.cc
            modified:   ../storage/internal/object_acl_requests_test.cc
            modified:   ../storage/internal/object_requests.cc
            modified:   ../storage/internal/object_requests_test.cc
            modified:   ../storage/internal/openssl_util.h
            modified:   ../storage/internal/parse_rfc3339_test.cc
            modified:   ../storage/internal/retry_client.cc
            modified:   ../storage/internal/retry_client_test.cc
            modified:   ../storage/internal/retry_resumable_upload_session_test.cc
            modified:   ../storage/internal/service_account_requests_test.cc
            modified:   ../storage/internal/signed_url_requests_test.cc
            modified:   ../storage/list_buckets_reader_test.cc
            modified:   ../storage/list_objects_reader_test.cc
            modified:   ../storage/notification_metadata_test.cc
            modified:   ../storage/oauth2/authorized_user_credentials_test.cc
            modified:   ../storage/oauth2/compute_engine_credentials_test.cc
            modified:   ../storage/oauth2/google_application_default_credentials_file_test.cc
            modified:   ../storage/oauth2/google_credentials_test.cc
            modified:   ../storage/oauth2/service_account_credentials.h
            modified:   ../storage/oauth2/service_account_credentials_test.cc
            modified:   ../storage/object_test.cc
            modified:   ../storage/service_account_test.cc
            modified:   ../storage/storage_version_test.cc
            modified:   ../storage/tests/bucket_integration_test.cc
            modified:   ../storage/tests/curl_download_request_integration_test.cc
            modified:   ../storage/tests/curl_request_integration_test.cc
            modified:   ../storage/tests/curl_resumable_streambuf_integration_test.cc
            modified:   ../storage/tests/curl_resumable_upload_session_integration_test.cc
            modified:   ../storage/tests/curl_streambuf_integration_test.cc
            modified:   ../storage/tests/curl_upload_request_integration_test.cc
            modified:   ../storage/tests/object_checksum_integration_test.cc
            modified:   ../storage/tests/object_hash_integration_test.cc
            modified:   ../storage/tests/object_insert_integration_test.cc
            modified:   ../storage/tests/object_integration_test.cc
            modified:   ../storage/tests/object_media_integration_test.cc
            modified:   ../storage/tests/object_resumable_write_integration_test.cc
            modified:   ../storage/tests/object_rewrite_integration_test.cc
            modified:   ../storage/tests/service_account_integration_test.cc
            modified:   ../storage/well_known_headers_test.cc
    
     Changes not staged for commit:
            modified:   ../storage/bucket_test.cc
            modified:   ../storage/client_bucket_acl_test.cc
            modified:   ../storage/client_default_object_acl_test.cc
            modified:   ../storage/client_notifications_test.cc
            modified:   ../storage/client_object_acl_test.cc
            modified:   ../storage/client_object_copy_test.cc
            modified:   ../storage/client_service_account_test.cc
            modified:   ../storage/client_test.cc
            modified:   ../storage/client_write_object_test.cc
            modified:   ../storage/internal/curl_resumable_upload_session_test.cc
            modified:   ../storage/internal/logging_client.cc
            modified:   ../storage/internal/logging_client_test.cc
            modified:   ../storage/internal/logging_resumable_upload_session_test.cc
            modified:   ../storage/internal/retry_client_test.cc
            modified:   ../storage/internal/retry_resumable_upload_session_test.cc
            modified:   ../storage/list_buckets_reader_test.cc
            modified:   ../storage/list_objects_reader_test.cc
            modified:   ../storage/oauth2/authorized_user_credentials_test.cc
            modified:   ../storage/oauth2/compute_engine_credentials_test.cc
            modified:   ../storage/oauth2/service_account_credentials_test.cc
            modified:   ../storage/object_test.cc
            modified:   ../storage/storage_version_test.cc
    
    * fixed formatting
    
    * cleaned up a few more; fixed some anon namespaces
    
    * fixed build break on gcc 4.8

[33mcommit 67e0ef233179498cb37ce6ba1240a8a87409d1a9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Feb 17 19:55:46 2019 -0500

    Make InstanceAdmin emulator thread-safe. (#2027)
    
    TIL: gRPC servers are multi-threaded by default:
    
    https://grpc.io/docs/tutorials/basic/c.html#implementing-routeguide
    
    This emulator was *generally* fine because we send one request at a
    time. That is, except in the ListAllClusters() member function where we
    actually create two threads and send two requests simultaneously. This
    (I think) explains the flaky tests.
    
    The good news is that this is only the emulator, the library is fine.

[33mcommit 2153dae12139b8b60784efe524dfdafd0d907888[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Feb 17 18:10:05 2019 -0500

    Fix script to enforce formatting. (#2025)
    
    The script was only enforcing formatting in `.h` files. Also applied
    `clang-format` to the `.cc` files.

[33mcommit 7549bcdcd7b5adcba0a8cfa7c2d3b82c36b42900[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Sun Feb 17 11:00:02 2019 -0500

    moved tests into namespace to avoid using directive (#2023)

[33mcommit 78904dbe32f3a859b6adfe793c1489d838712df3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Feb 17 10:06:22 2019 -0500

    Complete Linux distro documentation for `make install`. (#2019)
    
    With this change our documentation on how to install google-cloud-cpp on
    Linux matches list of distributions and versions on how to compile
    google-cloud-cpp for development.
    
    A future PR will update the README file to use the (tested) contents
    from the Dockerfiles.

[33mcommit 83f5fd598d0cad9b08ea512ad4b49ac7a7d07c8e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Feb 17 09:06:03 2019 -0500

    Kokoro build scripts to test install instructions. (#2020)
    
    These scripts run the instructions in README and INSTALL using Kokoro+Docker.
    This PR includes the scripts for all the distributions, but none of them are
    enabled. I plan to enable these slowly in a series of internal CLs.

[33mcommit b79294eb8b6c007918db5455b4b6846bd38a6fcc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Feb 17 08:21:27 2019 -0500

    Refactor Bazel installation. (#2018)
    
    Use the same script from Kokoro and Travis, so it is easier to maintain.
    In addition, verify the download by also downloading the SHA256
    checksum, that is not secure, but the objective is to prevent accidents,
    not malice.

[33mcommit acff402909d864b32919f701e4ef2618888270c5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 16 13:47:41 2019 -0500

    Dump detailed logs on build failures. (#2017)
    
    When the build fails we want to print detailed logs of the emulator(s)
    to be able to diagnose or reproduce the errors. This should help
    troubleshoot bugs like #2005, which have proven hard to reproduce
    locally.

[33mcommit d480ebe3029d2984cef765d0e37c0dcc84ed8b8e[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Sat Feb 16 12:52:42 2019 -0500

    explicitly clears fields (#2016)
    
    Moving from an object is not guaranteed to leave the moved-from object in any particular state. So to ensure these fields are cleared after a call to Clear(), we need to explicitly clear them.

[33mcommit cf4766e708c2649bc69e48669432a6458fadbba0[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Sat Feb 16 10:16:31 2019 -0500

    Return StatusOr from Table::CheckAndMutateRow() (#2008)

[33mcommit 1e9b4e754ecaceb6b2a5223a91702ec67a6bf8d0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 16 10:12:48 2019 -0500

    Run storage testbench on unused port. (#2012)
    
    Let the OS pick an unused port to run the storage testbench. We
    want to prevent flakiness on CI systems where the tests are not
    isolated to their own container or VM.

[33mcommit ca8905bf83b9c0cd07484a6ec013f89494163338[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 16 10:12:31 2019 -0500

    Implement ubuntu:xenial install script. (#2007)

[33mcommit e8eb97c787d9be0dac27b560804be7859875b861[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Sat Feb 16 09:34:32 2019 -0500

    Implementation of ReadRows() example showing how to use Prefix. (#1977)

[33mcommit f3b57e6f666d9da303e79fa637b60c8be0713bff[m
Author: Matt Houglum <houglum@google.com>
Date:   Sat Feb 16 06:29:28 2019 -0800

    Update method doc after the change to StatusOr. (#2014)

[33mcommit fca0669662ee96fbc00a2d4eda98f2d8339866ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 16 09:28:07 2019 -0500

    Use random port for Bigtable emulator. (#2010)

[33mcommit 3dc8848d8bb379397bae5780d1d88df4b836ed6f[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Feb 15 15:04:28 2019 -0500

    Stops using grpc's DO_NOT_USE enum (#2013)
    
    As the name implies, we shouldn't be using `grpc::StatusCode::DO_NOT_USE`. Additionally, I'm removing our own `kDoNotUse` status code. We don't need it. If unspecified, an enum class has an underlying type of `int`, so we can test stringifying any value within the range of `int`. In this case, I'm using `42` to make it clearish that I'm choosing an arbitrary value. Of course, if our legit status code values ever cover the value 42, this test will break, but that seems unlikely and the fix should be straightforward.

[33mcommit 6a187f3b81cfeb367f82c50cb857273030624773[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 15 10:15:32 2019 -0500

    Remove ciso646 include. (#2011)
    
    This included is needed with MSVC to support the alternative boolean
    operators (`and`, `xor`, `not`, etc). Removing the #include will force
    us to use the traditional spellings.

[33mcommit 733cce2af79ac8edae4bc409018f958c49f5ccb9[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Thu Feb 14 21:20:06 2019 -0500

    Do not complain about the COLOR_* variables already being set. (#2009)
    
    We expect ci/colors.sh to be source multiple times, which means
    we also expect to see the COLORS_* variables to be set, so stop
    warning that they are.
    
    Also, don't treat TERM=dumb as something special, but rather
    check that "tput" is an actual command name.
    
    Set the COLOR_* variables to an empty string when there is no tput.

[33mcommit 0c35329eab0427cd30b9d4fc3856949630cda19b[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Thu Feb 14 13:57:06 2019 -0500

    Change to StatusOr for Table::SampleRows() (#1994)

[33mcommit 60aa66dc1ad22372d6e35053f51200729e7e47f7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 14 07:38:51 2019 -0500

    Automate testing of INSTALL.md instructions. (#1991)
    
    With this change the INSTALL.md file is automatically generated from the
    several `ci/test-readme/Dockerfile.*` files. In turn the Dockerfiles are
    changed to test:
    
    - That the minimal set of tools recommended in README.md are enough to
      compile `google-cloud-cpp` using external projects.
    
    - That the instructions in the INSTALL.md file are enough to compile and
      install `google-cloud-cpp`.
    
    - And that the installed `google-cloud-cpp` can be used to compile a
      sample program that a user might write.
    
    A future PR (or series of them) should execute these Dockerfiles as part
    of the CI build. In a future PR we should also extend the Dockerfiles to
    execute one of the integration tests against the production environment,
    to verify that the produced binaries are usable.
    
    The post-install tests were hard-coded to use g++. On some platforms
    (notably ubuntu:18.04) g++ compiles with PIC, and links with PIE, while
    clang++ does not. This fixes the build to use the same compiler for the
    post-install tests.

[33mcommit 90745d6b25b2b1e75882a650fe2fe97a74cfcfcb[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Feb 13 17:12:08 2019 +0100

    Use {EXPECT,ASSERT}_STATUS_OK where applicable. (#1996)
    
    * Use {EXPECT,ASSERT}_STATUS_OK where applicable.
    
    This fixes #1990.
    
    Occurrences of `grpc::Status` are untouched. They should disappear once
    the transition to `StatusOr<>` is complete and `internal/*` removed.
    
    FTR - In order to identify those, I temporarily instrumented Status and {ASSERT,EXPECT}_TRUE to print the file and line number when ok() is called from the context of {ASSERT,EXPECT}_TRUE.

[33mcommit 96990c2038bb65623447d2191dca29122ce3e612[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Feb 13 15:46:46 2019 +0100

    First version of Apply batching. (#1879)
    
    It works, but there is still work to do:
    - bulk mutator should allow for more fine-grained reporting
    - cancellation needs to be added

[33mcommit 62558834434a0286b0c258f447a9def8582f17b3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 13 09:32:37 2019 -0500

    Declare GCS client library as Beta. (#2000)

[33mcommit 747d17cbda98ae0d650cee9aebd697dccb925f19[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Feb 13 15:15:34 2019 +0100

    Add streaming to (Async)BulkMutator. (#1881)
    
    This is going to be needed for efficient flow control in
    MutationBatcher. It allows for releasing resources for mutations which
    we know are finished.
    
    The rationale is that without it the whole batch will hold the resources
    until all requests are finished (either successfully or failed or time
    out). Given that batches can contain up to 100K mutations, an outlier
    taking ridiculously long would be the common case.

[33mcommit 1598999da1390fbcefbc58aa3725e35797baf546[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Feb 12 23:00:27 2019 +0100

    Standardize {EXPECT,ASSERT}_STATUS_OK description. (#1998)
    
    * Standardize {EXPECT,ASSERT}_STATUS_OK description.
    
    This way it is consistent with other gtest assertions/expectations.

[33mcommit bd8055674fbed076d9a05baeef3e219e39f4989a[m
Author: Matt Houglum <houglum@google.com>
Date:   Tue Feb 12 13:33:12 2019 -0800

    Allow specifying non-default scopes and subject. (#1987)
    
    Fixes #1866, which mentions that the default scopes for
    ServiceAccountCredentials are not always enough. Allows passing an
    empty optional for the set of scopes, in which case the default scope is
    used, or an optional containing a set, in which case the strings in the set
    are concatenated into a comma-delimited string. This change also allows
    specifying the subject (for domain-wide delegation purposes) used for
    authorization grants.

[33mcommit 091411dcf0a30dbaa1aca405e3aa04cf87c4bc23[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Feb 11 19:16:05 2019 +0100

    Homogenize failed_locations handling in samples. (#1995)
    
    From now on:
     * `auto const&` is used in iteration
     * `failed_location` loop variable's name
     * `cerr` is used when ignoring the errors
     * `cout` is used to show to the user what there is in the responses

[33mcommit ff137eb239ebdc2b120e1b46b001b8527826a9ce[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Feb 11 17:59:22 2019 +0100

    Migrate instance admin API to StatusOr<>. (#1992)
    
    This fixes #1967.

[33mcommit b4c4db4ec2a48c1ac7301509c61dd3ead8225035[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Feb 11 12:46:41 2019 +0100

    Implement {ASSERT,EXPECT}_STATUS_OK. (#1988)
    
    This fixes #1980.
    
    {ASSERT,EXPECT}_OK would probably be better names, but we can't use them due to a name conflict - protobuf is defining EXPECT_OK for grpc::Status.

[33mcommit 8105725edf9726dd082fba031ee01556648b2c2a[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Feb 8 10:12:27 2019 -0500

    removed unneeded virtual functions (#1986)

[33mcommit 96c908a03ac3f38ea04135f759db47c69aa26fda[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Feb 7 22:05:10 2019 -0500

    Change std::endl -> "\n" (#1985)

[33mcommit 7e889c4504b1ff452a4b5153cfa2cfe1f4a5669f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 7 16:42:48 2019 -0500

    Initial `make install` instructions. (#1942)
    
    Document how to install on Ubuntu and CentOS (other distributions will
    follow). I want folks to review the structure and then we can see add
    the remaining platforms.
    
    Fedora 29 has recent versions of gRPC, protobuf, and libcurl. We can
    show the simple case first with this distribution, before we discuss the
    more difficult cases (e.g. CentOS).

[33mcommit 6f8eb03b2ba66482bbeeab7f4f4ec9dd4dc35771[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Feb 7 16:32:52 2019 -0500

    adds virtual d'tor to some test classes that have virtual functions (#1984)

[33mcommit 2bf3378f2757683a9415a812dcc303261f2240a7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 7 14:50:42 2019 -0500

    Simplify Kokoro configs. (#1979)
    
    Change the configurations to set a single environment variable, and then
    the script uses that to set the right combination of DISTRO,
    DISTRO_VERSION, CMAKE_FLAGS, etc.

[33mcommit aa70ffea0b7645a2775a612c81c9d85d0bc9377d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 7 13:17:50 2019 -0500

    Pin the Google Cloud SDK version. (#1976)
    
    Currently we update the Cloud SDK on each build, that takes time, and it
    risks breaking the build just because a newer SDK is broken (has
    happened before).

[33mcommit 2e044237b97025d5165ebc8404885f08a7cdd4e8[m
Author: remyabel <47402505+remyabel@users.noreply.github.com>
Date:   Thu Feb 7 09:06:09 2019 -0500

    README.md: fix typo in command [skip ci] (#1975)

[33mcommit 7db1c586033bf0864f323ae1b7304fdb0a7d69e8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 6 18:50:59 2019 -0500

    Remove unnecessary code from example. (#1971)
    
    One of the examples was explicitly loading the default credentials,
    though it did not use them. That broke one of my local builds, because
    the credentials file did not exist at all.  Strangely it seems to work
    without trouble in the CI build :shrug:

[33mcommit 65c716c59fab4dbfabf027a4c11c477b87ef0f90[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 6 17:56:38 2019 -0500

    Package version config work without a version. (#1972)
    
    Our package version config files were requiring an explicit version,
    i.e., we always rejected:
    
    ```CMake
    find_package(bigtable_client)
    ```
    
    because of "version mismatch". With this change we allow any versions to
    match when the user does not express a preference.

[33mcommit bb31a84490ff2df3be206e93e47c71d8b5e6c874[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Feb 6 15:30:31 2019 -0500

    Updated Release instructions (#1964)

[33mcommit b14dc6a04a937905e0f9f6ccdc0cbdf7bdd54528[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Wed Feb 6 14:51:55 2019 -0500

    Implementation of RowSet example using discontinuous keys (#1939)

[33mcommit 83369c789e11abe67ec5c328205607b9ba8d4e36[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Feb 6 13:43:45 2019 -0500

    Bumping versions in master to be one creater than the current release version (#1962)

[33mcommit 514a03bdb5b03c3c7ba62f420d3bbbb50b1d9260[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Feb 6 19:01:45 2019 +0100

    List{Instances,Clusters} return failed_locations. (#1924)
    
    The user needs this because otherwise they can't tell if they have the
    right data. This shouldn't be simply retried because in the event of a
    location's failure we want the user to be able to still get results for
    others.

[33mcommit b6044913fba11605078b776414410ed93d44d7b2[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Wed Feb 6 12:15:22 2019 -0500

    Change the storage examples to throw a std::runtime_error on failure. (#1957)

[33mcommit 84c092f692de88de8c4711547c47d60f646c4abc[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Feb 6 10:26:45 2019 -0500

    updated release notes [skip ci] (#1955)

[33mcommit 78a5b40ff0e12159697c8181eaaa1286bb3ef259[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 5 17:16:17 2019 -0500

    Build some builds from Travis to Kokoro. (#1941)
    
    Now that the builds are known to work remove them from Travis, and link
    their badges from the README.md file.

[33mcommit 1d843212925f86c24aad772b214ee18f44824911[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Tue Feb 5 11:05:18 2019 -0500

    Implement Table::AsyncApply function (#1905)

[33mcommit 82645002222239f6ca48403858079ba487510577[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Feb 5 19:46:46 2019 +0530

    adding Setup member function in PollingPolicy (#1919)

[33mcommit e7f982a04a50223c8732f3ee8ee39fc08568b9b6[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Feb 5 09:27:36 2019 +0530

    Implementation of noex AsyncReadModifyWriteRow (#1935)

[33mcommit 9862a85d73d2c277c7b42e5a1164ec53fa82da16[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 4 16:53:23 2019 -0500

    Implement example to read a row range. (#1940)
    
    Write an example showing how to use `Client::ReadObject` with a range
    option.

[33mcommit 035c601fcd0423c6460d0c72495f99ef63ae0ecf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 4 16:44:55 2019 -0500

    Improve documentation of Client policies. (#1933)
    
    The storage::Client can be configured with different retry, backoff, and
    idempotency policies. This change improves both the landing page and the
    documentation for the storage::Client class to describe these policies,
    their default, and how to change them.

[33mcommit 35f3179a7128f5ccd6f9d7b4b63144dac09aa6b9[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Sun Feb 3 10:39:58 2019 -0500

    Allow compiling external projects in Debug mode (#1938)

[33mcommit 2e82241e9b274a080612c9bae07ae61d76e33e72[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Sat Feb 2 20:34:09 2019 -0500

    Cleanup argc checking in storage/examples. (#1936)
    
    * Cleanup argc checking in storage/examples.
    
    * Fix invocation of "storage_object_samples list-objects" to only
    pass the bucket name.

[33mcommit 6a539ec32d879b695b9f5d646f01ee1d95008259[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 2 20:05:46 2019 -0500

    In examples, do not use StatusOr<T>::value(). (#1934)
    
    We want to be explicit about error handling code.

[33mcommit 628bf752252e22a069acfa50c7fc589d913e9444[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 2 10:01:24 2019 -0500

    Create Kokoro configs for more builds. (#1928)
    
    This creates the Kokoro configurations for the
    UndefinedBehaviorSanitizer build, the build without exceptions, and the
    build for CentOS 7. These are simple builds to move out of Travis, so we
    start with them. The first step is to create these configs. Once merged
    I will add the internal to Google configuration files, and once I verify
    those work I will remove the corresponding builds for the .travis.yml
    file.

[33mcommit 3d822280954100dda1db541918a8834a3dd995e1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 2 10:01:04 2019 -0500

    Fix Travis CI link [skip ci]. (#1931)

[33mcommit bd20db4f2369b8927de862af9245e47109c69b0a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 1 23:42:28 2019 -0500

    Remove ASAN build from Travis. (#1927)
    
    Now that it is working on Kokoro we do not need to waste the Travis
    bandwidth.

[33mcommit c5d551927db771d737e978fc2a90fba81f4336ab[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 1 23:42:09 2019 -0500

    Add an example for multipart uploads. (#1925)
    
    This shows how to use `WithObjectMetadata` in `InsertObject()`. Also fixed
    the documentation to list `WithObjectMedata` as one of the options.

[33mcommit 5244e73ccf104837e21bd52c419b33b45ee64a92[m
Author: Matt Houglum <houglum@google.com>
Date:   Fri Feb 1 20:39:28 2019 -0800

    Make credential creation not throw exceptions. (#1911)
    
    Instead, `StatusOr<CredentialType>` is used to return a "bad" `Status` in
    the event that something went wrong when loading or creating the
    `Credentials` object. This also affects other classes that were using ADCs
    in the default case, since the ADC loading process can fail:
    
    - The GCS `Client` class no longer has a default constructor - instead,
      I've added a `CreateDefaultClient()` factory method that returns a
      `StatusOr<Client>`.
    - Same for the GCS `ClientOptions` class, which now has a
      `CreateDefaultClientOptions()` method.
    - Note that some of the methods in google_credentials.h do not return a
      `StatusOr` type - this makes sense because creating those credentials
      can't fail, but it makes the convenience methods in that file have
      different return types, which might look a bit strange. I'm open to
      comments on this.

[33mcommit 7de87410bb62081c49cf0264c7e32c6b326bf5fb[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Feb 1 15:29:47 2019 -0500

    Changed Client::ListBuckets() to not return StatusOr (#1921)

[33mcommit 6aaf51c4d27fd922eb483074e10e3decdad2db47[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 1 12:33:20 2019 -0500

    Support scripts for Kokoro+Docker. (#1920)
    
    These scripts will allow us to move builds from Travis CI to Kokoro.
    As they are, these scripts have no effect, a separate configuration
    change inside Google will activate them.

[33mcommit a3a79d21e2e74302c7a8e61ea87fe2a7412a236a[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Feb 1 12:12:57 2019 -0500

    Changed TableAdmin's CreateTable and ListTables to return StatusOr (#1908)
    
    This PR is an initial foray into changing the bigtable library to return StatusOr instead of throwing. In this PR I changed two non-async member functions in TableAdmin. CreateTable() and ListTables(). I also changed the unit tests and any related samples.

[33mcommit 4772af2aeb6487d2b1ab5867f0bbd60d4b406748[m
Author: Bradley White <14679271+devbww@users.noreply.github.com>
Date:   Fri Feb 1 09:07:42 2019 -0500

    Remove support for StatusOr<void> (#1916)

[33mcommit 53ed13d7b2db2247743864ac2f92ad22e88d48c2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 31 22:12:57 2019 -0500

    Link documentation to google/cloud symbols. (#1917)
    
    With this change the documentation in google/cloud/storage and/or
    google/cloud/bigtable can reference symbols in the google/cloud docset.

[33mcommit 01230ccadfe8c946c408acbbc1d5818fb9fa37d5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 31 17:57:03 2019 -0500

    Treat 502s are retryable errors. (#1913)
    
    A second reading of
    
    https://cloud.google.com/storage/docs/json_api/v1/status-codes#500_Internal_Server_Error
    
    shows that 500s, 502s, and 503s are retryable errors, so treat them as
    such.

[33mcommit 8d659b74b95d7b471158727076dc6ef500867ee4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 31 12:34:58 2019 -0500

    Improve storage landing page. (#1899)

[33mcommit 3b4c09dbbcbfa96429631af002b479c7ff2c80fd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 31 12:34:41 2019 -0500

    LockBucketRetentionPolicy returns a BucketMetadata. (#1901)

[33mcommit 05ac25aaac559485dacaded0738e8360080f54d6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 31 07:59:44 2019 -0500

    Fix the formatting and naming in examples. (#1907)

[33mcommit 6aede674b94f6fe18908612cb6f2177dc211b41b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 30 22:00:32 2019 -0500

    Fix the Doxygen documentation. (#1906)
    
    I am not sure why this is not broken in more places, but it broke for
    me.  Apparently Doxygen gets confused with `StatusOr<T>::ok()` but it is
    Okay (pardon the pun) with `StatusOr::ok()`.

[33mcommit ea3253d8942422f7ee201e60840733619e8f250d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 30 12:56:05 2019 -0500

    Update the instructions to capture checksums. [skip ci] (#1903)

[33mcommit 242d96f2bc3b9f4484799e60220eaa87abd94d15[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 30 12:55:55 2019 -0500

    Additional documentation fixes. (#1898)

[33mcommit ed90408dfa41e85a04893edb7801853eb20763b0[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Wed Jan 30 12:05:37 2019 -0500

    Updated StatusOr header docs to contain more best practices (#1892)
    
    Internally at Google, we have lots of experience with StatusOr-like types. In this PR I updated the header docs for status_or.h to present the recommended and typical usage scenarios based on the docs and best practices that we use internally.

[33mcommit a12fc7f9e9cc3d7b27a6ad7a6ee39a2f2a1bc7a5[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Wed Jan 30 11:43:42 2019 -0500

    Don't throw exception inside ListBuckets() (#1902)

[33mcommit efaed6156def5eecda34d4edc2778fc7dab74ebb[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Jan 30 16:28:38 2019 +0100

    Bulk mutator fixes (#1880)
    
    * Fix BulkMutator returning invalid indices.
    
    Whenever a mutation was not confirmed by the server (e.g. because the
    stream was broken every retry), it was returned as failed (correct) with
    -1 as original index (incorrect). This patch fixes it.
    
    * BulkMutator returns UNKNOWN if unconfirmed.
    
    If BulkMutator never gets a response for a mutation it used to return
    OK, which was very confusing - it broke the invariant that every failure
    has a non-zero exit code, which I believe users would assume.

[33mcommit 9e0c9ad4027da50024cc391765ee787ab5762a05[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 30 08:54:50 2019 -0500

    Also publish google_cloud_cpp_common docs. (#1897)
    
    We were not pushing the documentation to the gh-pages branch.

[33mcommit 0a73ac14cb9a2239ee0c52b63e442904c095d688[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Tue Jan 29 20:46:49 2019 -0500

    Update googletest for Bazel (#1896)

[33mcommit 4bf82bf9b0f1b239422b3fd813e7eb0346bb0672[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 29 18:13:20 2019 -0500

    Fix documentation problems. (#1895)

[33mcommit a576b800275745fdefcd870ef97eaace72341e99[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 29 17:24:23 2019 -0500

    Disable `make install` for external projects. (#1885)
    
    When compiling against dependencies obtained via `ExternalProject_Add`
    we should disable the `make install` rule: the dependencies may not be
    installed in the system, or may not be the same version used to compile
    the code. A future PR will improve the documentation to explain how to
    build the system with `make install` support.

[33mcommit c40e9538623a61507df79cdec5dda4b9af995f86[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 29 09:23:05 2019 -0500

    Replace GoogleCloudPlatform -> googleapis. (#1891)
    
    Since we moved the repository we should save users one hop.

[33mcommit 297894954b5f4f65d6bd959a677b2f3ffcb52f01[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Jan 29 19:52:34 2019 +0530

    using move constructor for Row (#1890)

[33mcommit 7778c38ce9364853f712fe2a8371d2a4a9844550[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Tue Jan 29 09:20:42 2019 -0500

    Use tar ball URL instead of git clone (#1874)

[33mcommit 4bd6765523064d55a540aee78df6e73bf6ff1109[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Tue Jan 29 09:19:45 2019 -0500

    Implement bigtable::Table::AsyncBulkApply function (#1872)

[33mcommit 7b26e02f7ce8b47580cd6c242edff8e503272e87[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Mon Jan 28 11:07:42 2019 -0500

    Cleanup: Changes member relational operators to non-member binary operators (#1882)
    
    Changed all member relational operators to non-member operators. Some are "inline friend" functions, when friendship is needed (e.g., when casting to a privately inherited base class). In cases where I was able to remove the friendship, I did.

[33mcommit 7152ceb07b0d89bbd86ca487f47fee06ddfeb0d1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 28 08:15:45 2019 -0500

    Cleanup BucketMetadata public interface. (#1877)
    
    Move ParseFromString(), ParseFromJson() and ToJson() to the internal
    namespace. None of these functions should be called by application
    developers, and therefore we do not want them exposed in the public API.

[33mcommit 99c5f2bfc923cf67c60e0f509e1e5953bdd4af9d[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Sun Jan 27 21:32:36 2019 -0500

    Re-added "Include Order" section to the style guide (#1876)
    
    When I previously changed the style guide I accidentally removed this section. When I realized that the old style guide for this project differed from the GSG on this point, my intent was to "fix" our code to align it with the GSG's guidance on this point. But then I started doing that it all the includes looked less sensible to me. So after some reflection and discussion w/ other Googler's about this style point, I think I prefer if this project violates the GSG on this point and keeps the current include ordering that we've been using.
    
    Thanks for doing this the right way from the start, Carlos! :-) Sorry I accidentally removed this section.

[33mcommit 9f4ae11bbae26730f46abfc5becdcc25c92a7e83[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Sat Jan 26 08:05:44 2019 -0800

    [Storage] Fix region tags (#1867)

[33mcommit 9e97830af5d78213fb86d093418dc121ee56364f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 24 22:30:54 2019 -0500

    Cleanup ObjectAccessControl public interface. (#1871)
    
    This change moves ParseFromJson() out of the public interface for the
    library. We should not expect customers to use this member function, nor
    do we want to expose the internal JSON representation in our public
    interfaces.
    
    More changes will follow for other similar types.

[33mcommit c9bd462f71d20fa60ef0c988e431a12ab96bc973[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 24 12:33:25 2019 -0500

    Cleanup NotificationMetadata public interface. (#1870)
    
    This change moves ParseFromJson() and ParseFromString() to the internal
    namespace. We do not want to expose the internal representation for JSON
    objects in the public interface, nor do we want to expose APIs that the
    application developers do not need or should not use.

[33mcommit ac742e3a2599e514850214a88618e1a8f80a8bb5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 24 11:14:05 2019 -0500

    Cleanup ObjectMetadata public interface. (#1869)
    
    Move ParseFromJson() and ParseFromString() to the internal namespace.
    Move the ToJson*() member functions to standalone functions in the
    internal namespace. All these functions were not intended for the
    application developers to use, and therefore should not be exposed in
    the public API.

[33mcommit 8b5fa0494522ca61f330f8f18dbbd64126a963fc[m
Author: Matt Houglum <houglum@google.com>
Date:   Wed Jan 23 14:30:08 2019 -0800

    Move exceptions outside of Credentials class ctors. (#1868)
    
    We don't want the constructors of Credentials subclasses to throw
    exceptions, so the parsing steps that could have thrown them have been
    moved outside of the ctors, which now accept structs containing the
    already-parsed information.
    
    The tests have also been cleaned up a bit to test parsing separately
    from credential instantiation, and the test names were tweaked to be
    more specific (e.g. to indicate if we're testing that something is supposed
    to fail, as opposed to a success case). Duplicate tests were also removed
    (e.g. one that tested for failure when a field was left out was removed, as
    we had another test farther down that removed each field and checked
    for failures in each case).
    
    This is part of the work to address #1806. Will send a follow-up PR to
    start returning StatusOr instead of throwing.

[33mcommit 88cceab1c6e13ef267db98d98701f5fb589f8467[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 22 21:38:08 2019 -0500

    Cleanup ObjectAccessControl public interface. (#1864)
    
    This change moves ParseFromJson() out of the public interface for the
    library. We should not expect customers to use this member function, nor
    do we want to expose the internal JSON representation in our public
    interfaces.
    
    More changes will follow for other similar types.
    
    Part of the work for #1734.

[33mcommit 83855a3d72c78b3dac4af0a866ce1edb0df61a0a[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sat Jan 19 10:22:46 2019 +0530

    implementation of noex::InstanceAdmin:AsyncGetIamPolicy (#1843)

[33mcommit d3aac244172c4610e82ea8fb189fae8553dc1b2d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 18 15:02:57 2019 -0500

    Add new integration tests to driver scripts. (#1863)
    
    I completely forgot in the previous PR.

[33mcommit 9614d21492181b82a7cccc5527fb003937450f74[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 18 14:01:03 2019 -0500

    Refactor object integration tests to smaller files. (#1862)
    
    The integration tests for object operations were too large, in this
    change we complete the refactoring into smaller files.

[33mcommit eb403da0ed134533de765f3db207295f7a1fe960[m
Author: Robert P Simion <45881037+rsimion@users.noreply.github.com>
Date:   Fri Jan 18 13:33:19 2019 -0500

    Implementation of AsyncListClusters functions  (#1824)
    
    This fixes #1526.

[33mcommit 7b0746c3f2e466c074658d10907cf8d756cf21c0[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Thu Jan 17 20:10:46 2019 -0800

    Changed alternative operator names to symbolic names
    
    This change is for conformance with the Google Style Guide, which this project follows (see doc/cpp-style-guide.md).

[33mcommit 7845ffc1c40c4b0f885b409b3c6862f69a41e773[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 17 19:44:19 2019 -0500

    Use StatusOr in Client::DownloadFile. (#1860)

[33mcommit 3922e58a3b6f3ef612b3704ae8d8f1200f29669f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 17 18:49:45 2019 -0500

    Use StatusOr in Client::UploadFile. (#1856)

[33mcommit f92f9185696e31cf13ec45dd32cb6803cc498c2e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 17 17:56:22 2019 -0500

    Use StatusOr in Client::CreateV2SignedUrl. (#1858)

[33mcommit abfe02fe77c599dcb22807a5cdb834cb3a105469[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 17 17:54:20 2019 -0500

    Use StatusOr in Client::ComposeObject. (#1857)

[33mcommit b4c4fd7b38471196af2f412add7e53a387c23f6c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 17 12:16:34 2019 -0800

    Use StatusOr for Client::LockBucketRetentionPolicy. (#1853)

[33mcommit c04b4c522d2fb1732895999a0b98198134c53882[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 17 11:33:13 2019 -0800

    Use StatusOr for ListBuckets. (#1854)

[33mcommit 02374d321b4a428cba2c19b1e7ff15e3012812d9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 17 11:32:42 2019 -0800

    Return StatusOr from Client::CopyObject. (#1855)

[33mcommit bd1c5b144ddabcbc866edb35a92e72effb82bd9d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 16 11:16:21 2019 -0800

    Use StatusOr in Client::GetServiceAccount. (#1852)

[33mcommit b7ae372ca1b5b0af445e4469a62ab1f3f4668acd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 16 09:46:39 2019 -0800

    Use StatusOr for more Client::*Object functions. (#1851)
    
    In this change the remaining "CRUD" operations: GetObjectMetadata,
    UpdateObject, and PatchObject.

[33mcommit b23e546682bb3ac2cb018f56f3c5b645b9f06136[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 16 09:13:55 2019 -0800

    Rename BucketOnlyPolicy to BucketPolicyOnly. (#1850)
    
    The integration test was changing both the ACL and the BPO settings,
    we cannot do that, the service only allows one to be set.
    
    The testbench was not accepting any BPO changes, so fixed that too.

[33mcommit 6be9608cb91a42d81b591cd4ed9c384680e64e85[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 15 16:43:00 2019 -0800

    Change Bucket IAM functions to return StatusOr. (#1846)

[33mcommit d770aec7073fd6369d3aea6a896e7469e5d750bd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 15 13:25:02 2019 -0800

    Change StatusCode to a enum class. (#1845)

[33mcommit 209e710895a3066e629a7fa76337e940bba0ebb2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 15 10:28:31 2019 -0800

    Fix handling of StatusCode vs. HTTP status code. (#1844)

[33mcommit edfe355827201a9509db664f2215754b570fc85b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 15 08:55:39 2019 -0800

    Return StatusOr<void> from Client::DeleteObject. (#1841)
    
    Changed tests and examples to check the return status.

[33mcommit 3095c83151424cc837dcc6189eebf47b60198beb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 15 08:43:48 2019 -0800

    Simplify Status class. (#1842)
    
    Make it more similar to the internal version.

[33mcommit 34ed5350decb5a104e581de8ab6f881479dcfe84[m
Author: Netty Hernandez <45398907+NettyH@users.noreply.github.com>
Date:   Mon Jan 14 16:36:07 2019 -0500

    Increase default message length limit (#1802)
    
    Changed gRPC default Max receive and Send Message length from to 256 MiB

[33mcommit 222b0133856cc312300020a4f6ee580d0bb9be70[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 14 15:30:00 2019 -0500

    Use StatusOr in Client::*ObjectAcl. (#1838)
    
    Changed all the functions related to Object ACLs to return StatusOr.

[33mcommit 7ae3e504b9d484ea2b34eee003303d76ccc94fbd[m
Author: Josh Soref <jsoref@users.noreply.github.com>
Date:   Mon Jan 14 14:34:16 2019 -0500

    grammar (#1840)
    
    mostly based on app.grammarly.com

[33mcommit ba8f2e83f680a5d3e691b4eb3480cb56e36374b4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 14 13:58:31 2019 -0500

    Use StatusOr in several Client::*Bucket operations. (#1836)
    
    This change modifies `Client::GetBucketMetadata`, `Client::DeleteBucket`,
    `Client::UpdateBucket`, and `Client::PatchBucket` to return a
    `StatusOr`.

[33mcommit a477b7d75ed2d82d7d0d3f42434036401306cc5c[m[33m ([m[1;31morigin/coverity_scan[m[33m)[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Sat Jan 12 10:52:18 2019 -0500

    Rename internal::Raise* to internal::Throw* (#1837)

[33mcommit 3e91dd683d9310ad09a342e06a8ca4d13d0de457[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 18:41:39 2019 -0500

    Use StatusOr in Client::CreateBucket. (#1834)
    
    Return `StatusOr<BucketMetadata>` from `Client::CreateBucket`, change
    the examples and tests to use the new return type.

[33mcommit d6e00621c09bcd139e0a59a37bc1e31efb588a82[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 16:19:14 2019 -0500

    Use StatusOr in Client::InsertObject. (#1830)
    
    This function is used a lot in tests and examples because before you can
    test something else about objects, you need to create an object. In any
    case, simply return `StatusOr<ObjectMetadata>` from InsertObject and
    change all the code to deal with that.
    
    This fixes #1672.

[33mcommit 720314178d949ad84f93ab6bce9d033ab5e29dd1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 16:18:39 2019 -0500

    Use StatusOr in Client::*BucketAcl() functions. (#1835)
    
    Return a StatusOr instead of throwing exceptions for the
    `Client::*BucketAcl` functions. Fixed the examples, unit tests, and
    integration tests.

[33mcommit 287fce65004749f84746c8cee84cee172ac4c90f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 15:06:09 2019 -0500

    Only use StatusCode values in Status. (#1826)
    
    Remove the constructors that accept `long`, and only use the values in
    the StatusCode enum. We use the `storage::AsStatus()` function to map
    the HttpResponse to the correct `Status`.
    
    Lots of changes in tests because instead of checking for HTTP codes we
    need to check for the corresponding StatusCode.
    
    The more subtle change is what happens with `IsRetryable`, I kept the
    semantics of its tests unchanged, so the behavior should be the same.

[33mcommit 3f3b842e1b0e8b6fcc98b3c2e8c0d90e43b75b45[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 13:53:21 2019 -0500

    Fix handling of 308 responses. (#1831)
    
    When resuming an upload that has received no bytes the server can
    respond with 308 and exclude the `Range:` header. The client should
    interpret that as "oh, you have no committed bytes, cool I will start
    from 0 then." We were interpreting that as "The server is broken, you
    are supposed to tell me what was the last byte." I guess I just read the
    documentation wrong.
    
    I fixed the testbench to behave like the production service does in this
    case. That broke one of the integration tests (yay!) and then fixed the
    code to handle the response message the "Right Way":tm:

[33mcommit 89cd23fcfc67cd88e56d33d8728fcca499d60c82[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Fri Jan 11 13:52:13 2019 -0500

    Set RPATH for external projects (#1823)
    
    Fixes #1797.

[33mcommit 74334bc9bb512f69c132f5f9654cec3aa8d41ea9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 12:51:41 2019 -0500

    Fix comments in ObjectRewriter. (#1832)

[33mcommit a81f2666e4535b445d74b7a12c65137fa312289d[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Fri Jan 11 11:22:30 2019 -0500

    Simplified our style guide to describe only where it differs from the Google style guide (GSG). (#1828)
    
    I deleted all the stuff that was duplicated from the GSG to make the differences more obvious.

[33mcommit 7e80adf1175eb631a04c7a42ea0bbe574564bf6c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 10:12:17 2019 -0500

    Return StatusOr from Client::*DefaultObjectAcl(). (#1817)
    
    This changes all the `Client::*DefaultObjectAcl()` functions to return a
    `StatusOr<T>`.

[33mcommit 8778b4d1cc0e5c623541f5854e49d3b49157acb8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 11 09:53:21 2019 -0500

    Convert RewriteObject functions to use StatusOr. (#1825)
    
    Return a StatusOr in the member functions that might return with an
    error. Changed the examples and the tests.
    
    The code is much simpler thanks to @devbww review and questions

[33mcommit f94cd22fd1d3bad2226f62b1f0775d3ba803c5bb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 10 15:17:25 2019 -0500

    Write function to map GCS HTTP codes to StatusCode. (#1816)
    
    This is based on the documented status codes for GCS:
    
    https://cloud.google.com/storage/docs/json_api/v1/status-codes#http-status-and-error-codes

[33mcommit 6c0eb52bba94bccbfe98087fe52a54b4dcfb3140[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 10 14:55:02 2019 -0500

    Add breaks in switch statement. (#1822)
    
    Coverity Scan warns about missing breaks, that is generally a good idea,
    though in this case they happen to be harmless (the statements fall thru
    to trivial if statements). On general principles, fix the warning so we
    can find the other stuff.

[33mcommit 5d3e7fa2af2d8f4a61f6030648a01583cc1449b3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 10 13:48:11 2019 -0500

    Update instructions for Windows [skip ci]. (#1821)

[33mcommit fba050f1acaa772fa9b6e798961f75790a913ffb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 10 06:58:34 2019 -0500

    Do not throw an exception from ~RowReader(). (#1815)
    
    We were raising an exception from ~RowReader() if the application failed
    to retrieve an error after the iteration completed. I never liked this
    idea, but we did not have `GCP_LOG()` when we implemented this.
    
    Also Coverity Scan was (rightly) unhappy about this code.

[33mcommit 696539eacac0f2e2a819bf09aad7828b42b46e51[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 10 06:58:00 2019 -0500

    Add functions to convert StatusCode to string. (#1820)
    
    This way we can create better error messages.

[33mcommit d31c018da5a431eb476a0862ca0005a23a740f30[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 9 13:42:35 2019 -0500

    Use installer script for bazel. (#1818)
    
    Installing via homebrew broke this morning, so switch to just
    downloading and running the installation script. This pins the version
    of Bazel we will use for the CI builds, which is good (more reliable
    builds), and bad (users may use a newer version and we do not know it
    breaks).

[33mcommit cb3283a8c08a9b717352991a6f41a895177565a9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 9 05:01:43 2019 -0500

    Rename StatusCode enum values to kPascalCase style. (#1814)
    
    This is for consistency with other StatusCode things.

[33mcommit cacf6a0525b9c0e7e905c83affe0858e9b100ce2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 8 21:06:17 2019 -0500

    Move Status and StatusOr to google/cloud. (#1810)
    
    We will be using these classes in all APIs, not just Google Cloud
    Storage.

[33mcommit 9d953f3e5454f9cae66683bd58d4fe4b5e6b5568[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 8 20:06:23 2019 -0500

    Implement Client::ListObjects with StatusOr (#1799)
    
    Note that `ListObjects` itself does not return a `StatusOr`, it returns
    a ListObjectReader which is always a valid result, even if reading
    fails. The change is to actually return `StatusOr<T>` from `operator*()`.
    
    The build for Ubuntu:18.04 breaks with a optional<StatusOr<T>>. It
    probably should be fixed, we must be doing something too complicated. On
    the other hand, we do not need an `optional<StatusOr<T>>`, a "plain"
    `StatusOr<T>` is flexible enough to store a `T` or a "you tried to read
    an invalid iterator", so do that instead.

[33mcommit 98680bbc070e249f9447bb780ca4b221383ad7fa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 8 19:21:12 2019 -0500

    Change *Notification() functions to return StatusOr. (#1792)
    
    In this change all the `storage::Client::*Notification()` functions are
    changed to return `StatusOr<>`. This change also introduces new helpers
    to write unit tests for functions that return `StatusOr<>` instead of
    throwing exceptions.
    
    The integration tests are changed to check the if the returned
    `StatusOr<>` is `.ok()`, and then we use the `operator*()` and
    `operator->()` to use the `StatusOr<T>` as a pointer to `T`.
    
    This fixes #1634, #1635, #1636, and #1637.

[33mcommit 5b516336c51210018792e27f8c5a57b686b121f1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 8 15:58:25 2019 -0500

    Do not fill up the log with codecov.io noise. (#1812)

[33mcommit de197c7133933010a17a6979746d8260f0873b5e[m
Author: Greg Miller <9447643+devjgm@users.noreply.github.com>
Date:   Tue Jan 8 09:23:31 2019 -0500

    Added error-reporting ADR (#1804)
    
    This error-reporting ARD states that we will switch to using StatusOr<T> for all error reporting instead of throwing exceptions. This has been discussed offline; this ARD is an attempt to capture the decision.

[33mcommit e296696e3a1fda868180734c7a63725cf2ce40ce[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 7 14:53:24 2019 -0500

    Initialize pointer value to something. (#1803)
    
    Coverity Scan is unhappy with a constructor that does not initialize a
    field. This is a false positive, the pointer is never written to, and it
    is initialized (in Set()) before it is used. Seems worthwhile to clean
    this up though.

[33mcommit e9f66dbd72cec265ccf209c942f4e0ec36365631[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 7 10:56:14 2019 -0500

    Tweak coverity scan fixes. (#1798)
    
    Evidently Coverity Scan does not understand ASSERT_NE() and believed
    that `close(fd)` was being called twice. I think with the new flow we
    both get a test failure, make the compilers happy, and make Coverity
    Scan happy.

[33mcommit 58896c45921b62bc5a91bf342384c532c235d433[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 7 10:55:48 2019 -0500

    Fix error handling in curl_multi_wait(). (#1796)
    
    This was a defect reported by Coverity Scan. Apparently I forgot how
    `return` works, and was still thinking "Call this function which will
    throw an exception on error." Sigh. In any case, we were lucky (or
    unlucky) in that the bug is just a performance issue: the loop would
    spin instead of sleeping between calls to curl_multi_wait().

[33mcommit 58dace1d825839073e1e610af4ef1710d0e7b4d3[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Jan 7 21:25:24 2019 +0530

    Removal of google::protobuf::Empty as a Response from Async APIs. (#1795)

[33mcommit 40a7a282b2ea4b49f972a47fb7a6381e69b4e2be[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 7 09:57:27 2019 -0500

    Fix dead code warning in Coverity Scan. (#1794)
    
    Coverity Scan warns about compile-time constants used in flow control,
    sensible warning in most cases, but here the "constant" is not constant
    across compilers (`if constexpr` would be nice). The recommended way to
    suppress this warning is to declare the variable constant.

[33mcommit 0f7228ceb2620cc5a70a5f8695b1b4bf508b1277[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 7 08:46:11 2019 -0500

    Workaround Travis CI build time problems. (#1801)
    
    Until we have a better solution in place this enables us to bootstrap
    the build cache. Basically when starting with a completely empty cache
    the build will stop halfway, which will partially populate the cache and
    make the next build go faster.
    
    The majority of this change is to ensure that "halfway" captures enough
    things to make for a substantial initial cache.
    
    The algorithm to decide if the cache is "cold" is kind of naive, we
    really test for "the cache has 0 bytes". Obviously this will not work
    sometimes, for example, if the cache is full of garbage. In that case we
    can manually clear the cache in Travis and start over.
    
    I created #1800 to track a real solution, because these hacks are not
    awesome.

[33mcommit ca5d9bdefe111ec0eb1531dd5aec85502e3f3d3c[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Sun Jan 6 15:35:53 2019 -0500

    Create a build with libc++ on Linux  (#1771)

[33mcommit 3e3b3bd606fb2476146867bf8c026d51e4e8a366[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jan 6 11:47:08 2019 -0500

    Automatically upload Coverity Scan results [skip ci]. (#1793)
    
    If COVERITY_SCAN_TOKEN is defined it automatically prepares and uploads
    the result tarball to Coverity Scan for analysis. I am not sure we will
    ever use this in Travis, the build takes ~45 minutes on my laptop with 8
    cores and a local SSD. Travis has a limit of 50 minutes and only 2
    cores, it will (almost certainly) run out of time before finishing. But
    having a single command to run locally is still useful.

[33mcommit 64872610bd28fbe8c60f932f4151781729924fa3[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sun Jan 6 21:33:03 2019 +0530

    Implement noex::Table::AsyncReadRow to read single row asynchronously (#1742)
    
    This fixes #1277.

[33mcommit 16621960d7314aa6acf52efa41b605fec76738aa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jan 6 09:06:18 2019 -0500

    A better recommendation for a local build. (#1789)

[33mcommit f1b4cbbf323dc37f1be82129993945170ff4dc23[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jan 6 08:22:37 2019 -0500

    Load balance builds (#1791)
    
    The clang-tidy build is slower than the rest, and it is hitting the 50
    minute limit on Travis. Move some workload (style checking, Doxygen
    generation) to another build, so we have more time to tidy-ing.
    
    The build script could not run GENERATE_DOCS=yes with BUILD_TESTS=no,
    fixed.

[33mcommit d307506ade685069f900c253f4357664dfe8f58f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jan 5 01:05:26 2019 -0500

    A script to compile with Coverity Scan. (#1775)
    
    Coverity Scan is a static analysis tool.

[33mcommit 6bb8764c973d8e55a053dfa8b347334d874a1756[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jan 5 01:05:02 2019 -0500

    Separate Docker build output directories. (#1774)
    
    This makes it easier to run multiple different Docker-based builds in a
    developer workstation. Each build gets a different directory output
    directory based on the settings for the build. Before this change one
    had to clear the output directory for (say) a gcc build before building
    with clang for the same distribution.
    
    I also removed the `cached-` prefix from the image names, that made
    sense at some point when we actually tried to cache the images, but no
    longer does.

[33mcommit e6ce1cd3bc4a032844375b63f0ee9f94c6ab5451[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jan 5 00:11:23 2019 -0500

    Silence Coverity Scan error. (#1787)
    
    This is a false positive but easier to silence than workaround.

[33mcommit 128c9496ab1cc7ef18c298a5071ebc8e8550e2bd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jan 5 00:11:10 2019 -0500

    Check the return value from mkfifo(). (#1786)
    
    Another couple of bugs reported by Coverity Scan.

[33mcommit 36757e7a5dbd77cfe9b2d089c6e1e2cf42af0a85[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jan 5 00:10:56 2019 -0500

    Correctly check std::string::find result. (#1785)
    
    Another little testing bug found by Coverity Scan.

[33mcommit 0e76e2e65466d4eaaa0c770952c3ce9522675ecc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jan 5 00:10:39 2019 -0500

    Do not ignore failures in std::remove(). (#1784)
    
    Another small bug reported by Coverity Scan. It only affects this test,
    but better to clean these up.

[33mcommit 84850bb068b04f831d816f12abbc10eac4ed7242[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 4 19:14:17 2019 -0500

    Initialize member variable. (#1782)
    
    This was also reported by Coverity Scan. In this case we are using an
    atomic bool to force the right semantics around synchronization, though
    we are not interested in the actual value. It is easier to fix the
    problem than to explain to Coverity Scan why it is Okay to have an
    unitialized variable here.

[33mcommit 2a15f8b229d4fd6ae97b3d579ef10783a98687b7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 4 19:13:34 2019 -0500

    Fix unitialized member variable. (#1781)
    
    This was a defect reported by Coverity Scan, in practice one of the
    fried classes initialized it, but I think it is best to clean up these
    errors.

[33mcommit e39c7d6a6e3abe0d9597fdd344e799f8f68f6c9d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 4 19:13:13 2019 -0500

    Check pointer for nullptr before first use. (#1779)
    
    This is another defect reported by Coverity Scan. Also in a test, but
    better to clean these up.

[33mcommit 682519607010d1a5f4cee451d90efe090fd6bea1[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Fri Jan 4 19:12:43 2019 -0500

    Fixed typo: syncing [skip ci] (#1783)
    
    Identified after an earlier PR was merged:
    https://github.com/GoogleCloudPlatform/google-cloud-cpp/pull/1773#pullrequestreview-189534577

[33mcommit 38fc08ef8d2aebdd00ba74bf21c6dd52a4ff9ec2[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Fri Jan 4 16:46:07 2019 -0500

    Pass chosen compilers to external projects (#1780)

[33mcommit a6c5b85718409e0072d7c55a7f01d87fcfdc9d14[m
Author: Greg Miller <github@mllr.cc>
Date:   Fri Jan 4 16:26:33 2019 -0500

    Clarify contributing instructions (#1773)
    
    Clarified the instructions in the "More information on forks and pull requests" section of CONTRIBUTING.md.

[33mcommit 62ae9d44aa7f325a524b0e1fb0c17175f77e758a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 4 15:02:24 2019 -0500

    Do not ignore std::remove() return error. (#1778)
    
    This fixes a set of error reported by Coverity Scan. While this is
    test code, it is better to clean these up.

[33mcommit a3d222e6843d037ac6a1b2cee405cf4e9eee3d52[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 4 15:02:08 2019 -0500

    Fix resource leak in test. (#1777)
    
    This is another error reported by Coverity Scan, minor, but better to
    clean these up.

[33mcommit 794e200afac904d8214c5129782e7ef0833f9840[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 4 15:01:43 2019 -0500

    Fixed unitialized member variable. (#1776)
    
    While this is "only a test", and the variable is not used, it is cleaner
    to just do the right thing. This fixes one of the Coverity Scan issues.

[33mcommit 78a71638a3434b241480d5c9d214c85f5dc5d73c[m
Author: rsimion <45881037+rsimion@users.noreply.github.com>
Date:   Fri Jan 4 14:59:58 2019 -0500

    Bigtable: Implementation of AsyncListInstances function (#1767)
    
    Implement bigtable::InstanceAdmin::AsyncListInstances. This fixes #1523.

[33mcommit d641c5e461a1b7625af82f3f86fed61bf4b35344[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Fri Jan 4 12:15:29 2019 -0500

    Fix some targets missing dependency on common_options (#1772)

[33mcommit 6ce115d11530dffed28ad5e9a1ea90bf8b3d91ac[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 4 10:53:54 2019 -0500

    Refactor definition of variables. (#1764)
    
    Too many scripts defined `IMAGE` and `BUILD_OUTPUT`, refactor to a
    common place so it is easier to change in the future.

[33mcommit 1cdf9449678e8b0d9f792f5075369ddf6827b435[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Fri Jan 4 08:46:00 2019 -0500

    Fix parameter order in call to AsyncCheckAndMutateRow (#1770)

[33mcommit 82a897f3021a0a595e996385ddabb4a27ae0d117[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 3 22:25:37 2019 -0500

    Move CompletionQueue to first argument in Async*(). (#1763)
    
    As described in #1543, it seems better to move the arguments for a
    `Async*()` function to be
    
    ```C++
    AsyncBlah(CompletionQueue& cq, Functor&& callback, Foo)
    ```
    
    This fixes #1543.

[33mcommit 6291f9460cdf02f219295c59788b1838dbd4e4b0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 3 22:25:06 2019 -0500

    Use the right protoc compiler. (#1766)
    
    The rules in CompileProtos.cmake were picking up whatever protoc binary
    happened to be in the path. This is "Not Right"[tm], because the version
    in the path may not be compatible with the version of the protobuf
    libraries found by CMake.
    
    With this change we use the `protobuf::protoc` target. We define this
    target for external projects, and for versions of FindProtobuf that do
    not provide the target.
    
    This fixes #1762.

[33mcommit cd1cc913b596c090c4fce234acd38b5c66d40bd4[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Thu Jan 3 14:44:26 2019 -0500

    Fix ambiguous error when compiling with libc++ (#1765)

[33mcommit bf593f73f4839c90110fc083c2fd82ce48acbbec[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Jan 3 20:43:13 2019 +0100

    Idempotency policies for conditional mutations. (#1716)
    
    * Idempotency policies for conditional mutations.
    
    This fixes #1390.
    
    Conditional mutations are sometimes idempotent, e.g. setting a value in
    one column if another satisfies a condition. This PR adds an overridable
    member function to IdempotentMutationPolicy to allow usres to define
    custom behavior.
    
    The general solution needs much more design a work, hence #1715 was
    created to address it.
    
    * Apply review comment.

[33mcommit 9241b48b72c7544c3a77ed79e552bf7d6a086743[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 3 09:12:46 2019 -0500

    Bump version numbers in development branch. (#1760)
    
    Just created a release branch (v0.5.x), this PR increases the version
    numbers in the development branch.
    
    Also fixes a bug in the release instructions.

[33mcommit f7f01fef6e4d79a3208c5f808418313f670e305f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 2 21:25:43 2019 -0500

    Update release notes [skip ci]. (#1759)

[33mcommit 2a3a16a342c88ce2189f931d022fb6bc39ef840d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 2 21:25:22 2019 -0500

    Capture compilation flag telemetry. (#1758)
    
    This would be useful in the future when we need to prioritize features /
    compiler support, etc. It captures the compiler name and version, as
    well as the `-fexceptions` settings in the user-agent string.
    
    Also refactored the two places in Bigtable where we built a user-agent
    string.

[33mcommit 21dd66a14f480165a73adbed3d9c9c5d6d0afe08[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 2 16:28:52 2019 -0500

    Avoid throwing exceptions in HashValidator. (#1753)
    
    In general, we prefer not to throw exceptions to signal an hash mismatch
    error. This makes the code easier to use if the application has disabled
    exceptions.
    
    There is one case where we must throw an exception though: if an error is
    detected in the ObjectReadStreambuf the only mechanism to signal error is
    exceptions (these classes must obey the protocol defined by the standard
    library, and the library is designed with exceptions in mind). When
    exceptions are disabled and we detect such errors we set the `status()`,
    and the application is expected to check it. This is not ideal, but the
    best that can be done in that case.

[33mcommit 1dc9be1ea0ef940055f9f35485d30e2d45d9a331[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 2 15:13:53 2019 -0500

    Support non-standard location for protobuf. (#1757)
    
    When the protobuf library is installed in a non-standard location (i.e.
    not in `/usr/*`) we need additional options for the protobuf compiler.

[33mcommit 90a640a1de3f5c7f0e7fd5b968248c605fb2f3bb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 2 14:56:38 2019 -0500

    Simplify the TEST_INSTALL builds. (#1751)
    
    Instead of installing all the dependencies during the build script,
    install them in the build docker image. This change has almost no effect
    on the CI builds, but it makes running those builds locally, in a
    developer workstation, far easier (and faster).

[33mcommit 65c16e45cc94877f0e4d5af2af15d94d6898b80c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 2 14:55:59 2019 -0500

    Remove unused header file. (#1756)
    
    This fixes #1755.

[33mcommit 2bc48d698777e657e092fd867e98bfed7d0e0697[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 1 22:43:45 2019 -0500

    Non throwing object write stream (#1749)
    
    Unless the application explicitly requests exceptions by setting the
    exception mask. By default `std::ios_base::badbit` is set when an error
    is detected, and the ObjectWriteStream saves the status with a more
    detailed error message.
    
    This change will reduce code coverage because many errors that used to
    be propagated as exceptions now require an extra if(), but we do not
    have test infrastructure to produce these error conditions on demand.
    
    Wrote a test to verify that resumable upload errors are reported
    correctly. Fixed the testbench to properly validate preconditions on a
    resumable upload. Then found a bug in how we handle error status for
    resumable upload failures.

[33mcommit 196e435e53acd6b6b862b45fb51cd5c0d6cd3c47[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 1 11:50:11 2019 -0500

    Non throwing object read stream (#1750)
    
    When possible, use `status()` to report errors in `ObjectReadStream`.
    Unfortunately the standard library assumes that exceptions are enabled,
    and a `std::basic_istreambuf<>` can only report errors by raising
    exceptions. When exceptions are disabled this is, hmmm, difficult, so we
    must rely on the application dutifully checking the `status()` flag.

[33mcommit 37051bfe9a8225fe71407f6b90f691b30bd5af4e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 31 07:47:00 2018 -0500

    Support reading or downloading a GCS object range. (#1748)
    
    With this change applications can choose to download a small portion of
    an object.
    
    This fixes #1732.

[33mcommit 608dd154cf3f028982ed46cf436c1de246990f2c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 28 18:15:56 2018 -0500

    Use non-throwing JSON parser for ObjectMetadata. (#1745)
    
    This is the last PR in the series to use the non-throwing version of
    nl::json::parse(). It fixes #1685.

[33mcommit b53113988da1a6e366245e02666bcc7138954ab7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 28 18:15:34 2018 -0500

    Improve code coverage for CurlClient. (#1744)
    
    I thought the existing tests would cover the libcurl failure cases,
    obviously I was wrong. This reuses the tests for credential failures
    because otherwise we would need to rewrite basically the same tests.

[33mcommit 4c16cb2635f447649859ab9b5d5bdd623eb07b1e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 28 15:47:26 2018 -0500

    Use non-throwing JSON parser for BucketMetadata. (#1741)
    
    This is another PR in the series to use the non-throwing version of
    nl::json::parse(). This is part of the changes for #1685.

[33mcommit eec219e2d34a71ef87fcb53f4d1a3a90065ec660[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 28 15:46:10 2018 -0500

    Improve code coverage for *Acl parsers. (#1743)

[33mcommit 73a7bd7ff803a79f2e383637f69f48418e7a9d9a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 28 07:59:23 2018 -0500

    Use non-throwing JSON parser for ServiceAccount. (#1739)
    
    This is anther PR in the series to use the non-throwing version of
    nl::json::parse(). This is part of the changes to #1685.

[33mcommit f8c2d31f84560e88a0330a58fccf633f5148f2b5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 28 07:59:07 2018 -0500

    Use non-throwing JSON parser for Notifications. (#1738)
    
    Another in the series of PRs to not throw from nl::json::parse(). Part
    of the work for #1685.

[33mcommit 6b7783cb1e49c45c4d50010d240e5e5c13d0e029[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 28 07:58:55 2018 -0500

    Use non-throwing JSON parser. (#1737)
    
    The nlohmann::json parser throws by default. If we ever get an invalid
    JSON string from the server that would crash an application with
    -fno-exceptions. This change uses the non-throwing version of
    nl::json::parse() in the *AccessControl classes, and changes the return
    type to StatusOr<>. This is the first of a series of PRs for #1685.

[33mcommit 448c4a0e512d6744da4110ab3938c8114f160c82[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 27 19:37:23 2018 -0500

    Use StatusOr to signal errors in a HTTP request. (#1733)
    
    This is part of the work to provide a exception-free API to
    google::cloud::storage.
    
    Thanks to @devbww for all the suggested improvements.

[33mcommit c7eb97970b90cb4899667717d8c56110ba328a2f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 27 18:10:45 2018 -0500

    Restore support for GCC-4.8. (#1731)
    
    With the latest version of nlohmann::json we can support GCC-4.8 again.
    
    This fixes #798.

[33mcommit 2088da0513eff7e7806d5d3189078d42bf63bfc0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 27 17:10:54 2018 -0500

    StatusOr<T> when there is no default constructor. (#1725)
    
    When `T` lacks a default constructor we need to use some (more or less
    standard) tricks to implement the class. I modeled these changes after
    optional<T>, where the expectation is that move-assignments and
    move-constructors minimize the number of temporaries.
    
    Thanks to @devbww for the detailed review and all the useful suggestions.

[33mcommit c17e1a152453ff9318ce6b49633c7e067e12ed47[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 27 13:35:48 2018 -0500

    Remove storage::noex::Client. (#1730)
    
    I think we agree that this is not the path forward, reverting the
    changes.

[33mcommit 819da317baf87612896b9ffa5f7117923f5ac3cd[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Thu Dec 27 12:05:21 2018 -0500

    Don't use hard-coded zones in examples (#1728)
    
    This fixes #1726.

[33mcommit 2c63872d2932a5df70c998358f16890ac4c3c575[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 27 08:18:46 2018 -0500

    Use StatusOr<T> to return errors. (#1723)
    
    Most of the code was using std::pair<Status, T>, but now that we have a
    StatusOr template class this is a much better representation. There is
    no impact to the public API in this PR, as all functions affected are
    either in storage::internal, or they were private functions.

[33mcommit 776bfeed8160b0012ff54c15f1dde976da156ed9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 26 22:13:11 2018 -0500

    Upgrade JSON library to 3.4.0. (#1727)
    
    In addition to the usual bug fixes this version of the library should
    support gcc-4.8. That would simplify some of the instructions for CentOS
    7 and Ubuntu 14.04.

[33mcommit 2ac3708f46ff034501080a78cf1fffec62e8dca7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 26 19:59:08 2018 -0500

    Prototype nothrow overloads (#1713)
    
    Move the decision to throw or not to `storage::Client` or
    `storage::noex::Client`. This makes it possible to chose the error
    reporting approach on a per-call basis.
    
    Introduce a CreateNotification() and ListNotifications() overloads
    that return StatusOr<T> to signal errors. Implement the existing
    overloads in terms of the new function.

[33mcommit 6cf23fd555d40c66e3fb9271fcf872eef13678d3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 26 10:52:00 2018 -0500

    For external builds disable ldap. (#1721)
    
    libcurl automatically discovers available libraries to support
    additional protocols, such as LDAP, or SSH. That is hard to use with
    ExternalProject_Add() because it requires to maintain the list of
    indirect dependencies when using static libraries. With shared objects
    it is not a problem (the .so loads anything else it needs).
    
    With this change we disable all protocols that are not interesting in
    libcurl. For applications that want to build with a richer libcurl
    library they can simply set `GOOGLE_CLOUD_CPP_CURL_PROVIDER` to
    `package`.

[33mcommit b64cc48f87bd6bbdb6543f9a635b0fa714910103[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed Dec 26 09:46:58 2018 +0530

    Implement AsyncGetInstance and AsyncGetCluster (#1724)

[33mcommit f341ff00fd02bb5bbe766b5b1dbb5c81d7147100[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Dec 24 20:54:22 2018 +0530

    implementation of AsyncDeleteTable (#1722)

[33mcommit ed129e4c955e99d4dacb822503d95e374605c438[m
Author: akater320 <38007695+akater320@users.noreply.github.com>
Date:   Fri Dec 21 14:44:12 2018 -0500

    Update README.md (#1720)
    
    Fixed typo.

[33mcommit 4dc88850dd0287659f7a9934532ad22d3e6d46cb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 21 13:40:26 2018 -0500

    Document new build script options [skip ci]. (#1712)
    
    I forgot to document the options here in the last couple of changes.

[33mcommit 49fc0ac4fac7444ec7aef75fdfefeac59d4f3e5f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 21 10:42:33 2018 -0500

    Fix build breakage with bazel 0.21. (#1717)
    
    Bazel release 0.21 breaks protobuf, add the backwards compatibility
    flag as a quick fix because I cannot figure out (quickly) how to
    pin the Bazel version to 0.20 or how to fix protobuf. Both would be
    "better" solutions, of course.

[33mcommit 50555a1f96346c4b4f38b1d471da22f92e115ba1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 20 16:07:51 2018 -0500

    Improve the onboarding instructions. [skip ci] (#1709)

[33mcommit 2a22a9265dc888cbddcfd61087e1fbfebbfaf85f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 20 09:04:36 2018 -0500

    Display the build status for Kokoro+macOS. [skip ci] (#1711)

[33mcommit 755e7131813a93a5bf3fcf456b649683b8b3c5c2[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Thu Dec 20 00:12:14 2018 -0500

    s/payload/response/ for HttpResponse objects in CurlClient. (#1710)
    
    * curl_client.cc: s/payload/response/ where we are getting an HTTP response
    
    Fixes #1583

[33mcommit f44142ad2bbbd7b555e7f20e52e2fb60ee81060b[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Thu Dec 20 10:40:40 2018 +0530

    Implement table asyncreadrows (#1587)
    
    * WIP readrows with compilation error
    
    * WIP readrows with compilation error
    
    * WIP for AsyncReadRows. (#1218)
    
    With this change we have the integration test case for AsyncReadRows.
    
    * WIP for AsyncReadRows. (#1218)
    
    With this change we have the integration test case for AsyncReadRows.
    
    * WIP implementation of noex::AsyncReadRows (#1218)
    AsyncRowReader can now handle multiple rows coming in as a single
    `ReadRowResponse`
    
    * WIP implementation of noex::AsyncReadRows (#1218)
    AsyncRowReader can now handle multiple rows coming in as a single
    `ReadRowResponse`
    
    * Unit test cases for async_row_reader
    
    * removed clang error 'AsyncReadRows is a protected member of google::cloud::bigtable::v0::DataClient', it was due to incoorect namespace.
    
    * removing nits
    
    * removing nits
    
    * additional unit test cases for AsyncReadRows retry
    
    * Using RowRanges for retry test case
    
    * removing nits
    
    * removing nits

[33mcommit 1e4ad811121901e3152ad10db7b2366831b90998[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Wed Dec 19 12:09:13 2018 -0500

    Use standard CMake configuration option to disable tests. (#1707)
    
    Fixes #1617.

[33mcommit b3eeb2dd2bbead86f46e98ad97dcb4c1c5a06c14[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 18 18:57:16 2018 -0500

    Implement StatusOr<void>. (#1706)
    
    This is just an specialization for routines that return `void`. One
    could just return `Status` in this case, but generic code is easier to
    write if we have this specialization.

[33mcommit 3912f38ef7044bda34da35038fd5fc4f54e73403[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 18 17:02:43 2018 -0500

    Define well-known status codes for storage::Status. (#1704)
    
    These are not used yet, but will come handy when we need to return
    specific errors from noex::Client().

[33mcommit b7890a8c82623cdbd9ee50b94f6adc0d87eeb287[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 18 17:02:10 2018 -0500

    Always use the NoexPolicy in the noex::Client. (#1703)
    
    Now that the skeleton noex::Client exists, and the RetryClient has a
    policy to disable exceptions go and use the policy.

[33mcommit d06f207df2fbba31671cd3d20e469015d5d37c84[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 18 14:50:32 2018 -0500

    Implement StatusOr<T>. (#1701)
    
    This is a very naive implementation, but good enough to start writing
    the `-fno-exceptions` case. If you are interested, I looked at the
    similar class in protobuf to figure out what was the interface.

[33mcommit 19f762a0bb8208c30c7579f440a6f54eaa88deef[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 18 11:33:05 2018 -0500

    Fix macOS+Bazel build on Kokoro. (#1702)
    
    For some reason the version of Bazel installed on macOS (0.11 when
    I checked, but others are reported in the documentation) does not
    support the `url` attribute in the `http_archive` rule. All versions
    seem to support `urls`, so use that instead. That is not enough
    though, because gRPC still uses the `url` attribute.
    
    I have sent a PR to the gRPC folks, and filed a bug to update the
    default version of Bazel on Kokoro. Meanwhile, the script manually
    updates the Bazel version on each build.
    
    To debug this I removed a lot of unused stuff in the build script, I
    like it better as a smaller script so I left those changes too.

[33mcommit c1bf85cdd690a4a66ccd54145237547779b7e301[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 17 22:48:21 2018 -0500

    Implement an exception to wrap storage::Status. (#1690)
    
    This will be used by `StatusOr<T>::value()` when the value is not set.

[33mcommit e4b73f8d71747640b8cd2440a1cc59f77dabb1ec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 17 22:45:08 2018 -0500

    Add no exceptions policy to internal::RetryClient. (#1698)
    
    internal::RetryClient can be configured to not raise exceptions by
    setting a policy. The intention is to use this policy in noex::Client
    for now, but it should be removed when storage::Client is refactored
    over noex::Clien (#1694).
    
    This fixes #1687.

[33mcommit a65e75696748649397880a813080592bd4bc8bef[m
Author: Matt Houglum <houglum@google.com>
Date:   Mon Dec 17 10:53:45 2018 -0800

    Improves Credentials-related docs. (#1696)
    
    I tried running over the docs as if I had no knowledge about the
    library and changed the docstrings that weren't clear.  I also added
    Doxygen autolink escaping to words that were being autolinked to
    classes/functions by mistake (e.g. "Credentials" -> "%Credentials").

[33mcommit c9719482e3c5748ec7265a56bb2d7da33fc49ff2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 17 13:51:26 2018 -0500

    Allow generation of dependency graphs with CMake. (#1692)
    
    Sometimes it is good to have a dependency graph, either to be able to
    explain things, or to debug build problems. CMake can generate them for
    us (with the `--graphviz=...` option), but it produces better results
    when executed in the CI builds with `TEST_INSTALL=yes`. Add an
    environment variable to generate the graphs, I do not think we will use
    it much, just from time to time.

[33mcommit 8c1b4cf4a9591b6fc4d5169ebfb2dc236d30044f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 17 13:50:59 2018 -0500

    Add scripts for a (future) Kokoro+macOS build. (#1691)
    
    Running on Kokoro gives us more bandwidth (Travis has limited macOS
    build slots). This build uses Bazel, which was a hole in our build
    matrix coverage. This PR only adds the scripts and configuration files,
    a separate change inside Google will enable the build, this needs to go
    first so the build does not immediately break due to missing scripts.

[33mcommit c9a2f7b9682c8f459efcaa4417fb23bdb27cac75[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 17 12:25:39 2018 -0500

    Implement a skeleton noex::Client. (#1695)
    
    This fixes #1683. There is a lot of duplicate code, that will be fixed
    in a future PR when we refactor `storage::Client` (see #1694).

[33mcommit 96948890d2f29beca576e3f15aa22252d7a59318[m
Author: Matt Houglum <houglum@google.com>
Date:   Sun Dec 16 18:47:19 2018 -0800

    Factors out common credential refresh functionality (#1630)

[33mcommit e353bd07f2c971dec3b74b7a50ae07e273184a08[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Dec 15 14:42:15 2018 -0500

    Do not use native.http_archive() rule. (#1689)
    
    Bazel 0.20 (maybe earlier) removed support for native.http_archive and
    native.http_file(). One has to explicitly download the Skylark files
    now. As Bazel gets updated more or less automatically, the builds
    starting breaking.
    
    Last night gRPC released 1.17.2 which also removed their usage of
    native.http_archive(), so we need to upgrade gRPC at the same time.
    
    Because the new http_archive() does not support (or need) workspace
    files we do not need to define one to build the googleapis protos.
    
    Testing these changes was painful, as I had to manually remove the Bazel
    cache (in `$HOME/.cache/bazel/*`) to reproduce some of the problems
    locally.

[33mcommit f1f7decaf0cafdcce5d5b9c2aac8eae11ed661d6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 14 15:54:22 2018 -0500

    Add missing compiler options. (#1633)
    
    We use an interface library to set options across all targets by just
    "linking" the library. This is better than manually setting the options
    on each target, but only works if you actually do link the library. I
    missed that in a few tests and examples.

[33mcommit c680ad848ea6ecd5015db81fc09120e1619ade8b[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Sat Dec 15 02:15:45 2018 +0530

    Move ClusterList from bigtable/internal to bigtable/ (#1632)
    
    Fixes #1573.

[33mcommit 94926a52f5462728f094c499d7ed588317c7e5ec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 14 14:39:17 2018 -0500

    Implement support for bucket-only policies. (#1614)
    
    This adds support for the bucket-only policies in GCS buckets. The
    feature is in EAP / Alpha, so still subject to change, but we want to
    have it available so we can test early.

[33mcommit 24786815ec721ad880497252ef809191061b2a87[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 14 11:45:24 2018 -0500

    Fix formatting for comments. (#1631)

[33mcommit dc235feac13a506b75d8b689614941e7a15dd950[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Thu Dec 13 23:35:56 2018 -0500

    Fix comment wording for PR #1628. [skip ci] (#1629)

[33mcommit a544b394a97178b35dbc5b6250eb1ce705708ee9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 13 22:04:29 2018 -0500

    In GCP_LOG() the level should be concatenated without expansion. (#1628)
    
    This fixes #1623. On macOS certain system headers use DEBUG as a
    macro to detect, well, if the code is being built for debugging,
    and Bazel obliges (as it should) by defining the macro to 1. If
    we expand the macro before concatenation then GCP_LOG(DEBUG) has
    a GCP_LS_1 in its expansion, while we want GCP_LS_DEBUG.
    
    See this for additional background:
    
    https://github.com/bazelbuild/bazel/issues/3513

[33mcommit 8c99fe6761f3f7f68e6e6ec1475deece89c2f893[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 13 22:04:10 2018 -0500

    Enable bugprone-* clang-tidy checks. (#1627)
    
    Fixed the code and turn on the warnings.

[33mcommit af51f18b30cd793fdfcdfa5b4959c5a79da23ea9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 13 17:46:17 2018 -0500

    Make .clang-tidy file more readable. (#1626)

[33mcommit 04f78f17260107e12a3e9e1b96afc87e3b4157d9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 13 17:28:26 2018 -0500

    Use different PRNG sequences for each request. (#1624)
    
    This fixes #1483. The backoff policy reseeds the PRNG on the first call
    to OnCompletion(). Because most operations succeed on the first request,
    the OnCompletion() function is never called, and this initialization
    does not cost us much. And when the operations do fail, and
    OnCompletion() is called, at least each thread can continue without
    locking (though I am sure there are locks in gRPC and/or libcurl, but
    no need to add more).

[33mcommit d6ca03de3b3e0a716a5111b4227b3ce17673a01b[m
Author: Greg Miller <github@mllr.cc>
Date:   Thu Dec 13 12:32:33 2018 -0500

    Added the ColumnName() filter (#1625)

[33mcommit 92bce3936bbb6c784648fac9c92afe753d79eb70[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 13 12:32:21 2018 -0500

    Require rvalue-ref for as_proto_move(). (#1618)
    
    The as_proto_move() member functions are destructive, the steal the
    contents of the wrapper class. This change limits their use to
    rvalue references, so the developer (this is mostly us) notices that
    they are destroying the thing (and sometimes get a nice warning).
    
    This is a breaking change, it modifies the public API in a minor way,
    but does break existing code. It also breaks the ABI.

[33mcommit ee6a78637918fcaba142d96405d99fac4bd2597c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 13 12:32:01 2018 -0500

    Enable misc-* clang-tidy warnings. (#1613)
    
    Fixed the code that was in violation, and turned on the warnings. Recall
    that we use warnings-as-errors for the clang-tidy warnings, so the
    builds will break if you trigger these warnings in the future.

[33mcommit a22378db0a8ab3b1098c504fa81f01e613af737c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 12 23:31:51 2018 -0500

    Remove unused packages in build images. (#1622)

[33mcommit 882a7272720e67bc7b1c2711aef93b69740b5aab[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 12 18:47:08 2018 -0500

    Include Copyright notices in the .bzl file. (#1621)
    
    Per @mbrukman we want to do this for every committed file.
    
    Because the copyright year is supposed to be the year when the file is
    created, the CMake functions that generate these files take an optional
    YEAR parameter.  If set, that is the copyright year in the generated
    file. Right now the default is 2018 because that is when all the current
    files were generated. We can change this in the future.

[33mcommit 2763ad5664b38039312fd19acf5edca84cf30ca5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 12 18:46:17 2018 -0500

    Update to gRPC-1.17.0 (#1620)

[33mcommit e0f339c2ad393e873630c3a2eed4a9058d0f99bf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 12 10:46:37 2018 -0500

    Make generated .bzl files pass the Skylark linter. (#1616)
    
    Skylark has a linter:
    
    https://docs.bazel.build/versions/master/skylark/skylint.html
    
    and our generated .bzl files were not passing. That is sad because it
    makes importing the code harder.  Since these are generated files I did
    not change the build scripts to enforce these rules, hopefully that is
    not proven unwise.

[33mcommit c7fc8d30da6a98b0094a71cf3c1c89d615676583[m
Author: Matt Houglum <houglum@google.com>
Date:   Wed Dec 12 05:27:14 2018 -0800

    Add credentials section to Client class docs. (#1619)

[33mcommit 7de39aa3b3a9b3e5a710c9dd17d4637a9ae06c32[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 11 22:55:23 2018 -0500

    Fix typo in Auth2.0 link. (#1615)

[33mcommit 0d2594e1efb137ef3fb8221fadc60e9af23538b1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 11 21:00:53 2018 -0500

    Implement query parameters for signed urls. (#1608)
    
    Signed URLs can have any of the query parameters supported by the XML
    API. This PR introduces a new option and helper functions to set these
    query parameters (properly URL-escaped if needed).
    
    This fixes #1588.

[33mcommit 2236bcec7f5c09215b2be299305030883cc8c8e8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 10 17:56:00 2018 -0500

    Rename CurlStreambuf to CurlWriteStreambuf. (#1611)
    
    This was really only for writing, the counterpart to
    `ObjectReadStreambuf`, and derives from `ObjectWriteStreambuf`. In other
    words, the naming was all wrong.
    
    This is a class in `storage::internal` so it does not break the (public)
    API, but technically it breaks the API and ABIs.

[33mcommit 8a231892b4575e4a383ee442e3554e36954c796c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 10 17:33:22 2018 -0500

    URL-escape the object names. (#1605)
    
    The object names are not necessarily URL safe, so we need to URL-escape
    them.  Also noticed that the entity names may not be
    (foo+bar@example.com is a valid email address). I did not URL-escape the
    bucket names in this PR because I am not sure we should, they are
    supposed to be URL safe, if the application provides an invalid bucket
    name this falls under the "do-not-duplicate-server-side-validation" ADR.
    
    This fixes #1590.

[33mcommit 4c4fddcf7e37305608b79edbf956dcfae1f4efee[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Dec 10 19:47:21 2018 +0530

    Implement noex::InstanceAdmin::ListAppProfiles (#1609)
    
    Fixes #1272.

[33mcommit 0a86aeff17e01893505163b7b5150da6d5f5b5c4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 10 08:20:57 2018 -0500

    Simplify CMake configuration. (#1606)
    
    This is part of the work to simplify our CMake files. It removes the special cases for vcpkg.
    
    See #1248 for motivations and such. This fixes #1300.

[33mcommit 81d4551905e5baa7e132d51a810601db11794a7c[m
Author: remyabel <41764622+remyabel@users.noreply.github.com>
Date:   Sat Dec 8 15:51:54 2018 -0500

    Move bigtable/internal/row_key_sample.h to bigtable/row_key_sample.h (#1607)
    
    * Move bigtable/internal/row_key_sample.h to bigtable/row_key_sample.h

[33mcommit 2340e7a7c20f5a4089eb855937714c7270d58349[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 7 15:44:19 2018 -0500

    WriteObject() uses resumable uploads if requested. (#1597)
    
    With this change the application can select resumable uploads for
    streams created via WriteObject().
    
    * Make ObjectStream::Suspend() rvalue-ref qualified.
    
    Because the function is destructive it should be rvalue-ref qualified.
    That forces applications to say `std::move(foo).Suspend()` and that
    makes it obvious that the `foo` object is unusable. In some cases they
    may even get a nice warning from the IDE or compiler.

[33mcommit 6ab621ba2262b984cbc9261db43951dc251fac5e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 7 15:14:45 2018 -0500

    Fix build with Xcode 7.3. (#1603)
    
    This fixes #1593. It worksaround compiler bugs in Xcode 7.x.  I have
    filed a separate bug (#1602) to decide if we want to drop support for
    the compiler in the future.

[33mcommit 12393233d244831fca2b5db48c32b538f21f33a9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 7 12:05:02 2018 -0500

    Restore macOS build. (#1601)
    
    Accidentally removed this in 5be86a48e5b16c4b7956a37a369026bedb9543fd when we disabled the static analysis builds, oops.
    
    Some of the changes may seem strange, but are basically catch up work to
    restore the macOS build to working order:
    
    * When using a static CURL::CURL library we need to add its
      dependencies too. These vary depending on the platform, so they
      require a few if() statements. Better to move those to the
      `cmake/IncludeCurl.cmake` file that leave them in a random CMake
      file.
    
    * Compiling libcurl as a external on macOS seems hard: there are
      dependencies on the LDAP libraries, default to find_package()
      for now. Created #1600 to track that.
    
    * LibreSSL, which is common for macOS / BSD, reports itself as OpenSSL
      2.0, but behaves like OpenSSL 1.0.2, so we need some different checks
      than just the OpenSSL version to figure out if locking callbacks are needed.
      Sigh...

[33mcommit cf20a0b3ad18944ab9986a9b0e4ff53a46822af4[m
Author: Matt Houglum <houglum@google.com>
Date:   Fri Dec 7 02:34:20 2018 -0800

    Improve documentation for credentials classes. (#1599)
    
    This also refactors some of the functionality in the ServiceAccountCredentials class so that the \see doxygen tags can be more closely applied to the places they're relevant.

[33mcommit 4818f91fac6da5dd7fb00c9a5135a18eb087ecd3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 6 09:24:42 2018 -0500

    UploadFile() can be forced to use resumable uploads. (#1594)
    
    With this change the application developer can decide force the library
    to use resumable uploads in UploadFile(). I added the usual integration
    tests and examples.

[33mcommit ccbfed3e038f1d671af65c7572c6e68de1dd69c4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 6 08:38:42 2018 -0500

    Use external project for CURL and dependencies. (#1592)
    
    This reduces the number of dependencies that need to be pre-installed to
    just OpenSSL. It simplifies the builds, as described in #1248.

[33mcommit 4084be5aa4d45c3b7282ad339be93f204679fdcb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 5 21:24:45 2018 -0500

    Implement function to create signed URL. (#1591)
    
    This implementation creates V2 signed URLs. Thanks to @frankyn and
    @houglum for helping figure out the thing about URL escaping.

[33mcommit 9f970bdea638e5e8636f9b37ebc5f59bc0684c2f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 5 21:23:09 2018 -0500

    Add RawClient function to resume uploads. (#1589)
    
    With this change the RawClient, LoggingClient, and RetryClient classes
    can restore a resumable upload session.

[33mcommit 1ecf3c2538d24cc0fbfeff2bfeb31c7fb556c8d3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 5 15:42:18 2018 -0500

    Improve documentation for all operations. (#1586)
    
    Improve the description of when std::runtime_error is raised.
    Described when the operations are idempotent.
    In the cases where there are multiple examples use a paragraph for each
    one so they are more readable in the generated pages.
    Some stuff was not formatted right because of missing backticks.

[33mcommit 0c254c902907fa49bd89f22aa23e7ef9f3e67fdf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 5 08:27:53 2018 -0500

    Add functions to support signed URLs. (#1582)
    
    With this change the ServiceAccountCredentials class is able to sign a
    blob. The other credential types return an error. In a future PR we will
    create signed URLs by providing the right blobs to this function.

[33mcommit 1bf1ca60eb3ff3a8b9bf9224a556a3276a80da14[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed Dec 5 10:27:40 2018 +0530

    Implement noex::InstanceAdmin::AsyncListInstances (#1572)
    
    This fixes #1262.

[33mcommit ef9af7a2e6e4daa48539c859a225c0fabda459ef[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 4 23:37:47 2018 -0500

    No Generation option in ComposeObject(). (#1585)
    
    The option is not supported by the JSON API, we added it by mistake to
    the library.

[33mcommit e4dcfb5e6f83773a0f5ebd201cbfdff978be2e9f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 4 23:37:17 2018 -0500

    Add option to force resumable uploads. (#1566)
    
    The library automatically selects resumable uploads when it can
    determine that this is the best upload strategy. But sometimes the
    application simply knows that a resumable upload is necessary, in this
    case the application developer should be able to force a resumable
    upload. In addition, setting this option to a non-empty string will be
    used to restore a previously created resumable upload.

[33mcommit 46f88308cb134911757d9c816ab8c4aae7ce5d0b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 4 23:35:47 2018 -0500

    Implement a request to sign urls. (#1575)
    
    Though signing a URL is a local operation, passing options to the Client
    member function is convenient and consistent with the other requests.
    This PR introduces a request to capture all the parameters to a signed
    URL, including the variable number of extension headers.

[33mcommit 33f4d3548e11f7d13c9cc3097c00eb13d370a300[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 4 23:34:53 2018 -0500

    Fix definition of IsIdempotent for DeleteObject. (#1584)
    
    This was the only operation where setting the Generation() parameter
    turned the operation into an idempotent op.  This fixes #1581.

[33mcommit 241518c08bd6c157be974ac910088a60df9ae753[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 4 23:34:38 2018 -0500

    Bump version numbers after creating release branch. (#1579)
    
    The release branch (v0.4.x) is already created, bump the version numbers
    for the libraries that got significant changes (all but firestore in
    this round). Note that the common library (google/cloud/*) got two bumps
    because it should have been updated in the previous round.

[33mcommit 9945ec2dcaf8718dc27857a6114b31fbd3f0f3ab[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 4 17:24:51 2018 -0500

    WriteObject uses resumable uploads. (#1570)
    
    With this PR this is enabled only when the application uses
    WithObjectMetadata.  In this case it is impossible to use simple
    uploads, and really hard to use multipart uploads because the mime
    boundary cannot be safely created for an unknown input.

[33mcommit ab48160ba876177167024e282697e63fdda32102[m
Author: Netty Hernandez <45398907+NettyH@users.noreply.github.com>
Date:   Tue Dec 4 12:45:28 2018 -0500

    Add region tags to bigtable_hello_world (#1544)
    
    For consistency with the example in other languages.
    Separated the filter creation to its own line to add region tags.
    Updated the corresponding entry in bigtable-hello-world.dox

[33mcommit 135af98bbfdad2d22843e5d5c1669745d068e0e0[m[33m ([m[1;33mtag: v0.4.0-pre2[m[33m)[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 4 09:39:54 2018 -0500

    Make ccache bigger for coverage builds. (#1567)
    
    We need a bigger cache for the code coverage build. While most builds
    take 500MiB, the code coverage build takes nearly 1.5GiB.
    
    When I ran this the build time went from ~37m to ~30m, that is a big gain,
    and the coverage build is the longest build so it speeds up the iterations.

[33mcommit 6200f22fe6a3b25d0e2af57d0b6fbf6849219361[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 3 21:43:12 2018 -0500

    Implement examples using non-default policies. (#1577)
    
    Just to show how these are used. Thanks to @frankyn for nudging me to
    create them.

[33mcommit b027835fe12a8a9cf9e91443b74d0f57923960ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 3 20:00:43 2018 -0500

    Implement CurlClient function to resume uploads. (#1571)
    
    To fully support resumable uploads we need to be able to, well, resume
    an upload. This PR adds functions to restore a resumable upload session
    based on the session id. Once created the function queries GCS to
    discover what is the latest received byte. In future PRs we will use
    this to continue an upload after restoring the session.

[33mcommit 1193d4d7d7677ba18572df96423a0eaa07382cd4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 3 17:47:39 2018 -0500

    Update storage release notes. [skip ci] (#1568)

[33mcommit 289fde2fdcc9ec1a41a490859346a659d7497f13[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 3 10:47:56 2018 -0500

    Update Bigtable release notes [skip ci]. (#1569)

[33mcommit f82a8a5820cf586d333a910473a538c7a28c0cb1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 3 08:09:27 2018 -0500

    Add Crypt32.lib to static builds on Windows. (#1574)
    
    The latest vcpkg updates added Crypt32.lib as a dependency to libcurl.
    It should be harmless to add this for older versions, so we simply add
    it always. This fixes the broken builds on Windows.

[33mcommit a2927e7c079431f1fdcce3c837889d27685cf67d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 30 22:20:55 2018 -0500

    A streambuf based on ResumableUploadSession. (#1565)
    
    This will be used to return a ObjectWriteStream based on
    ResumableUploadSession instead of just a plain simple upload.

[33mcommit a13bc54dbab3ac54a0cd5810896a513061e17fba[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 30 15:43:44 2018 -0500

    Fix flaky test. (#1563)
    
    Some of the integration tests for bucket operations were flaky, they
    were all operating on the same bucket, so if another integration build
    was running at the same time they would not work. This fixes those tests
    by creating a bucket (with a random name) for each relevant test.
    
    I also removed a number of pre-conditions in the examples (IfMatchEtag)
    that have no effect.
    
    This fixes #1370.

[33mcommit 9d415829c722b9d6219728325b619f6420b37b04[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 30 15:19:27 2018 -0500

    Use resumable uploads for large files. (#1550)
    
    With this change UploadFile() uses resumable uploads for large files
    (how large is a configuration parameter).

[33mcommit 81fad458d935dda9705ffff24505a343073b731f[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Nov 30 18:08:20 2018 +0100

    Implement AsyncListClusters. (#1555)
    
    It's basically an instantiation of AsyncRetryMultiPage with tests.

[33mcommit a0f27355af654605b321e764a7dd9464c54340a3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 30 10:44:48 2018 -0500

    Add missing header file. (#1560)
    
    We were using `std::unique_ptr<>` without including `<memory>`, that is
    not a good idea. Thanks to @ras0219-msft for reporting this.
    
    Part of the fixes for #1559.

[33mcommit f5a6fe1a6da5f582ca0e1c2114e7d3c48df08821[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 30 09:54:26 2018 -0500

    Do not use constexpr in byte swapping functions. (#1561)
    
    Depending on the platform the byteswapping functions may call other
    functions that are not `constexpr`, I was overeager when declaring them
    so. Thanks to @ras0219-msft for filing the detailed bug report (#1559).

[33mcommit e154fe3793ce5e33cafabe37844593961a9888e5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 29 22:58:13 2018 -0500

    Refactor WriteObject() for simple uploads. (#1549)
    
    We will soon introduce a WriteObjectResumable() to go along with
    WriteObjectXml() and WriteObjectSimpl().

[33mcommit bed20cc9896be5dace29d318d629089ae4a0a6c7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 29 22:57:57 2018 -0500

    Improve code coverage in CurlClient tests. (#1552)

[33mcommit da09833b5e6836694edda68d7196c87f1eacc921[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 29 09:01:59 2018 -0500

    Remove obsolete TODOs. (#1548)
    
    The actual bugs were fixed, we neglected to cleanup the TODOs.

[33mcommit c39663123fff9c338484551f3a4e7500cc279832[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Nov 29 04:25:19 2018 +0100

    Implement AsyncRetryMultiPage. (#1477)
    
    Provides a class to retry requests that accumulate the result of multiple paginated requests, such as
    ListInstances or ListClusters.
    
    Unfortunately, as described in #1475, PollingPolicy's API made me come up with something hacky.
    
    Also, this modifies AsyncPollOp to short-circuit the timer if there is supposed to be no delay between polls.

[33mcommit 3b418b944159cd1121161c702d32a5f189522d3d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 28 22:19:19 2018 -0500

    Implement resumable upload sessions in CurlClient. (#1542)
    
    This is the base implementation of resumable upload sessions, without
    logging or retries. Part of the work for #559.

[33mcommit b91c8fe5d365f9ef0d9a8a7cc06c151af781a990[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 28 21:12:15 2018 -0500

    Remove an empty unit test. (#1546)

[33mcommit 86ccde498987e240024f6e850f3b53eafff383b5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 28 17:57:12 2018 -0500

    Fix std::abort() call. (#1547)
    
    This closes the last TODO related to #327.

[33mcommit 000d97acc3b7677458a9440c14bb8430868441c1[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Nov 28 23:06:31 2018 +0100

    Introduce AsyncLoopOp. (#1539)
    
    `AsyncPollOp` and `AsyncRetryOp` share a non-tirivial amount of code
    with each other. Moreover, a class for fetching responses in pages also
    would (#1477 has shown that reusing `AsyncPollOp` is ugly).
    
    `AsynLoopOp` is exactly what all of them have in common - running
    requests in a loop, potentially sleeping between them and allowing for
    cancellations.
    
    There are no test because `AsyncRetryOp` and `AsyncPollOp` are already
    tested.

[33mcommit 83c2e92d1f37a53701491dbffbc902420465de41[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 28 15:45:49 2018 -0500

    Implement RetryResumableUploadSession. (#1541)
    
    This class decorates another ResumableUploadSession but retries failed
    requests. Unlike the retry loop for regular operations this class class
    ResetSession() after each (transient) failure, to re-synchronize the
    state of the local session.

[33mcommit 2eadd015174dea12b6932d70b21506bc88984658[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 28 15:45:35 2018 -0500

    Implement LoggingResumableUploadSession. (#1540)
    
    This version of ResumableUploadSession decorates another session and
    logs every member function call.

[33mcommit 0bdf6a7224c8e6d39fc67faebead93dc4f23d207[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 28 15:43:19 2018 -0500

    Fix merge / build problems. (#1545)
    
    This was the usual race condition where two PRs built separately but not
    together. Ooops.

[33mcommit ab0d6afc7351844298d0e95b036636e537961efa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 28 09:33:35 2018 -0500

    Implement the UserIp option. (#1530)
    
    This fixes #1026. It implement an option to set the userIp query
    parameter. If the application sets this option to an empty string the
    library attempts to use the last-known IP address as the parameter
    value.

[33mcommit 8267ce90e7dff95355f5bc115cf817e89b53587d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 21:02:11 2018 -0500

    Use WithObjectMedata in RewriteObject. (#1518)
    
    The ObjectMetadata parameter for RewriteObject should be really an
    optional parameter.

[33mcommit 9a9087553ca0060ce5e24e122352d5424f01b677[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 21:01:43 2018 -0500

    Use WithObjectMetadata in ComposeObject(). (#1519)
    
    The ObjectMetadata parameter should be optional for this function.

[33mcommit 4abf15a32c5c53d6587babf0922f77ef2a90c1c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 21:01:07 2018 -0500

    Use WithObjectMetadata in CopyObject(). (#1517)
    
    The Client::CopyObject() function was taking a ObjectMetadata parameter
    that was often empty. It really needs to be an optional parameter.

[33mcommit abb7b07f3a167c44e56d4bab8194d00417e60a45[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 17:46:09 2018 -0500

    Implement curl-based ResumableUploadSession. (#1514)
    
    CurlResumableUploadSession just calls on the CurlClient to perform the
    resumable upload operations. In future PRs we will introduce the
    implementation of the corresponding CurlClient member functions, as well
    as the analogs to LoggingClient (LoggingResumableUploadSession) and
    RetryClient (RetryResumableUploadSession).
    
    This is part of the work for #559.

[33mcommit a5babb9734a9e69588b12f361b223c4d5593662e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 16:43:56 2018 -0500

    Add configuration parameters to install locks. (#1512)
    
    This fixes #1070. The locking callbacks are not installed if (a) the
    application already installed other locking callbacks, or (b) the
    application disables them by setting a parameter in the ClientOptions.
    
    The tests are annoying because we can only test one case in each binary,
    once set the callbacks stay set forever.

[33mcommit 37020f9fbdd3c4342aae65ee754b8090cbc64dc3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 16:05:53 2018 -0500

    Support shared_from_this() in CurlClient. (#1516)
    
    To create a CurlResumableUploadSession we will need a "shared pointer to
    this". We need to hide the constructors to avoid accidentally creating
    an instance of the CurlClient class that is not held via shared
    pointers. Part of the work for #559.

[33mcommit 1508516925ad36d7c86fb2b31be1fc4dc35094fa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 14:51:05 2018 -0500

    Define a mock for ResumableUploadSession. (#1515)
    
    This will be needed when testing LoggingResumableUploadSession and
    RetryResumableUploadSession.

[33mcommit 93fe1ccd9988d58c6de89e3b9ae8541567e62ec0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 27 14:42:57 2018 -0500

    Update to gRPC 1.16.1 (#1511)
    
    Also updated to protobuf 3.6.1 because it is required by the newer gRPC.

[33mcommit 82549bf2374d073276e3a670b712e740f0533f2b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 26 20:36:19 2018 -0500

    Improve requests for resumable uploads. (#1471)
    
    The initial implementation was incomplete. We also need a response
    object and some tweaks to the request classes. This is part of the fixes
    for #559.

[33mcommit da297fe73f05f7a64bd0645ec42f80a300da85c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 26 20:34:45 2018 -0500

    FindGTest does not work with debug builds. (#1513)
    
    The installed libraries must be built in "Release" mode.

[33mcommit 10eb570c13a799eeb580409aa14b261f30c84d10[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 26 18:00:59 2018 -0500

    An abstraction for resumable upload sessions. (#1484)
    
    Later we will implement a parallel hierarchy matching RetryClient
    (RetryResumableUploadSession), LoggingClient
    (LoggingResumableUploadSession), and so forth. This is part of the fixes
    for #559.

[33mcommit 89e857dddf8301079c133745b8dc3e05cb647c60[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 26 17:16:58 2018 -0500

    Upgrade crc32c to 1.0.6 (#1493)

[33mcommit 578ed6139d1b516202f2b9fb926dee226c54d56c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 26 17:16:40 2018 -0500

    More control over random contents size. (#1474)
    
    With this change we can control the exact number of rows and the exact
    size of the randomly generated contents.  That is useful when we want to
    upload files that are exactly N upload chunk sizes.

[33mcommit daa516c113c01680f917a1525ea99719044cbf28[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Tue Nov 27 00:07:15 2018 +0530

    Implement noex::InstanceAdmin::AsyncUpdateCluster (#1509)
    
    Fixes #1266.

[33mcommit 14412b988f9026e68e733a0d63c0a65d38b77053[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 26 09:12:25 2018 -0500

    Add warnings on Async functions. (#1507)
    
    We may change the APIs for these functions, the documentation should say
    so.

[33mcommit 94d86f655988d5663176e0a11d81cb586307559d[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Nov 26 04:15:02 2018 +0530

    Implement noex::InstanceAdmin::AsyncUpdateInstance (#1492)
    
    This fixes #1261.

[33mcommit efe18f9c26a8f766f48f8105d20c1ce48a97ab73[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Nov 26 00:46:23 2018 +0530

    Implement noex::InstanceAdmin::AsyncUpdateAppProfile (#1482)
    
    This fixes #1271.

[33mcommit d71fb24ece8efe6b49729f8ffbe329d192a77e1e[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Nov 25 17:35:08 2018 +0100

    Add AsyncListClusters to InstanceAdminClient. (#1481)
    
    This is needed for #1265.

[33mcommit b302990348c49a4d48d0b3131d0d514d2cfd9897[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Nov 25 17:34:54 2018 +0100

    Introduce CompletionQueue::RunAsync. (#1480)
    
    * Introduce CompletionQueue::MakeNoop.
    
    This fixes #1467.
    
    In order to execute a callback on a thread executing `CompletionQueue`,
    an expired timer was used. This commit introduces an explicit call for
    it, which still uses an expired timer under the hood.
    
    * Rename MakeNoop to RunAsync as suggested in review

[33mcommit b589013c1163434276db3232322535f434f7d593[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Sun Nov 25 20:15:03 2018 +0530

    Implement AsyncCreateInstance (#1473)
    
    Fixes issue #1259.

[33mcommit 8a7364ec5607d72ef4b53128d7fbd362523256ac[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Nov 25 15:44:04 2018 +0100

    Retrun AsyncOperation from all async operations. (#1479)
    
    This fixes #1385. It is required to implement cancellations.

[33mcommit 19f94b3f9335abcac8a502ccc18f9a7f54b9fc05[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Nov 25 15:35:26 2018 +0100

    Introduce AsyncGrpcOperation. (#1478)
    
    This fixes #1389.
    
    The `Notify()` member function in `AsyncOperation` doesn't make sense in
    case of compund operations utilizing other higher level operations,
    e.g. `AsyncRetryOp`. As a remedy, `AsyncGrpcOperation` is introduced.
    
    AsyncGrpcOperation represents operations whose callbacks are triggered
    by `grpc::CompletionQueue::AsyncNext()`. The notification is implemented
    via overriding the `Notify()` member function. This class is inherent to
    the implementation of `bigtable::internal::CompletionQueue`, so it is
    defined there.

[33mcommit 0af07826f8d6965e26a605ef2013041b08045ea7[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Nov 23 17:07:17 2018 +0100

    Implement AsyncCreateCluster. (#1472)
    
    It basically plugs in AsyncRetryAndPollUnaryRpc.
    
    Only an integration test is added because AsyncRetryAndPollUnaryRpc is
    already thoroughly tested.

[33mcommit ea70c75645ecd27e5addcdb8e63dd878465a8522[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Nov 23 16:17:47 2018 +0100

    Implement AsyncRetryAndPollUnaryRpc. (#1469)
    
    This fixes #1397.
    
    It glues together retrying an RPC to issue an API call whose result is a
    `longrunning.Operation` and then polling until that operation is
    complete.
    
    The implementation and tests are heavilly inspired by AsyncAwaitConsistency.
    
    The added tests show how it will be used to implement calls like
    AsyncCreateCluster.
    
    Move AsyncRetryAndPollUnaryRpc to its own file.
    
    MSVC complained about a tool large file and was probably right.
    
    AsyncRetryAndPollUnaryRpc: use static_assert.
    
    The use of `std::enable_if` is an overkill in this case - SFINAE is
    unlikely. `static_assert` makes forward declarations of this class more
    concise.  They will be needed for declaring this class as a friend.

[33mcommit 9f00c071bd6bd1160b80a4954fb19d422fbd984b[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Nov 22 20:03:03 2018 +0100

    AsyncLongrunninOp: use static_assert. (#1470)
    
    The use of `std::enable_if` is an overkill in this case - SFINAE is
    unlikely. `static_assert` makes forward declarations of this class more concise.
    They will be needed for declaring this class as a friend.

[33mcommit 1d9c73927cba5e4ff5562d023068acaf5e1397f1[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Nov 21 19:03:43 2018 +0100

    Add AsyncCreateCluster to InstanceAdminClient. (#1468)
    
    This is required for #1260.

[33mcommit 93b394dd516b702f6efb7d18bfbf724e75215264[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Nov 20 20:35:41 2018 +0100

    Implement AsyncPollLongrunningOp. (#1466)
    
    This is a part of #1397.
    
    This is basically `PollLongRunningOperation`'s counterpart - it wraps
    sending GetOperation and then wraps it in AsyncPollOp.
    
    The next step will be implementing a cancellable "then" async operation
    to be able to run an longrunning RPC and then asynchronously wait for
    it.

[33mcommit c102adfedc04676a0ee83f1c9e30cf7511708ede[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 20 09:56:18 2018 -0500

    Initial resumable uploads in testbench. (#1464)
    
    With this change the testbench supports resumable uploads. We will
    probably need to tweak this to simulate multiple failures, but it is a
    good start. Part of the work for #559.

[33mcommit 7661ef315e1e4fc6fec440b7c9b5d0ce9202e1c0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 20 09:02:27 2018 -0500

    Client option to select resumable vs. simple uploads. (#1465)
    
    This is part of the changes for #559. When uploading a file we will
    select the type of upload (resumable vs. simple) based on the size of
    the file. Small regular files can be loaded to memory and use a simple
    retry strategy. Large files, or non-regular files, need to use resumable
    uploads and a more sophisticated retry strategy.

[33mcommit 98f1daa417ee4ddd1d7b18fd44bdbbb37889a7e0[m
Author: Matt Houglum <houglum@google.com>
Date:   Tue Nov 20 01:00:22 2018 -0800

    Adds retry/backoff logic for credential requests. (#1452)
    
    Fixes issue #516. This change propagates the result of Refresh()
    attempts up to the caller, allowing the caller (in this case, a
    Client object) to apply retry and backoff logic for failed credential
    refresh attempts.

[33mcommit 88455baf19332b51c98fa962e3c58c4afbef9be9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 16 17:57:12 2018 -0500

    More updates to the release steps. (#1463)

[33mcommit 6cbe13d7bb5bde1d2708ca517739978c339cdf1c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 16 17:11:38 2018 -0500

    Implement request types for resumable uploads. (#1461)
    
    This is part of the work for #559.

[33mcommit 57fa2e89ba2ad76430c81a4f26f3f340242ff001[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Nov 16 21:10:54 2018 +0100

    Add AsyncGetOperation to admin clients. (#1462)
    
    It is not added to DataClient because there are no RPCs utilizing
    `longrunning.Operation` there.

[33mcommit cccbc5174427533892b5b1a2d9ed227b7b55c427[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 16 10:31:39 2018 -0500

    Implement async operations that return futures. (#1456)
    
    This implements the first operations in the Cloud Bigtable client that
    return futures-from-the-future as the result of the operation. The
    application can then attach a callback or block until the future
    completes.

[33mcommit a7a5d0eb5d9c35e60e7e91e32a1351acfa18d2f4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 15 23:00:10 2018 -0500

    Do not generate local files in tests. (#1459)
    
    The internal CI systems at Google do not allow us to create files in the
    directory where the tests run. Instead we write to
    `::testing::TempDir()`. This change will make it easier to import the
    code.

[33mcommit 851c4394162ac9f942263a4dcce6271b5e01d64a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 15 22:59:53 2018 -0500

    Implement file_size() function. (#1458)
    
    I am planning to do uploads of small files using simple (or multipart)
    uploads, and uploads of large files using resumable uploads. I need some
    function to give me a file size, so here it is.

[33mcommit 315040869c129d3c04afe26028c81721b154ca49[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 15 22:59:37 2018 -0500

    Support WithObjectMetadata option in InsertObjectMedia. (#1445)
    
    When inserting objects it is now possible to set the metadata at the
    same time as we upload the media. This is useful when the application
    wants to set labels or other object metadata attributes and save the
    additional request. The library automatically switches to a multipart
    upload when this option is used, but prefers a simple upload otherwise.
    Part of the changes for #1311.

[33mcommit 10d44d1e26e6b615595c0947d12e74f29f78e9b1[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Nov 15 19:50:31 2018 +0100

    Add an integration test for AsyncAwaitConsistency. (#1455)
    
    This is shamelessly stolen from the sync version and slightly modified.

[33mcommit 70f9c5e5b76c02a7858298818ba7f96a272dd86a[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Nov 15 17:01:32 2018 +0100

    Implement AsyncAwaitConsistency. (#1448)
    
    The request kicks off a `AsyncGenerateConsistencyToken` and on success
    passes it to `AsyncPollCheckConsistency` which in turn calls the user
    callback.
    
    Unfortunately, the implementation is not trivial because we have to
    handle cancellations. In order for the whole request to be cancellable,
    we need to create an `AsyncOperation`, which will cancel either of the
    two underlying requests depending on the timing.
    
    This implementation introduces a new request (`AsyncAwaitConsistency`),
    which holds all the necessary data to launch the following
    `AsyncPollCheckConsistency` after `AsyncGenerateConsistencyToken`
    finishes and implements `AsyncOperation` so that it can return itself to
    the user as a handle for cancellation.
    
    By adding `CheckConsistencyFunctor` and
    `ConsistencyTokenGeneratedFunctor` nested classes I achieved two things:
    avoided copying the user-provided functor (as I would have to do with
    lambdas) and managed to keep AsyncAwaitConsistency not a template, which
    makes its use easier.

[33mcommit d2efc3a6ce7383d7525223d29dece154ec26bae6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 15 09:52:52 2018 -0500

    Wrappers to capture callback results in promises. (#1453)
    
    In the `noex` layer we use callbacks to report the result of
    asynchronous operations.  In the layer with exceptions we will use
    future<T>, and the application can block, or attach a continuation.
    
    To convert between the two layers we need something that basically
    stores the parameters of the callback into a `promise<T>`, with C++11 we
    need a helper class to do this mapping.

[33mcommit dd8e09e29c0ad4a58cf8cc45ac788bd5d1664270[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Nov 15 14:51:24 2018 +0100

    Improve Async{Poll,Retry} test readbility. (#1444)
    
    This follows the sugestions from #1441.

[33mcommit 84d86a5be2a13205c027ed759f55f6e19cb9c286[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 15 08:24:59 2018 -0500

    Move future files out of internal/. (#1450)
    
    The public headers for `future<T>` should be in google/cloud/ so they
    can be picked up by the Doxygen scripts. This fixes #1345.

[33mcommit 1045c2738881bb7b9cefde48792128eb610074d2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 15 08:19:47 2018 -0500

    Enable Kokoro badges [skip ci]. (#1451)
    
    Also make the Travis badge say that it is from Travis.

[33mcommit ca2e62ddae8e14414aa49650e6f06b254854eadd[m
Author: Matt Houglum <houglum@google.com>
Date:   Wed Nov 14 15:32:22 2018 -0800

    Isolates credential expiration/validity logic. (#1442)
    
    This better encapsulates the credential expiration logic, aligning it
    with the semantics used by google-auth-library-python. The logic can be
    seen in the Credentials class in this module:
    https://github.com/googleapis/google-auth-library-python/blob/master/google/auth/credentials.py
    
    This also alters the AuthorizationHeader method to avoid unnecessary
    locking if the credential is not expired/invalid.

[33mcommit 024010ff9e8a2e55e95da12815a960a558e92994[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 14 17:35:07 2018 -0500

    Disable the AppVeyor builds. (#1449)
    
    Now that Kokoro is building on Windows with similar times to AppVeyor
    (~25m) we no longer need to use AppVeyor, and we get better throughput
    for the CI builds overall. Yay!

[33mcommit f5a339f32a16676bb6f47596e854509fb48d33d3[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Nov 14 21:07:46 2018 +0100

    Implement polling AsyncCheckConsistency. (#1446)
    
    This is part of #1256.
    
    It's basically a wrapper around an RPC wrapped in AsyncPollOp.

[33mcommit cbc8a583bd27a1d164372877c57b2f1474d6745d[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Nov 14 20:31:54 2018 +0100

    Statically check Operation's traits in AsyncPollOp (#1447)
    
    This is a part of #1256.
    
    It's almost a copy-paste from `AsyncRetryOp`.

[33mcommit 85e3897cd57b2a1caeb78cca2277721d670fddd9[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Nov 14 17:58:24 2018 +0100

    Make AsyncPollOp cancellable. (#1441)
    
    This very much follows the decisions from #1398.

[33mcommit 022cb17d7a655ca13279fd599f9e7f05017c668f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 14 11:16:12 2018 -0500

    Fix remaining test TODOs. (#1443)
    
    Part of the changes for #1345.

[33mcommit 574bb78e13e0ca95f4eb6c161e202eb556c17692[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Nov 14 00:23:14 2018 +0100

    Implement AsyncPollOp without cancellation. (#1440)
    
    This is a part of #1256.
    
    It follows the same principles as AsyncRetryOp, though it is different
    enough to not merge the two implementations.
    
    As suggested in #1436, this is stripped from cancellation and static
    assertions on operations used in it, so that it is easier to review.

[33mcommit bec7ffc52edb5cd3e5b3c4de43d7a28c9e7ed296[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 13 18:10:51 2018 -0500

    Speed up Kokoro Windows Build. (#1438)

[33mcommit 614dcb2fd8e216a30689460480c7f8085beebdbc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 13 16:29:18 2018 -0500

    Refactor InsertObjectMedia() integration tests. (#1435)
    
    This is partly to make the object integration test smaller (#1282) and
    partly to make room for the new InsertObjectMedia() tests that will also
    accept the object metadata values (#1311).

[33mcommit efc14e7374f543c7a916a7412355c3cf5ae18690[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Nov 13 19:27:42 2018 +0100

    Move AsyncRetryOp traits to a separate file. (#1439)
    
    This is part of #1256.
    
    These traits will be shared by a AsyncRetryOp's counterpart for polling.

[33mcommit a0b468211452f7a4e90bee66827ba76d2234e0bd[m
Author: Jason Dobry <jmdobry@users.noreply.github.com>
Date:   Tue Nov 13 06:18:19 2018 -0800

    Fix a storage region tag (#1437)

[33mcommit a51386a21f30cbd735fa0a2606b66143b185a4b4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 12 21:26:41 2018 -0500

    Create scripts for Kokoro Windows build. (#1432)
    
    Building on Kokoro gives us more bandwidth. The servers have four
    cores (or threads), while AppVeyor has only 2, and we get more
    parallel builds: Kokoro runs all presubmit builds in parallel.
    
    The disadvantage is that we have to manually do caching, Kokoro does
    not make it easy to do that ourselves.
    
    I am getting 35 minute builds with Kokoro, which is worse than the 25
    minutes for AppVeyor. I think there is opportunity to improve here, and
    the advantage of parallel builds when multiple PRs are running is too
    much to ignore.
    
    This commit only introduces the build scripts, after it is committed a
    separate CL will enable the build.

[33mcommit 3486d37c1a419f88c11f2b6f85342b38a0324a52[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 12 16:41:03 2018 -0500

    Refactor CurlClient::InsertObjectMedia. (#1434)
    
    This will make it easier (I think) to support ObjectMetadata in all
    upload operations.

[33mcommit 41206fe3b00767edbc94a653bdbe03f9b9cb6350[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 12 14:36:16 2018 -0500

    future<T> and promise<T> even without exceptions. (#1426)
    
    Using future<T> and promise<T> without exceptions is probably unwise,
    but we need to compile the code to avoid littering the rest of the code
    with #ifdef/#endif blocks. Part of the work for #1345.

[33mcommit a4bda8d05e59c163f07ee8badd77070c2141d62e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Nov 10 08:19:42 2018 -0500

    Add idempotency unit test for all resources. (#1429)
    
    This fixes #714. All requests that may the non-idempotent have unit
    tests to verify they work correctly.

[33mcommit 523f75ff06cd4aff67cf170eabbdf48bf0e6d147[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 9 15:31:08 2018 -0500

    Extend object unit tests for non-idempotent case. (#1427)
    
    This is part of the work for #714. It implements unit test for the
    `Object: *` operations that are sometimes idempotent, and verify that
    both (a) non-idempotent failures stop the retry loop in the first
    failure, and (b) idempotent failures are retried multiple times.

[33mcommit 67c869cc9820e087855b8b87a156c272eeceb94e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 9 15:06:57 2018 -0500

    Cleanup MSVC warnings. (#1428)

[33mcommit b6b6153630d9b18251f4d6ad6583d51c92d25879[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 8 16:54:13 2018 -0500

    Split g*/c/*/storage/object_test.cc. (#1425)
    
    The compilation with MSVC was failing with:
    
    ```
    object_test.cc : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj
    ```
    
    Before changing compilation flags, I would prefer to split the code, the
    relevant articles seem to be:
    
    https://msdn.microsoft.com/en-us/library/ms173499.aspx
    https://msdn.microsoft.com/en-us/library/8578y171.aspx
    
    It seems that the template magic to generate test cases got out of hand.

[33mcommit 2171daea5691cf007209511bcd286f0e9573eb9c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 8 13:43:49 2018 -0500

    Implement unwrapping constructor. (#1423)
    
    This implements `future<T>::future(future<future<T>>&& rhs)`.
    It creates a new future whose shared state is satisfied when both
    `rhs` and `rhs.get()` are satisfied.
    
    Part of the work for #1345.

[33mcommit edc9082a7ed63a269de1133d2b2405dff2b0e1db[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Nov 8 15:29:32 2018 +0100

    Fix races in Async{UnaryRpc,Timer}Functor. (#1420)
    
    There are race conditions possible in AsyncUnaryRpcFunctor and
    AsyncTimerFunctor similar to the one in #1419.
    
    Please refer to comments in the code for specific explanations.

[33mcommit ec89d83778aab00bbc7bc4855d0f0ffac86652f3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 7 22:05:11 2018 -0500

    Finish implementation of StrictIdempotencyPolicy. (#1409)
    
    This is part of the work for #714. It implements StrictIdempotencyPolicy
    for notifications and the service account. This completes the
    implementation of the class, no more TODO() entries, yay!

[33mcommit 428a3b828156299dd82ac90e75186afe82c75677[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 7 14:23:16 2018 -0500

    Implement unwrapping .then(). (#1421)
    
    When passing a functor that returns `R` to `.then()` the return value is
    `future<R>`. If implemented naively, `.then() would be incovenient when
    the return value `R` is actually a `future<R2>`. The naive version would
    return `future<future<R2>>` and the application developer would need to
    wait for the first future, and then wait for the wrapped `future<R2>`.
    
    The Technical Specification we are following requires `.then()` to
    unwrap the future in this case, and return `future<R2>`. This unwrapping
    future waits for the (implicit) `future<future<R2>>` to become
    satisfied, and then waits for the `future<R2>` to become satisfied.
    
    This is specially important for us, because we expect that most
    `bigtable::*::Async*()` member functions will return a `future<R2>`, so
    to use them in `.then()` (some lambda adapters) we need to support
    unwrapping.
    
    Part of the work for #1345.

[33mcommit a4da72247ac5e307714061b6cbc56db32753eabc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 7 08:36:41 2018 -0500

    Implement future<T>::then(). (#1418)
    
    This is part of the changes for #1345.

[33mcommit 79443fef9be8a84b4696574fec59ce09d602b019[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Nov 7 12:08:39 2018 +0100

    Fix a race condition in AsyncUnaryStreamRpcFunctor (#1419)
    
    Before this fix, a callback (`Notify`) can be executed in parallel with
    the `Set` member function. Due to that, `response_reader_` might not be
    properly set, leading to a nullptr dereference.

[33mcommit a8e25530cf91dff53974dc1fc9d9ec909c90ae45[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 6 15:38:39 2018 -0500

    Refactor is_ready() to future_base<T>. (#1417)

[33mcommit 7174186e52639e10f828b159d304d0b15c4045e4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 6 12:11:56 2018 -0500

    Fix MSVC warnings. (#1416)

[33mcommit def09f85d00a348ee6ced0eb59f2d8eb7f230bf8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 6 09:56:18 2018 -0500

    Move future<void>::then_impl() to a separate file. (#1414)
    
    The definition of `future<T>::then_impl()` may need to reference
    future<void>, and the definition of `future<void>::then_impl()` may
    need to reference `future<T>`. To break the cycles we need to move
    the definition of this template functions to a separate file, where
    `future<T>`, `future<void>` and (soon) `future<R&>` are all visible.
    This is part of the work for #1345.

[33mcommit 62814bdf79250c061a86986889bee0552e8d0acf[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Nov 6 15:47:01 2018 +0100

    Add *Consistency* calls to TableAdminClient. (#1415)
    
    This is a part of #1256.

[33mcommit fd373ad57969e9bcfd9c270e8f9761fe73280c17[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Nov 6 07:59:07 2018 -0500

    Implement future<T> and promise<T>. (#1408)
    
    This is part of the work for #1345. It implements the basic
    functionality for future<T> and promise<T>, excluding `then()` and
    `is_ready()`.

[33mcommit 1ad6f51105d04c06198103b35ea69233196e35b5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 5 20:38:27 2018 -0500

    Remove future<T> cruft. (#1406)
    
    I thought I would need specializations of
    continuation_execute_delegate() for unwrapping .then(), but I was wrong.
    Removing the code that won't be used. Part of the work for #1345.

[33mcommit 4cc0197a9584e40ef00bb6463bc1b104e3c2e203[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 5 20:37:11 2018 -0500

    Implement StrictIdempotentPolicy for *Acl. (#1395)
    
    This is part of the work for #714. Sorry for the larger PR, I think it
    should be Okay since all the *Acl requests have the same behavior.

[33mcommit 80d9b06ca4a3403638537d30bde157c2ed04b7aa[m
Author: Matt Houglum <houglum@google.com>
Date:   Mon Nov 5 13:54:05 2018 -0800

    Fixes #1404. (#1407)
    
    Ensures that if gcloud has configured ADCs at its well known path, this
    affected unit test should not load those credentials.

[33mcommit fb7394b35a7ff87bfbc72d57c1c5cf703413c800[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 5 14:53:46 2018 -0500

    Implement shared state for future<T>. (#1403)
    
    This is part of the work for #1345. It implements the shared state for
    `future<T>` and `promise<T>`.

[33mcommit 41f3baa82b4410c1c9c7332fa09494953d72bc1e[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Nov 5 15:17:31 2018 +0100

    Implement and test AsyncRetryOp::Cancel (#1398)
    
    If `AsyncRetryOp::Cancel()` is executed on an unstarted request it
    will succeed and the following call to `Start()` will make the operation
    finish immediatelly with state `CANCELLED`.

[33mcommit 88040e47c2726469e389887ed17ebdb4661d564f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 5 09:16:10 2018 -0500

    Refactor tests for future_shared_state<void>. (#1401)
    
    This is just some cleanup to make it easier to add new tests. Remove
    duplicate tests, and put them in order so they are easier to find. Part
    of the work for #1345.

[33mcommit eac15c7733e5d168eebef39efce23b37102b9660[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Nov 5 09:15:31 2018 -0500

    Refactor testing types to library. (#1400)
    
    We should test future<T> with interesting types, e.g., classes that lack
    a default constructor. This refactors some types that we already had in
    the tests for optional<T> to the testing_util library. Part of the work
    for #1345.

[33mcommit c50f6bb906cf4a8a651dbeb29f9b6c0bdcc806c0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Nov 3 19:42:42 2018 -0400

    Fix typos [skip ci]. (#1399)

[33mcommit a880c0d700d4614423e457e64b2edceb7cc3d9eb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Nov 3 08:26:52 2018 -0400

    Implement Client::LockBucketRetentionPolicy. (#1383)
    
    This function implements the `Buckets: lockRetentionPolicy` API. As
    usual this PR also includes a unit test for the member function, an
    integration test, and the code samples.  This fixes #1029.

[33mcommit a3c7dedd261a38a329bf847800989324b34d7c53[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 2 22:49:16 2018 -0400

    Initial implementation of future<void>::then() (#1391)
    
    This is part of the work for #1345. It implements future<void>::then(),
    because future<T> is not implemented yet, it only works for functors
    that return `void`.
    
    gcc-4.9 did not handle a protected type alias used in the definition of
    a lambda correctly. Creating a local alias for the protected type alias
    fixed the problem. Left a comment explaining this too.

[33mcommit 4698e6af8c6f6f4e5e641cdfdc7cf4cec8d6d985[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 2 21:47:46 2018 -0400

    Implement StrictIdempotencyPolicy for *ObjectRequest. (#1394)
    
    Part of the work for #714. Implement the policy for *ObjectRequest.

[33mcommit e3a656d0b358571c068e93cd00aeda70807f035b[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sat Nov 3 00:05:19 2018 +0100

    Implement AsyncCheckAndMutateRow (#1384)
    
    This fixes #1237.

[33mcommit 393e7515e5cca25e8c9785acfd9344a524d0e8f5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 2 18:48:03 2018 -0400

    New document on how to cut a release [skip ci]. (#1392)

[33mcommit 6ca0a1265a42a15a69b76ff991d8b312bf0496fb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 2 18:21:25 2018 -0400

    Implement StrictIdempotencyPolicy for IAM ops. (#1382)
    
    Part of the work for #714. Implement the policy for
    SetBucketIamPolicyRequest, GetBucketIamPolicyRequest, and
    TestBucketIamPermissionsRequest.

[33mcommit f44223ae1fec9cc1dd1d3eca9b425811a2f970ef[m
Author: Matt Houglum <houglum@google.com>
Date:   Fri Nov 2 15:14:03 2018 -0700

    Adds support for Compute Engine credentials. (#1381)
    
    Adds support for Compute Engine credentials.
    
    GoogleDefaultCredentials() now checks if the program is running on a GCE instance, and if so (and no higher-precedence credentials were already found), the Credentials pointer returned has a derived type of ComputeEngineCredentials.  I've also added support for creating this new credential type directly.
    
    In theory, this credential type should "just work" for App Engine Flexible Environment custom environments as well, but that theory has not been tested yet. Confirmation for GAEF support is still being tracked in #579.

[33mcommit b0fd7a1d5918884b184f224bce139acf909ad224[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Nov 2 17:11:03 2018 +0100

    Make retriable operations return an AsyncOperation (#1388)
    
    This is a part of #1305.
    
    AsyncRetryOp will need to be cancellable and in order to achieve it, in
    needs to keep an AsyncOperation of the underlaying operations.

[33mcommit cb71ad68f9331d08694a4fd253fb6e44ef8256cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 2 10:14:55 2018 -0400

    Refactor common future and promise functions. (#1376)
    
    We expect that all 3 versions (`future<T>`, `future<R&>`, and
    `future<void>`) will have identical implementations for some
    functions, like wait_for(), or wait_until(). Refactor now to make
    future changes smaller. Part of the work for #1345.

[33mcommit 0814d1080a0d60bc0c26b73dc589651ce4ec2532[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 1 23:16:55 2018 -0400

    Capture compiler version in Bazel. (#1368)

[33mcommit b3516833cd3d6d32ab5a7ae4536e187da3735051[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 1 23:16:39 2018 -0400

    Bump version numbers and update release notes. (#1375)

[33mcommit 1d84fafc777b0fc23a5e58700e45b48f80f32ed9[m
Author: Matt Houglum <houglum@google.com>
Date:   Thu Nov 1 13:12:23 2018 -0700

    Make variable names lower_snake_case. (#1377)
    
    I merged the last PR before I saw the style checker complaining at me.
    This will appease the style checking gods.

[33mcommit fa035752f45de2a143b3dfbc7b6bfd15b1d9808f[m
Author: Matt Houglum <houglum@google.com>
Date:   Thu Nov 1 12:38:57 2018 -0700

    Update manual formatting instructions [skip ci]. (#1378)
    
    The instructions for manually running clang-format did not take into
    account files that had been removed (passing these to clang-format would
    fail), and recommended using an old version of clang-format (we've moved
    from 4.0 to 6.0).

[33mcommit 2825fd9c4570a0aa2c73395e7ec90837cb7a667e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 1 14:04:46 2018 -0400

    Implement LockBucketRetentionPolicyRequest. (#1366)
    
    This is part of the work for #1029. It implements the request class for
    `Buckets: lockRetentionPolicy`.

[33mcommit ff17c3a644c226670417cc162194855692c671bc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 1 13:59:24 2018 -0400

    Introduce StrictIdempotencyPolicy. (#1365)
    
    This is part of the work for #714. It introduces a new (partially
    implemented) idempotency policy that only labels as idempotent the
    operations that are idempotent in all circumstances. In this PR only the
    CRUD operations for buckets are implemented, I plan to create one PR per
    resource type to keep the PRs reasonably sized. Because the policy is
    not fully implemented there are no integration tests yet.

[33mcommit 60d6c18a65666c59f72d3e0f4168fd56ad5a294d[m
Author: Matt Houglum <houglum@google.com>
Date:   Thu Nov 1 10:24:26 2018 -0700

    Break up decl and impl in GCE util files. (#1374)
    
    This change is needed as part of the GCE credentials being added in one
    of the next PRs in this chain; after putting those changes together,
    this one was large and modular enough to split into its own PR.

[33mcommit c5d8b93bf0a3ae6b5e8d8a164b4a78aea615f4e2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 1 12:41:10 2018 -0400

    Initial support for continuations. (#1373)
    
    This is part of the work for #1345. It implements support for
    continuations in the shared state. Continuations are implemented as a
    type-erased object associated with the source shared state. They hold
    both the functor and the destination shared state. When the source
    shared state is satisfied the continuation is invoked, they call the
    functor with the source shared state input, and store the results (if
    any) into the output shared state.
    
    In this PR this is only implemented for `void` as the shared state, so
    it is a bit boring, but it is a good start, and more code would make the
    PR even larger than it already is.

[33mcommit b79ecc7cc80ccaa095ca32988081235c4c76c2c7[m[33m ([m[1;33mtag: v0.3.0-pre1[m[33m)[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 31 20:38:34 2018 -0400

    Implement future<void> and promise<void>. (#1367)
    
    This implements futures and promises for `void`. It does not yet
    implement the `.then()` member function, to keep the PR size small. Part
    of the work for #1345.

[33mcommit 0e147244a029bb6baad6d110832730ceb21f0483[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Nov 1 01:04:23 2018 +0100

    Async sample row keys (#1369)
    
    * Add AsyncSampleRowKeys to DataClient.
    
    * Implement AsyncSampleRowKeys.
    
    It's straight-forward: run the RPC, accumulate the response stream and
    retry on failure.
    
    * Add an integration test for AsyncSampleRowKeys.
    
    * Increase the timeout for integration tests.
    
    AsyncSampleRowKeys test has to write some more data to verify if the
    implementation does something reasonable. This takes several seconds,
    hence the need to increase the timeout.

[33mcommit 63ee8ebf246578fad417884422b6b33236072776[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Thu Nov 1 02:33:50 2018 +0530

    Adding Implementation for noex::InstanceAdmin::AsyncCreateAppProfile (#1371)
    
    This fixes #1269.

[33mcommit cd65fcbbdbcd28adc77431b01370ce2bb2c2a171[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 31 16:59:21 2018 -0400

    Record decision about optional fields as ADR. (#1358)
    
    This is just rewriting #934 as a ADR.

[33mcommit 25b778a80e931d9c3d8b527fe510c9f9a42ab53e[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Oct 31 18:17:18 2018 +0100

    Abstract retry logic into AsyncRetryOp. (#1350)
    
    * Abstract retry logic into AsyncRetryOp.
    
    The generalization is straight-forward - parameterize submitting
    requests and accumulating responses by introducing an `Operation` class.
    It can encapsulate unary regular RPCs (`AsyncUnaryRpc`), unary regular
    RPCs with streaming responses or more complex operations like
    `BulkMutator`
    
    There are no tests because this is just a refactor and doesn't add any
    logic.

[33mcommit cdb982f8085130c6abc68c7285ee7da700dbf641[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 31 10:17:57 2018 -0400

    Implement examples for bucket retention policy. (#1347)
    
    Part of the work for #1029. This includes the examples to set the bucket
    default event based hold, as well as the examples to query and set the
    retention policy. The examples to lock the retention policy will come
    later.

[33mcommit 7c5c83aeea6d55f7be3acb166411828c3a1a1c7e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 31 09:35:05 2018 -0400

    Implement future+promises shared state for void. (#1362)
    
    This implements the shared state for `promise<void>` and `future<void>`.
    It is still incomplete, but I am trying to keep the PRs small. Part of
    the work for #1345.

[33mcommit 1aa855afceef0e5f2ed04ca1d0a2de5de94c9f7c[m
Author: Matt Houglum <houglum@google.com>
Date:   Wed Oct 31 05:44:28 2018 -0700

    Improve credential testability and coverage. (#1357)

[33mcommit 09cfd6585043fd232f1660179908d8392dd20d43[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 31 08:37:15 2018 -0400

    Automatically export version numbers to Bazel. (#1363)
    
    The bazel builds also generate headers with the version information,
    with this PR the versions in CMake and Bazel are automatically kept in
    sync, by exporting the version information to *.bzl files, just like we
    do for the list of files in a library or the list of tests.

[33mcommit 33f575d31ac5a566cb07d584cca78fdf75e39366[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 31 08:30:38 2018 -0400

    Implement examples for object holds. (#1346)
    
    This creates examples showing how to set and release event based holds
    and temporary holds. Part of the work for #1029.
    
    Ignore non-writable values in path and update. Thanks to @houglum for
    pointing out that returning an error is not what the service does when it
    receives a non-writable field in update or patch requests.

[33mcommit 855a0fbc64a5c6415a1bcb6ded8dcd9ba4f548bb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 30 22:23:34 2018 -0400

    Remove git commit annotation for release builds. (#1353)
    
    With this PR versions are no longer annotated with the GIT version
    number.  This makes it easier for package managers to build our
    releases, while still allowing us to know what commit we used for a test
    or benchmark in development.
    
    When we create releases we will need to commit a change to the release
    branch that sets GOOGLE_CLOUD_CPP_IS_RELEASE to "yes".

[33mcommit 1dde07ea8efccbca413b7f553d72d79e4a03bd36[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed Oct 31 07:24:30 2018 +0530

    Adding Implementation for noex::InstanceAdmin::AsyncDeleteAppProfile (#1355)
    
    This fixes #1273.

[33mcommit e481c785fed93fa1b7d64171865a7967086e2853[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 30 21:48:58 2018 -0400

    Define interface for storage IdempotencyPolicy. (#1361)
    
    This is part of the work for #714. This PR introduces no changes in
    behavior, it just adds a new abstract class to define the idempotency
    policy interface, and a trivial implementation that treats all requests
    as idempotent.
    
    This is a large PR, but most of the code is trivial, I hope this is
    Okay.

[33mcommit 1eb1b0b7826e39e3754235c42a7a83c8f8b4759f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 30 21:45:27 2018 -0400

    Implement download to file (#1356)
    
    This fixes #560. It introduces a new member function to download an
    object directly to a file. There is the usual integration tests and code
    samples.

[33mcommit 26562d43072464f6535345ae44924607a77fd9c7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 30 16:28:25 2018 -0400

    Implement the base class for the shared state. (#1351)
    
    Futures and promises keep a shared state that tracks whether the promise
    is satisfied, if the value has been retrieved, the exception (if any),
    and hold the (type erased) continuation. In this PR we introduce this
    base class and unit tests for it, as part of the work for #1345.
    
    The class is incomplete, and there are a lot of support classes around
    it that will be introduced in future PRs, as it is, this PR is getting
    too large already.

[33mcommit 730ced3a9a1d47e8df9af824bc97c954a6cb1c04[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 30 15:59:42 2018 -0400

    Enable CRC32C checksums by default. (#1344)
    
    With this PR the APIs to insert objects, upload objects, and download
    objects compute the CRC32C checksum by default. This is in addition to
    the MD5 hash, application developers can disable one or both of these.
    
    When using `Objects: compose` the MD5 hashes are not recomputed by GCS.
    This commit fixes the testbench to reproduce that behavior, because we
    miss bugs when it is not emulated properly. I also fixed the composite
    hash validator to handle the case where one of the branches does not
    receive the expected hash value.

[33mcommit b5ffa1127edd8aa279b49058c26f143930c03af8[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Oct 30 19:39:11 2018 +0100

    Specialize is_invokable for member functions. (#1359)
    
    It is needed for adding type assertions to #1350.

[33mcommit 1a0066d4d5ddd8656778fade2af5c7d617974041[m
Author: Matt Houglum <houglum@google.com>
Date:   Mon Oct 29 14:05:17 2018 -0700

    Separates ADC logic to differentiate env var vs gcloud well known path (#1354)
    
    This makes our ADC loading logic more consistent with other libraries,
    e.g google-auth - specifically the logic/methods in this file:
    https://github.com/googleapis/google-auth-library-python/blob/f1028252b262baee67a294b27ff831182ac645d3/google/auth/_default.py#L209
    
    It's also needed to more easily test the GCE credential functionality
    I've finished prototyping, but these changes deserved to be split out
    into their own PR.
    
    The only notable behavior change this brings is that we now check if
    a file exists at the gcloud well known ADC path before trying to load it
    (and potentially failing).

[33mcommit dd0496f4f27896a912b8f78543ad1978393dcbec[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Oct 29 18:31:42 2018 +0530

    Adding Implementation for noex::InstanceAdmin::AsyncGetAppProfile (#1343)
    
    This fixes #1270.

[33mcommit 51017879dbbed5efa79902e312f3015e3e31d60b[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sun Oct 28 19:13:27 2018 +0530

    Implement of noex::TableAdmin::AsyncDeleteSnapshot (#1348)
    
    This fixes #1257.

[33mcommit 3ee7fb9233b5b2309e396a7462daaa91e9cfe74d[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Sun Oct 28 03:22:22 2018 +0100

    Move RowKeySample to a separate file. (#1349)
    
    * Move RowKeySample to a separate file.
    
    I'm going to need it in a file which is going to be included in table.h.
    
    * Add missing version.h include.

[33mcommit 0571ccfb9820360dd9c0ab47575c68ae6e714084[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 26 21:32:21 2018 -0400

    Implement bucket lock features in BucketMetadata. (#1340)
    
    This adds the functionality to parse the bucket lock features, and the
    code to prepare messages for `Buckets: patch` and `Buckets: update` that
    include bucket lock features. I am not including integration tests yet
    because those require changes to the testbench and I would rather send a
    smaller PR first. Part of the changes for #1029.

[33mcommit 1bb2f809356516353c9aac1257ce3fb8a4290cbd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 26 20:01:08 2018 -0400

    Implement bucket lock features in ObjectMetadata. (#1339)
    
    This is part of the work for #1029. It changes the ObjectMetadata class
    to support the bucket lock features. No integration tests yet, those
    will need support in the testbench, and I would rather do that in a
    separate PR (to keep the PRs small-ish).

[33mcommit 6af42793653108e0f180709a7b758f1f6fd7216a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 26 17:58:54 2018 -0400

    Implement CompositeHashValidator. (#1337)
    
    A CompositeHashValidator can apply two hashes, such as MD5 and CRC32C,
    to the same data. It could be generalized to compute N hashes, but we do
    not need more than two, so keep it simple for now (YAGNI).

[33mcommit dcfb194eb899e58c9dc2dda0404d24842d36dd0f[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Fri Oct 26 22:56:54 2018 +0200

    Remove Disposition and AsyncUnaryRpcResult (#1341)
    
    This fixes #1308.
    
    The disposition was only meaningful for timers. It wasn't used in unary
    RPCs with streaming responses and for those non-streaming it erroneously
    indicated whether an operation got cancelled.
    
    The documentation states that "ok" (obtained from AsyncNext) should
    always be true for Finish() operation.
    
    After this change:
    - disposition is removed from the codebase,
    - if an operation is cancelled, we trust that grpc status indicates that
      and pass it to the user,
    - if a timer is cancelled, AsyncTimerResult has a bool to reflect it,
    - AsyncUnaryRpcResult is removed too, because it doesn't make much sense
      after the removal of disposition,
    - if my understanding of the documentation is wrong or gRPC is buggy and
      AsyncNext does return false for a Finish() operation, we translate it
      into an grpc::UNKNOWN.
    
    The change required a modification of a test which assumed that upon
    request cancellation AsyncNext returns ok == false.
    
    A test is added to check the newly added behaviour on Finish() returning
    ok == false.

[33mcommit 4cb71e02a03ee5e86b8cfdf4e2b2ef048ef612c5[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Oct 26 17:44:54 2018 +0530

    implementing noex::AsyncGetSnapshot (#1332)
    
    This fixes #1254.

[33mcommit e8f2d719c719367149a864f2088423210b788193[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Thu Oct 25 22:40:42 2018 +0200

    Implement BulkAsyncRetry (#1336)
    
    * Add AsyncMutateRows operation to DataClient.
    
    * Make BulkMutator async friendly.
    
    This PR adds `AsyncBulkMutator`, which implements the async counterpart of
    `AsyncBulkMutator` of `MakeOneRequest`. It is suitable for using with
    `AsyncRetryOp` (from #1322).
    
    This is the last missing piece to implement AsyncMutateRows.
    
    * Make AsyncBulkMutator use the proper buffer.
    
    It accidentally used the empty one. Tests caught it.
    
    * Fix a memory leak in AsyncBulkMutator.
    
    AsyncRetryOp<AsyncBulkMutator> held AsyncBulkMutator, which held a
    reference (here removed) to AsyncUnaryStreamRpcFunctor which held the
    callback from AsyncBulkMutator, which held the AsyncBulkMutator.
    
    * Simplify AsyncBulkMutator.
    
    It is not going to be used in AsyncRetryOp, so it can have simpler
    signatures.
    
    * Implement AsyncBulkApply.
    
    This basically reimplements AsyncRetryUnaryOp with some minor
    simplifications.
    
    * Add and fix existing comments.
    
    * Add a test for cancelled AsyncRetryBulkApply.
    
    There was a test for AsyncRetryBulkApply getting cancelled, but only in
    circumstances when the server was processing the request. This adds a
    test for a case for when the request is waiting to be resent.
    
    * Add an integration test for AsyncBulkApply.
    
    * Make AsyncBulkMutator a friend of DataClient.
    
    Turns out that a descendant of a friend is not necessarily a friend,
    only gcc was so friendly not to indicate it.
    
    * Apply review comments.
    
    * Add missing override keyword.
    
    * Apply review fixes.
    
    * Fix wrong include guards in async_bulk_apply.h.

[33mcommit 8a54c7520df824e1fcd7b73c4da7916f6be69820[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 24 21:15:43 2018 -0400

    Implement CRC32C-based HashValidator. (#1330)
    
    This will be used to validate the CRC32C checksums in both uploads and
    downloads, just like we do for MD5 hashes.

[33mcommit 720afcf2b1d4378197520c84bf23269be1b49a4a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 24 21:15:16 2018 -0400

    Limit the size of the ccache(1) cache. (#1326)
    
    The cache can grow over time, some of our builds have 5.0GiB caches,
    while a clean builds creates a cache that only takes about 200MiB.
    Reducing the size speeds up the download and upload of the cache, and
    therefore the overall build time.

[33mcommit 9cc6b3becc972d73973128e698c16f806a8c5feb[m
Author: Matt Houglum <houglum@google.com>
Date:   Wed Oct 24 16:13:09 2018 -0700

    Add support for detecting if running on GCE. (#1335)
    
    This implements the recommended approach for detecting whether the
    program is running on a Google Compute Engine VM instance. It follows
    the approach taken by the grpc library for Linux, but for Windows
    machines, it checks the registry rather than launching a subshell and
    querying WMI, e.g. `Get-WMIObject -Query "SELECT ... FROM Win32_BIOS"`.
    The grpc approaches can be seen in their repository:
    
    https://github.com/grpc/grpc/blob/master/src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc

[33mcommit 3b95b6022f2f56ed96cda3f41413a2a478c34a63[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Wed Oct 24 21:20:20 2018 +0200

    Revert #1322. (#1334)
    
    We've established that this generalization is poor. We'll wait with
    doing it until we've got enough use cases.

[33mcommit a35af1697e2337055d15ed104ed3da3e93064422[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Oct 24 23:15:36 2018 +0530

    Bazel build for opencensus bigtable integration (#1230)
    
    This fixes #958. It provides an example on how to use OpenCensus with the Cloud Bigtable C++ client library.

[33mcommit 1e57f9e9eb62c41d2f9b6b2692d05bb917416873[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 24 06:40:53 2018 -0700

    Simplify byproduct definition. (#1329)
    
    When using external projects with Ninja we need to specify the
    byproducts (or if you prefer, the artifacts produced by) of each
    external project. It it somewhat tedious to manually type these
    byproducts when they are libraries, this PR introduces a CMake function
    to compute them.

[33mcommit cb855c34071382fe32d6da1d38b3039557849747[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed Oct 24 18:46:46 2018 +0530

    Adding Implementation of noex::InstanceAdmin::DeleteInstance (#1320)
    
    This fixes #1264.

[33mcommit 1a22849e9d2e57772b43abd3247c708b197fbeb3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 23 15:33:15 2018 -0700

    Implement crc32c on insert media (#1323)
    
    With this change the library sends (unless explicitly disabled by the
    application developer) the CRC32C checksum of any data included in
    InsertObjectMedia() calls. The integration tests in this change verify
    that valid CRC32C checksums are accepted, and that invalid CRC32C
    checksums are rejected by the testbench (and the service).

[33mcommit 60fdf39834ca9cd84c9e6646792daeab242f5b94[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 23 15:09:46 2018 -0700

    Implement Client::UploadFile. (#1306)
    
    This fixes #558. It creates the API, updates the samples to use it,
    creates an integration tests. No new unit tests are needed, the
    implementation is based on existing primitives.
    
    Add warning when trying to upload a non-regular file.

[33mcommit 73ce8fa2dbccd1a5db5db6609c8256f87750b981[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 23 13:50:09 2018 -0700

    Better management for the cached packages. (#1328)
    
    Under AppVeyor we were destroying the full vcpkg cache cache every
    time the install script changed.  That often destroyed too much, and
    the builds cannot complete with an empty cache (sometimes we are
    lucky).  Furthermore, sometimes the vcpkg definition of the cached
    packages changes, and the dependency trick did not catch that problem.
    
    I think the new approach, where only the packages in the cache that need
    rebuilding are cleared, is probably going to give us better build times.

[33mcommit aa6f3fa9586fe8828320b465a54b4b6f703bc881[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Oct 23 21:08:08 2018 +0200

    Generalize `AsyncRetryUnaryRpc`. (#1322)
    
    This is a part of `AsyncMutateRows` implementation (#1217).
    
    BulkMutations have to be retried but unlike most RPCs, only
    the mutations which were not confirmed should be resent. That creates a
    need for retrying operations other than RPCs, hence this generalization.
    
    The generalization is straight-forward - parameterize submitting
    requests by introducing an `Operation` class. It can encapsulate unary
    regular RPCs (`AsyncUnaryRpc`) or more complex operations like
    `BulkMutator` (in the future).
    
    There are no tests because this is just a refactor and doesn't add any
    logic.

[33mcommit 2ca79f695b01802356b9b49bdaf97070e84f3ed5[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Oct 23 18:04:59 2018 +0200

    Document a oneliner to only reformat changed files (#1324)
    
    Document a oneliner to only reformat changed files

[33mcommit 0e718cc90b87aa2485f604271c5ad437319118c6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 23 06:22:24 2018 -0700

    Refactor integration test fixture to common class. (#1316)
    
    The storage integration tests had a few functions in common, this PR refactors
    these common functions to a single place. This is part of the work for #1282.

[33mcommit 0cd4c5f8c16c3be9bda8e854e91468f59fbf6f02[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Tue Oct 23 15:10:57 2018 +0200

    Add async operations with streaming responses. (#1321)
    
    This is implemented by adding a AsyncUnaryStreamRpcFunctor, which
    implements the stream lifecycle state machine. In order to achieve that,
    enqueued async operations had to start reporting to the completion
    queue, whether it should keep them or remove them on a notification
    event. AsyncUnaryStreamRpcFunctor indicates to the queue that it should
    be removed after the whole stream is finished.
    
    Disposition is handled differently in the streamed version of the
    functor than it is in the single-RPC. The assumption I made (which I
    will double check in integration tests) is that if a stream is
    cancelled, the final gRPC status will hold that information. Due to
    that, the callbacks for the streaming API don't use AsyncResult. I'd like to
    homogenize the non-streaming API later to resemble this one.

[33mcommit 3db1772b7846111e32bba8db9aae1bb92d37356d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 22 19:35:44 2018 -0700

    Implement wrappers for stat(2). (#1319)
    
    We want to warn users when they are using the wrong file type with
    UploadFile(). To do this we need to query the file type. This PR
    introduces wrappers for stat(2) that work on both Unix-like systems and
    Windows.  The wrappers are modeled after the C++17 `std::filesystem`
    functions and types, and thus follow the naming conventions from the
    standard.

[33mcommit 97c79a8a167fee39dc056869cd9faeea8b7b3d1f[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Oct 22 02:50:05 2018 +0530

    Adding Implementation for noex::InstanceAdmin::AsyncDeleteCluster (#1318)
    
    Fixes #1267.

[33mcommit 568923e973da64da6892e1a75dfa96178ce4b5d0[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Mon Oct 22 02:48:49 2018 +0530

    Implementing noex::TableAdmin::AsyncDropRowsByPrefix and noex::TableAdmin::AsyncDropAllRows. (#1317)
    
    This fixes #1252 and #1253.

[33mcommit 36d3b355bbebb6db1c9e132e55fdce30deda2ebd[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Oct 22 02:47:40 2018 +0530

    Added documentation of CheckAndMutate to modify a value only if it exists (#1201)
    
    Fixes #1189.

[33mcommit 1ea90ead526cc25aaa1a3da87bd95bc4dbee8545[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sun Oct 21 08:23:20 2018 +0530

    Implement noex::TableAdmin::AsyncModifyColumnFamilies (#1315)
    
    This fixes #1251.

[33mcommit 50d6433402b08692ddc32b3cd15a85cd3c997641[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Sun Oct 21 08:22:55 2018 +0530

    Implement noex::InstanceAdmin::AsyncGetCluster (#1313)
    
    This fixes #1268

[33mcommit 96e67e6a261cb34fea6d1dab73186d56a1d143da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Oct 20 08:31:42 2018 -0700

    Add crc32c dependency (#1312)
    
    This will be used (obviously) to implement the CRC32C checksums,
    just like we compute MD5 hashes.  Also, note how easy it is to
    incorporate a properly packaged library.

[33mcommit 1a3b7c9dce94dce5a15a1db5b61a4ef0c692ae92[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 19 17:46:51 2018 -0700

    Refactor code to generate random lines. (#1307)
    
    This is part of the work for #1282.

[33mcommit 1c263611ebb8075b8b2d284094149a55307057d2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 19 17:44:58 2018 -0700

    Refactor endian byteswap (#1314)
    
    I need functions to convert 32-bit numbers to Big Endian for the
    CRC32C hashes. We had something similar in Bigtable, but with 64-bit
    numbers. I think it is better to have such code in one place. I also
    added the functions for 16-bits because they are easy.

[33mcommit 9d53a97147853f6aea67b55a4c7767766d2cf79c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 19 17:43:46 2018 -0700

    Refactor target definitions to cmake/external. (#1310)
    
    When using external projects it makes more sense to define the targets
    in the same place where we define the external project. This is (I think)
    more readable and easier to maintain. Part of the changes for #1248.

[33mcommit f7fc371286abdb1a78dc59e03b58e8dbe60e95ae[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Oct 19 21:05:00 2018 +0530

    Implemenation of AsyncCreateTable (#1309)
    
    This fixes #1249.

[33mcommit b7806e37f3c81c7f70f9e2f17f5cd27b04e8b1b2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 18 17:19:11 2018 -0700

    Move GcsObject class to a separate file. (#1304)
    
    This is part of the work to split the testbench into smaller files.

[33mcommit 5252992d27529c82d76135027e368e22de834376[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 18 10:46:47 2018 -0700

    Simulate hash failures (#1303)
    
    Implement new option to inject custom headers.
    
    We will use a custom header to request specific faults from the
    testbench.  It may also be useful if we ever add a header to the
    protocol and the library has not been updated yet.
    
    Verify that mismatched MD5 hashes result in errors.
    
    This PR introduces new integration tests to verify that data corruption
    on both uploads and downloads is detected. Or more precisely, that
    mismatches in the MD5 hash are detected (or detectable for builds
    without exception).
    
    Use a separate file for this integration tests because the
    object_integration_test.cc file is too large already. In a future PR we
    will refactor more tests to this new file.

[33mcommit e47f47fdc8509c497b49fdad6f61806f7fc6e4d9[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Thu Oct 18 19:37:15 2018 +0530

    documenting samples for ReadModifyWrite (#1199)
    
    Added documentation for Table::ReadModifyWrite, this fixes #1181 and #1182

[33mcommit 63fb2881196d881ad484bcdace690306771dfdcc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 17 04:59:39 2018 -0700

    Move GcsObjectVersion class to a separate file. (#1302)
    
    This is part of the work to break the testbench script into smaller
    pieces.

[33mcommit ba8d10643bff97f2626c207642cae49f56e93f63[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 16 19:44:17 2018 -0700

    Fix warnings about sscanf(). (#1301)
    
    MSVC warns about using sscanf() because it can be unsafe. We are (I
    believe) using it in a safe way, but I do not want to disable the
    warning for all files. First because we might use it unsafely in a
    future file, and second because the macro used to disable this warning
    disables a lot more than just sscanf() warnings. So make a very targeted
    removal of the warning only in the files where it is relevant.

[33mcommit 3f96177a48442982e711175ba84e0ac1537c9f76[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 16 13:39:55 2018 -0700

    Fix potential data loss warnings. (#1299)
    
    MSVC is much better than other compilers at telling you when the
    integral types you are using may not be safe. Fixed the warnings by
    using the right types.

[33mcommit 40d3f1f94f4ebeb4c15d2a588062eadacfe02b45[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 16 13:22:02 2018 -0700

    Fix size_t -> int conversion warning. (#1298)
    
    MSVC warns about implicit conversions from `std::size_t` to `int`, as
    `int` may not be large enough to fit a `std::size_t`. In this case
    we "know" it fits because all the platforms we support have `int` with
    at least 32 bits, and the data is not likely to exceed a few MiB, much
    less INT_MAX.

[33mcommit c67e15b7b70fc6b3c94a761f70abc0f4d63a0cdb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 16 13:21:37 2018 -0700

    Make dependency versions configurable. (#1296)
    
    This fixes #1009. It makes it possible for users to configure the
    version of each dependency when compiling with external projects:
    
    ```
    cmake -H. -Bbuild-outpout \
       -DGOOGLE_CLOUD_CPP_GRPC_VERSION=... \
       -DGOOGLE_CLOUD_CPP_GRPC_SHA256=...
    ```

[33mcommit f88f5e384a6dd524c44983b32c3b3e36ddd9c530[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 16 13:15:59 2018 -0700

    Move GcsBucket class to its own file. (#1293)
    
    This is part of the work to break the testbench script into smaller
    pieces.

[33mcommit a1b6d9a04c183afa166b6fddf3723f670a036971[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 18:15:38 2018 -0700

    Do not use std::getenv() on Windows. (#1295)
    
    On Windows std::getenv() is not thread-safe, the pointer returned might
    become invalidated by a concurrent call to _putenv_s() or a related
    function:
    
    https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/getenv-wgetenv?view=vs-2017#remarks
    
    While we only modify the environment in the tests, the applications
    using the client libraries might modify the environment for their own
    reason.  With this change we use the thread-safe _dupenv_s() function on
    Windows.

[33mcommit 9a65b735a3ec8960dcb76c340ed365ea29bc2e22[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 14:21:31 2018 -0700

    Compute MD5 hash on uploads. (#1284)
    
    With this PR all uploads compute MD5 hashes by default, and compare them
    against the hash value reported by the service. If there is a mismatch,
    and exceptions are enabled, an exception is reported. Without exceptions
    the application needs to check the values themselves.
    
    Note that this validation is on the client side, so the corrupted data
    is already stored by GCS by the time the error is detected. This is not
    as good as sending the hash value before the data, but we cannot do that
    when the data is generated dynamically.

[33mcommit 1122fbdd5ff4652d469def3bcc764267dfd067ac[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 13:37:31 2018 -0700

    Fix doxygen comments. (#1291)
    
    I changed the signature for the async functions, and neglected to make
    the same changes in the Doxygen documentation.

[33mcommit e4472d0ef7e1e448892b7d9f081c56cd71324ccf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 13:09:47 2018 -0700

    Fix function to generate message boundaries. (#1286)
    
    The function to generate a message boundary was not working if the
    initial string was found in the message. I found this because MSVC
    issues a warning when the value of string::find() is discarded, which it
    was in this case (creating an infinite loop too I think).
    
    This is why we cleanup warnings, because sometimes they show you bugs
    that you could not find otherwise.

[33mcommit 922190c6d1db60c9ec33e86dd31428ef5ebd31f6[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Oct 16 01:21:23 2018 +0530

    Better landing page for Bigtable Doxygen Documentation (#1290)

[33mcommit 84e44fddff8db51c855208e1c18bc286899ad28f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 12:50:24 2018 -0700

    Speedup code coverage builds. (#1292)
    
    This will speed up the code coverage builds. We needed to exclude the
    ccache directory when searching for coverage files, there are copies of
    the .gcno files there that confuse gcov(1).

[33mcommit 771e7b87d9aaf83d1ca810fb6c317b71fd08adf8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 12:49:52 2018 -0700

    Use a single option to control dependency sources. (#1281)
    
    This is part of the work for #1248. It introduces a configuration option
    to set the source for all dependencies. As we add dependencies (e.g.
    zlib, libcurl, google/crc32c, etc.) they will all share this dependency.

[33mcommit 3ef36c3058481003f98cc48002a10bb2f524317c[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Oct 15 23:09:16 2018 +0530

    Implement noex::InstanceAdmin::GetInstance (#1283)
    
    This fixes #1263.

[33mcommit 5e362a2118831e812158bd4f9ef5c1a6fc9018cc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 10:37:11 2018 -0700

    Fix warnings about MT vs. MD options with MSVC. (#1285)
    
    MSVC has different runtime support libraries for static vs. dynamically
    linked programs. Because gRPC does not support shared libraries on
    Windows, we must link statically when we use gRPC. But adding the "use
    static runtime" option (/MT or /MTd) creates a warning because the "use
    dynamic runtime" option is already in the command-line. The solution is
    to *replace* the option instead.

[33mcommit b4000c2fc184cd58388e192bf625b644aff73cf5[m
Author: Marek Dopiera <marek@unoperate.com>
Date:   Mon Oct 15 19:18:49 2018 +0200

    Make call to std::abort() optional. (#1287)
    
    Add `{Get,Set}TerminateHandler` function which mimic std::set_terminate.
    If exceptions are not enabled via (`GOOGLE_CLOUD_CPP_HAVE_EXCEPTIONS`),
    the handler installed by those is called instead of plain abort. Default
    behavior was not changed.
    
    This fixes #327.

[33mcommit 17873573c7ccc823ecbd66b0be7b044201060426[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 15 08:12:21 2018 -0700

    Fix test flakiness against production. (#1288)
    
    The Kokoro builds are failing because when running the examples we were
    leaking the table created for this purpose. First I fixed the code to
    clean up the leak. I also made the table names more unique, while the
    table names were random, there were only ~32767 possible names, as more
    and more runs leaked those names we had more and more flaky runs.

[33mcommit d43086b4bee2cd3b90332465e58d75bd9b8c951a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Oct 14 18:39:05 2018 -0700

    Use GTest::* targets for gtest & gmock. (#1280)
    
    Now that googletest and googlemock are external projects (as opposed to
    submodules) we can use them consistently as GTest::gmock, GTest::gtest,
    GTest::gmock_main, and GTest::gtest_main. Those targets are present (or
    can be created) regardless of how we find these libraries: as external
    projects, via find_package(), or via pkg-config.
    
    This fixes #310.

[33mcommit 056f232901b1cf1837e26d7f0b4d666f2e82e538[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 23:56:09 2018 -0400

    Fix googletest when used as an installed package. (#1278)
    
    Sigh, the CMake modules for GTest are a mess. This adds a test to verify
    we can work with a installed googletest, and fixes some problems with
    the googletest targets for that case.

[33mcommit c970b67a6fd935a92e2c44664b0ea06be071b815[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 23:55:45 2018 -0400

    Disable parallel runs for ctest. (#1279)
    
    gRPC has a bug:
    
    https://github.com/grpc/grpc/issues/16872
    
    that prevent us from running two test programs at the same time on
    Windows. Apparently I got lucky when I tested this the first few times.
    Sigh.

[33mcommit d47e2db7924a3801470bd65cbbe326cd54cd6683[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 22:02:04 2018 -0400

    Compute MD5 hashes on downloads. (#1240)
    
    The MD5 hash is computed by default during downloads, and we also
    capture the MD5 hash returned in the headers. If exceptions are enabled,
    and the two values do not match, an exception is raised when the
    download completes.  If exceptions are disabled, the values are captured
    as part of the ObjectReadStream, and the application can compare them.
    
    The application can also disable the computation of the hash for a
    particular download.
    
    Sometimes the server does not have a MD5, we never report errors in that
    case.

[33mcommit 99233a51c36cdd6aa5bb889b80542a859c35ef89[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 22:00:41 2018 -0400

    More splitting of testbench.py (#1222)
    
    This moves the functions to manipulate the global collections of buckets
    and objects to testbench_utils.py that will make it easier to split the
    GcsBucket and GcsObject classes to their own files later.
    
    * TBR: Fix ctest breakage.

[33mcommit 326eeb6fc15168727ac07c8845d824857b32973c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 18:13:42 2018 -0400

    Use Ninja as the CMake backend for faster AppVeyor builds. (#1247)
    
    Ninja is better at parallelizing builds than MSBuild, so we should get
    some performance benefits. Also the output is much cleaner, making it
    easier to fix things.

[33mcommit b38c6e6ed80ed45ff63525e750df2bd127ef50b9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 11:41:24 2018 -0400

    Implement noex::TableAdmin::AsyncGetTable. (#1210)
    
    This is part of the work for #1002.  It demonstrates that the async
    functions work for multiple clients and APIs.

[33mcommit e557d9438fc1e2e2ca04c4c223861bffbaf11ab0[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Fri Oct 12 20:26:07 2018 +0530

    Refactor code to poll LongRunningOperations (#1233)
    
    Fixes #1017.

[33mcommit cfd1347a42417a125c9abb99a5ad27f851b3a8a8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 10:22:57 2018 -0400

    Run the gcs2cbt example in CI builds. (#1239)
    
    Some adjustments to the startup scripts are needed, but the example can
    be executed in the CI builds (and should).

[33mcommit 773c31298b6f56f1adce0a1b0833a3c11aa7c096[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Oct 12 07:51:06 2018 -0400

    Create examples that upload and download files. (#1245)
    
    I needed an example of uploading a file to include gcs2cbt in the CI
    builds. And once you upload a file, you want an example of downloading a
    file too.  Eventually we will have direct functions to do this, but the
    examples are useful as they stand.

[33mcommit c3a12c1575574359bc5510d1998122eb0576c234[m
Author: Matt Houglum <houglum@google.com>
Date:   Fri Oct 12 00:27:02 2018 -0700

    Make credential Refresh() methods return a Status. (#1246)
    
    Returning a Status allows us to appropriately handle different failure
    scenarios.

[33mcommit b5adc2fd4ea2ce7020b736624b84c3aaa8758fcb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 11 19:19:23 2018 -0400

    Use external project for googletest. (#1234)
    
    googletest and googlemock have both native CMake and Bazel support. That
    makes it easy to import them as external projects with both CMake and
    Bazel.

[33mcommit 6995848f0c7f9438dd46cb72768c9d7cd419712a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 10 22:24:44 2018 -0400

    Improve AppVeyor install steps. (#1235)
    
    Currently AppVeyor has OpenSSL installed in C:\OpenSSL-v11-*, but that
    might change in the future, and sometimes I run the script manually on
    machines that do not have that directory.
    With this change the directories are removed if present, and ignored
    otherwise.

[33mcommit fc49a11c5414bb79e2ed0fabff36c302411a9d8d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 10 08:12:41 2018 -0400

    Improve coverage for Object ACL operations. (#1229)
    
    Introduce tests to exercise the failure path in Object ACL operations.

[33mcommit fd9359997c187a25f689da095f427fd528aca959[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 9 23:39:55 2018 -0400

    Improve coverage for Bucket ACL operations. (#1228)
    
    Introduce tests to exercise the failure path for DefaultObject ACL
    operations.

[33mcommit 64497796636a61e4aed53cef9b04d575df53728f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 9 23:26:09 2018 -0400

    InsertObject() computes MD5 hashes by default. (#1221)
    
    The application can provide the MD5 hash value if they know it, or
    disable the MD5 hash computation explicitly if they want to (but they
    are warned against it).
    
    A streaming upload will eventually call the destructor, which was
    crashing with exceptions disabled.  That makes it impossible to test it
    (and really hard to use it for that matter).

[33mcommit c0deef1a13a01937e010d1b9c30c556aa9b878ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 9 22:27:40 2018 -0400

    Fix CI builds. (#1232)
    
    The buildifier tool no longer builds from source on Ubuntu 18.04.
    Just download a stable binary version and run that instead.

[33mcommit 4f8e6c876e340ba685dedd98b033ce07b158ffa7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 9 17:02:58 2018 -0400

    Simplified external project. (#1231)
    
    We can use the defaults for some of the steps, which makes the code
    smaller.

[33mcommit 5ca097cd8c9f7693bda88968bb092a8f24c2a590[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 9 09:51:54 2018 -0400

    Improve code coverage for Object operations. (#1209)
    
    We were no doing any integration tests for failures, we should at least
    verify that the exceptions raised match our minimal expectations.

[33mcommit 067f12f54a6391cc5a58d85e8bd47c02e1af7bdc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 8 16:23:46 2018 -0400

    Improve code coverage for Bucket operations. (#1206)
    
    We were no doing any integration tests for failures, we should at least
    verify that the exceptions raised match our minimal expectations.

[33mcommit 0d19a848b345d1ec264837488e89cf97a47a66ee[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 8 13:58:49 2018 -0400

    Simplify treatment of protobuf as external project. (#1223)
    
    By default, protobuf decorates its debug libraries with a `d` postfix, I
    was compiling both the release and debug versions of protobuf to
    guarantee that the version without the `d` was always available. A
    simpler solution is to use `protobuf_DEBUG_POSTFIX` to disable the
    postfix altogether. As a side-effect we get slightly faster builds.

[33mcommit 9481e914b436aa3a569fe0c82f6c24004f3b8c9e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 8 13:30:10 2018 -0400

    Update landing pages to also link Storage docs. (#1227)
    
    Also update the default version to 0.2.0, this change is already
    deployed to github.io.

[33mcommit 4d23a09768e87b6430086db7f0fd0826d4228183[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 8 12:04:30 2018 -0400

    Link Google Cloud Storage from top-level README. (#1170)
    
    Finished the checklist, so we should link the library and
    documentation from the top-level README.

[33mcommit 16f1fcfe2bd4f789230a80dacca671c912b2e392[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 4 20:56:55 2018 -0400

    Remove busy loop in uploads and downloads. (#1220)
    
    I discovered this by just looking at the logs (when enabled), we were
    busy looping because I thought curl_multi_wait() would actually wait,
    but does not.  See the documentation at:
        https://curl.haxx.se/libcurl/c/curl_multi_wait.html
    for details on how the loop should work.
    
    libcurl uses similar loops (with a sleep!) in their code:
        https://github.com/curl/curl/blob/8f2bb0e3779a7a6fe20ce4b892569d7565e6ac08/lib/easy.c#L678
    
    We now follow the documented practices to write the loop, though I do
    not like them.

[33mcommit d6d846ce787b302977ee257164d32d48a7dc11e8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 4 20:50:23 2018 -0400

    Provide a function to compute MD5 hashes. (#1219)
    
    If the application does not have the MD5 hash of a string we provide a
    function so they can do the computation.

[33mcommit 4b44318488ba5492b10390c784ac37c3febe001a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 4 20:22:51 2018 -0400

    Move standalone utilities to their own file. (#1216)
    
    This is part of the work for #1187.

[33mcommit 9c88fa28743a741524668e8c58da1442c6817ef6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 4 20:19:58 2018 -0400

    Better control of #includes in the main headers. (#1213)
    
    This fixes #1208. The main headers for the library (storage/client.h,
    oauth2/google_credentials.h) should avoid including libcurl and/or
    openssl headers. Those headers drag too much system-level stuff to the
    global namespace.

[33mcommit c5981a78a762fe8a99b6ef65afef585502a98d85[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 4 20:17:57 2018 -0400

    Improve client documentation (#1215)
    
    The description of the class had a warning about incompleteness, it no
    longer applies. Since I was here, I improved the top-level documentation
    a bit.
    
    By default Doxygen sorts the member functions alphabetically, which
    makes it hard to discover related functions. Group functions by resource
    type.
    
    Finally, fixed a small TODO where `CopyObject()` was supposed to link to
    `RewriteObject()` as a better alternative.

[33mcommit 3f152521eaf2bac8e123b139add14c6bfc0ca89c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Oct 4 09:31:48 2018 -0400

    Implement user-provided checksums for inserts. (#1200)
    
    Part of the work for #564.
    
    If the application already knows the MD5 hash of
    a string, we can reuse it. This may not be very typical,
    but it is a good place to start introducing checksums.

[33mcommit 2a7c3ee281029801bc94cdbf4c9b44c980361b47[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 3 23:46:33 2018 -0400

    Improve error messages when loading credentials. (#1212)
    
    This fixes #974. The error messages when loading an invalid or missing
    credentials file were sometimes very obscure (typically some parsing
    problem in the JSON library). The new error messages should make it
    easier to diagnose the problem.

[33mcommit dc9f9725990f9688970324f5ec0a90e6b5da6b8e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 3 23:41:25 2018 -0400

    Move ErrorResponse to its own file. (#1205)
    
    This is part of the work for #1187.

[33mcommit edce37799a6c4ea7c01e6094db430504a3736ff5[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Oct 3 17:16:58 2018 +0530

    Removed grpc::StatusCode::OK from the definition of IsTransientFailure (#1203)
    
    This fixes #741.

[33mcommit 19ba97bb88e0864339a72505d4ba70f95c88cc1c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Oct 3 07:46:09 2018 -0400

    Fix object leak during integration test. (#1204)
    
    The integration test was leaking an object, not super important, but we
    prefer to be tidy.

[33mcommit 2962744100a6168b3c2cdcc5a097a252ba84345e[m
Author: Matt Houglum <houglum@google.com>
Date:   Wed Oct 3 01:16:21 2018 -0700

    Better credentials modularity (#1194)
    
    Better modularize credential types and creation logic.
    
    Better separates each group (credential types, credential creation logic, Google ADC logic) into its own sets of files. Moves methods to create credentials (either by "default" method using ADC logic or creating a specific type) into "google_credentials" files.

[33mcommit dfc89d57d1cf1bf9c1ddc031ca519d66b42e331f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 2 23:02:48 2018 -0400

    Remove object leak from examples. (#1202)
    
    Not that it matters, but the examples were leaking an object: we created
    a encrypted object using `Objects: compose` that was never deleted.

[33mcommit bf5a4f484c4d431cd291723d1a3b8b10d2fdb3d5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 2 23:02:29 2018 -0400

    Fix MSVC warnings. (#1207)
    
    MSVC defines `min()` and `max()` as macros, which creates trouble when
    using `min()` and/or `max()` in some namespace. Workaround the problem
    by wrapping the names in parenthesis (yuck).

[33mcommit 2a5b9f26919549a90d9a34d7f5e4b34197a88b2c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Oct 2 16:39:18 2018 -0400

    Implements helper classes to retry asynchronous operations (#1141)
    
    This is part of the work for #1002. Implement a retry loop for
    asynchronous RPCs. The retry loop uses the retry and backoff policies
    that are part of the library, and it introduces a idempotent policy to
    deal with partial failures in things like BulkApply.
    
    The semantics of grpc::Alarm are super annoying. Once set, they hold a
    reference to the underlying grpc::CompletionQueue, and there does not
    seem to be an easy way to release them other than running the event
    loop. Unfortunately, we cannot do that in the unit tests, because many
    operations are too mocked-out to work with the grpc::CompletionQueue
    implementation.

[33mcommit 4322561da331a743001c3e92095ae9b0bb0eb373[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Oct 2 01:18:56 2018 +0530

    benchmark takes app_profile_id as input (#1188)
    
    This fixes #1051.

[33mcommit cb9c0558931b4b0fbf09141dfae40ca22d5c15ca[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 1 15:45:51 2018 -0400

    Fix include rules for headers. (#1196)
    
    This fixes #1179. Each library should only install its public headers.
    Headers used for testing, benchmarks, and examples should not be
    installed. The internal headers are more difficult, we should probably
    install the minimum set that is used in the implementation of public
    types, but that is too fine grained to easily support.

[33mcommit 0bff27c218b22045ad71a2ffda7589712d62fa52[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Oct 1 14:20:48 2018 -0400

    Move optional out of the internal namespace. (#1195)
    
    This fixes #1099.
    
    The `google::cloud::internal::optional<T>` class became part of the
    public API, we need to move it out of `internal` or we are sending a
    confusing message to our users.

[33mcommit a2a7eb1c26435ae5f0ce8ff4809327ef03aab6f4[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Oct 1 22:25:28 2018 +0530

    Add sample snippet for TableAdmin::CheckConsistency (#1097)
    
    Fixes #1060.

[33mcommit 709201df8bceaffadb8feb08c042080c0eaabf68[m
Author: Matt Houglum <houglum@google.com>
Date:   Sun Sep 30 21:54:56 2018 -0700

    Rename InsecureCredentials -> AnonymousCredentials (#1192)
    
    Move InsecureCredentials to its own file; rename to AnonymousCredentials.

[33mcommit 537663d4bf2cc60536f3a8cec30efc38285b9bb7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 30 20:26:52 2018 -0700

    Move testbench to its own directory. (#1191)
    
    Preparing to split the program into multiple modules, part of the
    work for #1187.

[33mcommit ad0601fd8e3b8cee786fb5bb472f4479322740a3[m
Author: Matt Houglum <houglum@google.com>
Date:   Fri Sep 28 16:19:17 2018 -0700

    Moves credential code to the oauth2 subtree and namespace. (#1185)
    
    Moves credential code to the oauth2 subtree and namespace.

[33mcommit 8c9da281882a2616898f65f08d6a0a17e8b935f5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 28 14:50:14 2018 -0700

    Fix the throughput benchmarks. (#1186)
    
    The C++ and Go throughput benchmarks were not doing exactly the same
    thing. Mostly the problems were around reporting the throughput for
    the first and last chunks differently, handling short writes, etc.
    Also the reporting granularity was too coarse, changed from 10MiB to
    4MiB so we can see the breakpoint around 16MiB.
    Also made the graphs prettier: show the point clouds, use log
    regression (because it matches the data better), and do quantile vs.
    mean regression (because I hate means).

[33mcommit 1c21d5d77833367e3049a6f5a3da16a7c7eee570[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 28 13:21:20 2018 -0700

    Support MD5 hashes as inputs. (#1175)
    
    To support MD5 hashes the testbench needs to support multipart
    uploads for JSON, and needs to parse the x-goog-hash header for
    the XML APIs. This is part of the work for #564.

[33mcommit 00aebadcd70e3284c0d03c3001fd328b98a40ffd[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Sep 28 19:56:42 2018 +0530

    Documenting length limits and cost of creating Admin and Client objects (#1177)
    
    This fixes #802 and #480. Document instance id, name and cluster id length limits and cost of creating admin and clients objects

[33mcommit 32508838802eca087efbd7a5f57e476600134406[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Fri Sep 28 19:17:30 2018 +0530

    Add snippet for CreateTableFromSnapshot (#1174)
    
    Fixes #1057.

[33mcommit 219bc8387abf45395e7cdd62b9ba078e104d567d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 27 20:17:52 2018 -0700

    Support setting the user-agent prefix. (#1171)
    
    This fixes #511. It adds a configuration parameter to storage::ClientOptions that
    adds prefixes to the user-agent string.

[33mcommit 4994baf24bf077f8061f8a569ac6e9c6983eff64[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 27 20:17:15 2018 -0700

    Fix golang version of the latency benchmark. (#1180)
    
    The benchmark was just sending 128 bytes of data, it was supposed
    to be 1 MiB, oops.

[33mcommit 076f0795df00a676fe42ba8c581792f0e728a5ae[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Thu Sep 27 12:58:23 2018 -0700

    Add region tag around read object sample (#1184)

[33mcommit 01f23a3705a944fa50eb0f975d0a0c4595ed692e[m
Author: Jason Zaman <jasonzaman@gmail.com>
Date:   Thu Sep 27 23:03:51 2018 +0800

    Fix CMake build issues (#1178)
    
    * cmake: Fix GOOGLE_CLOUD_CPP_GRPC_PROVIDER=pkg-config
    
    The grpc_cpp_plugin executable needs to be marked imported otherwise
    cmake will try (and fail) to build it. Also the location variable was
    typo'd.
    
    Signed-off-by: Jason Zaman <jason@perfinion.com>
    
    * cmake: set library soversions
    
    Set library soversions so CMake sets the symlinks and soversions
    properly. Install the cmake files in the correct dir.
    
    Signed-off-by: Jason Zaman <jason@perfinion.com>

[33mcommit f3505e0cd906ae6b8b6d450ae7646a77b1896532[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Thu Sep 27 11:00:03 2018 +0530

    Add snippet for GenerateConsistencyToken (#1173)
    
    Fixes #1059.

[33mcommit 05bab87035440301fc3f600596f8e627961ea614[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 26 13:26:08 2018 -0700

    Use ClientOptions to control buffer sizes. (#1169)
    
    This fixes #937. The upload and download buffer sizes were hardcoded,
    this change makes them adjustable by the application.

[33mcommit 2cdb7e3faaae2da4a6393a6c350ba726f19d784a[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Tue Sep 25 18:17:11 2018 -0700

    Add Storage quickstart region tag. (#1176)

[33mcommit 0f7da7476810a6a54a484fc179391ab8d9114b1b[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Tue Sep 25 11:26:39 2018 -0700

    Remove duplicate region tag storage_print_file_acl (#1172)

[33mcommit ca547e27f56b01ffe86b5764081fe10c299b5077[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Tue Sep 25 21:31:23 2018 +0530

    Refactor TableAdmin samples to separate file (#1167)
    
    This is part part of the work for #1107.

[33mcommit 21fd5f693a69789497daa8e91c9417c40cc959f9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 24 15:04:51 2018 -0700

    Implement more examples based on RewriteObject. (#1168)
    
    This adds an example to rotate CSEK, that fixes #1119.
    
    It also adds an example of "renaming" which is really a rewrite+delete,
    that fixes #1115.

[33mcommit 4d89f6b7591a8a1a791f89c0e4d3aedfe3378edf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 20 23:07:22 2018 -0400

    Implement Client::RewriteObject. (#1162)
    
    This fixes #816. The API returns an object that the application can use
    to iterate until the rewrite completes. There are helper functions to
    iterate until the rewrite completes. That made the unit tests are bit
    more complex, because I wanted to test the iteration. The integration
    tests also test with CSEK, so they are a bit bigger too.
    
    This PR also introduces an example and runs the example in the CI build.
    
    I expanded the integration tests to ensure we checked iterating over
    large objects too.

[33mcommit c8c392df7e4e822272fd55e915cb80127bfa1e75[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 20 21:49:24 2018 -0400

    Make the install target work and test it. (#1165)
    
    This fixes #650. To make the install target work we need to install
    nlohmann/json.hpp in a directory that does not conflict with other
    possible locations for the file. It seems that
    google/cloud/storage/internal is a good fit for that.
    
    Had to fix the CMake configuration files to define the CURL::CURL target
    if it is not defined. Some older versions of CMake (which we support)
    may not set that target and it is easier to write the CMake files
    assuming it exists.
    
    Simplified the tests for Bazel as a dependency, they were getting rather
    long.
    
    I created a test that verifies the install target by actually installing
    the code *and* using the installed code to compile a program. The same
    program is compiled with Bazel, but with our code as a dependency.
    Finally, the same test program is compiled using make(1), to verify the
    generated pkg-config(1) files are useful.

[33mcommit 667bd510cc4bfc2eae0c2a8130985c7b2549b1c4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 20 14:28:04 2018 -0400

    More speedups for Bazel build. (#1166)
    
    Use the same options for the "build" and "test" phases, otherwise Bazel
    starts the build from scratch, removing the cached files and any
    artifacts.

[33mcommit a9e625a6e2e12900baa4996d634c4431d58a7807[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 20 14:01:47 2018 -0400

    Only enable std::clog once. (#1164)
    
    This fixes #921. It was possible to enable std::clog as a backend
    multiple times, which produces too much output. Changed the Log classes
    API to make this impossible, add a test to verify it works.

[33mcommit 19d4e58532e15da043338e320fb7634c36cce337[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Sep 20 07:58:59 2018 -0400

    Build only once with Bazel. (#1163)
    
    With Bazel we are building the code 2 times when
    TEST_BAZEL_AS_DEPENDENCY=yes.  That is super slow and contributes to
    long (and sometimes failed) build times.

[33mcommit b1cea26be44be26d0907cd087736d867d4163175[m
Author: Matt Houglum <houglum@google.com>
Date:   Wed Sep 19 12:21:24 2018 -0700

    Fixes several TODOs in Credential-related code. (#1143)
    
    Fixes several TODOs in Credential-related code.
    
    - Fixes issue #769
    - Fixes issue #770
    - Fixes issue #771

[33mcommit 03b52dcfffc76b0b1003b48f752557c3d13d09c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 19 14:40:34 2018 -0400

    Improve the Doxygen landing page. (#1156)
    
    The landing page for Doxygen was sad, at least it includes a quickstart
    now, and references to more interesting documentation.

[33mcommit c367bfd2779df4df10c6e3fac1640957e74a3e24[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 19 13:24:32 2018 -0400

    Implement example of making data public. (#1155)
    
    This fixes #1121. To test the example I had to change the testbench
    quite a bit (supporting PredefinedAcl and DestinationPredefinedAcl
    correctly). I also added some constants for PredefinedAcl values, and
    introduced integration tests for all these constants.

[33mcommit b28d6f6c111d6f734567fe0165a7a28d8f16f2f3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 19 12:53:09 2018 -0400

    Use XML for read and write operations. (#1159)
    
    The XML API offers significantly better performance than the JSON API
    for read and write operations. The library automatically selects the
    XML API if the application is not using features only offered by the
    JSON API.

[33mcommit 33e18eec1fa9946a9ea600238cdbd5447256d06b[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Sep 19 19:47:44 2018 +0530

    Integration test for CheckConsistency (#1139)
    
    This fixes #1054.

[33mcommit 4fa12797c38f662632331a2ba731bddc9d773817[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 19 10:04:06 2018 -0400

    Implement ObjectRewriter. (#1154)
    
    This is part of the work for #816. It introduces a new class to manage
    rewrite loops. The `Objects: rewrite` API may require multiple calls
    before the (logical) operation completes. The ObjectRewriter offers a
    simple member function to run the iteration until it completes. For
    applications that want to be notified of progress the class offers a
    member function with a callback parameter. Finally the application can
    take full control and call `Iterate()` explicitly.
    
    This PR contains integration and unit tests for this class, but we do
    not expect application developers to construct it directly. A future PR
    will introduce the `Client::RewriteObject` member function to return a
    `ObjectRewriter`. In that PR we will introduce the examples and change
    both unit and integration tests to use the higher-level API.

[33mcommit ff5a8ea50fce5b0286dd43e110f7cdf0509fcab1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 19 07:45:19 2018 -0400

    Implement examples using "requester pays" billing. (#1152)
    
    This fixes #1117. It creates examples to query, enable, and disable the
    billing configuration in a bucket. It also creates examples to upload
    and download using the `userProject` parameter.

[33mcommit be4d50c80b047fc86bcf3ec735ee2fd86bd0cb6b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 19 07:44:47 2018 -0400

    Examples using Bucket default CMEKs. (#1151)
    
    This PR implements some examples that configure the Bucket's default
    customer-managed encryption key.

[33mcommit 27f10ad5afc02d99befc575a69285526253db6f7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 18 23:27:08 2018 -0400

    Implement Client::TestBucketIamPermissions(). (#1153)
    
    This fixes #848. It implements the API, the usual unit tests, extends
    the integration test to use the API, adds an example, and includes the
    example in the CI build.

[33mcommit a30bcd99852a9d4df1e25d85fc1b52b56e66f310[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 18 23:26:51 2018 -0400

    General cleanup of the testbench. (#1160)
    
    The testbench needed some TLC. I cleaned up missing return types, which
    are super helpful in my IDE, removed redundant comments, use
    lookup_bucket() to find buckets and raise the right error when not
    found, and generally removed warnings from the code.

[33mcommit 31d1b3c5c7044db42831ee9c6d707a953fa5b561[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 18 22:09:01 2018 -0400

    Cleanup some missing documentation elements. (#1158)
    
    A few Doxygen doc comments were missing the example paragraph, or the
    code snippet. Made a pass and fixed the ones I found.

[33mcommit c658125d02f1942e2735efe922c0907ef68a2c21[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 18 22:08:25 2018 -0400

    Cleanup attribute convenience functions. (#1157)
    
    We had inconsistent convenience functions in `ObjectMetadata` (for the
    metadata attributes), `BucketMetadata` (for the label attributes), and
    `NotificationMetadata` (for the custom_attributes). With this change we
    remove the *_count() helper functions, that fixes #1148. We also make
    sure they all have the upsert_*() helper functions, that fixes #1046.

[33mcommit 1e1f5b60d0443099ebcbe67c2277bc2bd7d285ec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 18 07:31:39 2018 -0400

    Reduce data copying in the write path. (#1149)
    
    Using [callgrind][callgrind-link] I discovered that 6% of the time in
    `Client::InsertObjectMedia()` was spent on data copying. The problem is
    we copied the buffer into the `CurlRequest`, even though we could just
    use the data provided by the caller in MakeRequest.
    
    [callgrind-link]: http://valgrind.org/docs/manual/cl-manual.html

[33mcommit ef5631778fadd20c13a490776cda3058d8e9751f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 17 21:19:26 2018 -0400

    Support for `Objects: rewrite` in the testbench. (#1144)
    
    This is part of the fixes for #816.

[33mcommit 8a7e9605b18a3746c17fdbb2b70864a81582b403[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 17 20:49:03 2018 -0400

    Implement Client::SetBucketIamPolicy(). (#1150)
    
    This fixes #847. I had to fix some of the support classes (IamBindings),
    and then implement the API, the usual unit tests, extend the integration
    tests to use the new API. This time I added two examples, in line with
    the rest of the languages, and the examples are included in the CI
    builds.

[33mcommit 85c75c2de6b4257b2ca659c64b7f7c7de845af74[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 17 16:06:55 2018 -0400

    Implement examples using Bucket labels. (#1129)
    
    This fixes #1116. It creates examples to get, set, and remove labels.

[33mcommit 1c594c38dff6c907a363c6dae7916b4b1a98500c[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Sep 18 00:34:31 2018 +0530

    fixed python script and used orderedDict (#1146)

[33mcommit 5be86a48e5b16c4b7956a37a369026bedb9543fd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 17 14:58:20 2018 -0400

    Remove static analysis build from matrix. (#1147)
    
    The static analysis build exceeds the Travis time limit (50min), remove
    the build for now, we may be able to run it on Kokoro, or
    asynchronously.

[33mcommit a45a6171770266d7d602eb89aed187d2babe6f72[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 17 12:53:56 2018 -0400

    Implement Client::GetBucketIamPolicy() (#1140)
    
    This fixes #846. It implements the API, the usual unit tests, adds a new
    integration test for the API (which will get better once we implement
    the SetBucketIamPolicy() function), adds some sample code, and makes
    sure to run the sample code in the CI builds.

[33mcommit 493a61bd01675a84264c10fc89806f8c513b729b[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Sep 17 21:07:06 2018 +0530

    Split table admin samples (#1142)
    
    Part of the fixes for #1107. It moves the table admin code snippets to their own file, to make it
    easier to parse different number of arguments in each sample.  Updated doc, doxygen, and examples_utils based on new file created for table admin examples.

[33mcommit b1264a464b0dd36a0f103de68b1bbdc54bb6f7b9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 18:21:19 2018 -0400

    Implement a throughput benchmark. (#1138)
    
    Measures the throughput to create, read, and write objects in the 250MiB
    range. It reports the throughput every 10MiB, so we can see the effect
    of the initial overhead.
    
    Changed the ClientOptions and CurlClient classes to allow 0-sized
    connection pools. They are interpreted as "no pooling".

[33mcommit eb3e0f7793387043216d975859d14c996b5a6720[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 17:35:50 2018 -0400

    Check callback parameters for asynchronous calls. (#1113)
    
    The callback parameters must meet specific requirements.
    With this change each asynchronous function enforces those parameters
    via std::enable_if<>, which (generally) produces more readable error
    messages than just letting the compiler figure it out.
    
    This is part of the work for #1002.

[33mcommit f7cd0d2c01bda0b4c86d66ac4102c13076697642[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 17:34:52 2018 -0400

    Implement Request and Response for RewriteObject. (#1136)
    
    This is part of the work for #816. It implements the request and
    response classes for this API.

[33mcommit 3f9b796134bd21fc29b1188a3c7418cbcb0afa40[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 14:14:59 2018 -0400

    Implement an example using CMEK. (#1131)
    
    This fixes #1120. It implements an example that uploads an object using
    a Customer-managed encryption key.

[33mcommit 528b62fafe97aeadccf2184b38cefd04205744d9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 13:34:29 2018 -0400

    Fixed upload of code coverage stats. (#1137)
    
    Ooops, the name of the function to dump the log was wrong, and the path
    to discover where that function is defined was also wrong. The result
    was no code coverage uploads.

[33mcommit 9a73acf9e4b8c09a5a63968270cca0607bf111dc[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Fri Sep 14 19:50:22 2018 +0530

    Sample snippet for TableAdmin::DeleteSnapshot (#1108)
    
    This fixes #1056.

[33mcommit 23acf45dcbe5c568bc57e1caf37ff514a9d87822[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 09:31:25 2018 -0400

    Implement parser for GetIamPolicy responses. (#1124)
    
    This is part of the work for #846.

[33mcommit ff33d3b98b3a9c516458b612c439eb80975b23ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 08:17:19 2018 -0400

    Move storage::StatusTraits to storage::internal:: (#1134)
    
    This class is an implementation detail, not intended for direct use by
    the application developers, needs to be moved to the `internal`
    namespace.

[33mcommit 382ddc2945b842ca7ac44e4acec426ad51b581bb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 08:14:42 2018 -0400

    Make comments a real Doxygen commit. (#1133)

[33mcommit 008fe6fa1b6bec282b52601d7367b4fc800e825b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 08:14:25 2018 -0400

    Implement a latency benchmark. (#1132)
    
    Measures the latency to create, read, write, and delete objects in the
    1MiB range. Part of the work for #572.
    
    Improve the testbench to not keep multiple versions of each object
    is versioning is disabled in the Bucket, makes it possible to run
    this benchmark against the testbench. In addition, the tesbench should
    not perform I/O in the middle of changing its state, as that can create
    race conditions with gevent.

[33mcommit d7c5bae7f86ff0506078356be263978007ea3f04[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 08:08:34 2018 -0400

    Cleanup well_known_headers.h. (#1130)
    
    Moved the WellKnownHeader<> template class to the internal namespace, as
    this class is not intended for general use, it is an implementation
    detail. I also made a pass and documented all the request options in
    this file, as they are public types and should be documented.

[33mcommit c2dd1b40f959a21a2084cb8a456d3476fb43246d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 08:08:01 2018 -0400

    Cleanup well-known parameters. (#1125)
    
    This is a pass over well_known_parameters.h cleaning a few things:
    
    - First, moved the WellKnownParameter<> template class to the `internal`
      namespace. This class is not intended as part of the public API.
      This fixes #1122.
    - Second, add documentation to each class, they are public types, they
      should be documented.
    - Finally, removed an unused type (`UpdloadType`), we will never use
      that and documenting it was more work than removing it.

[33mcommit be4684fa320b74c7ffc51631dbf30cd721fbd159[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 14 07:53:07 2018 -0400

    Implement Client::DeleteNotification(). (#1128)
    
    This fixes #1033. It implements the API, the usual unit tests, extends
    the integration test to call the API, adds an example, and runs the
    example as part of the CI build.

[33mcommit f352687b2746af237faf618c97dc4a42fe89fa48[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Fri Sep 14 08:54:14 2018 +0530

    Sample snippet for TableAdmin::ListSnapshots (#1109)
    
    This fixes #1058.

[33mcommit 2c052cb3ce1a750eb653743e5ba4d0fd13bd49a0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 12 21:41:23 2018 -0400

    Implement IAM functions in testbench. (#1114)
    
    This is part of the work for #846, #847, and #848.

[33mcommit 0ffca39be6677bdfa3c61074accef4259ace7073[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 12 21:41:00 2018 -0400

    Implement Client::GetNotification(). (#1106)
    
    This fixes #1034. It implements the API, the usual unit tests, extends
    the integration test to call the API, adds a sample, and runs the sample
    as part of the CI build.
    
    Create a new bucket for each run of the integration tests. It is more
    predictable to have a clean bucket, and deleting it releases any
    notifications.

[33mcommit 2688e0970990b7fbf95a01f25787bb776dc14263[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 12 17:53:08 2018 -0400

    Implement request classes for {Get,Set,Test}BucketIam*. (#1110)
    
    This is part of the work for #846, #847, and #848. It implements the
    request classes for GetBucketIamPolicy, SetBucketIamPolicy, and
    TestBucketIamPermissions.

[33mcommit 83493ae74e38b220a6746ae15f4d79c3ee784e55[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 12 09:15:00 2018 -0400

    Implement Client::CopyObject(). (#1101)
    
    This fixes #812. It implements the API, the usual unit tests, adds a
    new test case in the integration tests, adds the example, and runs
    the example as part of the CI build.
    
    The testbench has a number of changes to validate the encryption keys,
    we do not encrypt the data, but verify that reads use the same keys that
    were passed on the write operation.
    
    Note that `Objects: copy` only uses the `x-goog-encryption-*` headers,
    trying to use different encryption keys for the source and destination
    does not work against production, though the documentation is unclear.

[33mcommit f50743d8c0df046bfb701ce7928a3a70bf1603df[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Wed Sep 12 05:22:04 2018 -0700

    Remove SourceEncryptionKey from compose operation (#1112)
    
    This fixes #1102.

[33mcommit e276810f1ec08b0a2a36c22da7793e53f4152530[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 11 15:26:22 2018 -0400

    Implement asynchronous RPCs in completion queue. (#1084)
    
    Add support to asynchronous RPCs in CompletionQueue, and expose it via
    the `noex::Table` class, just to demonstrate that it works. This version
    does not retry any requests, that will come in a future PR.
    
    Changed the signature of the callback functions to include a
    CompletionQueue parameter (the completion queue that completed the
    request), that will make it easier to implement retry loops later.

[33mcommit 58b603dfa10b58303eeb259ea749d1ba7473fa40[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Sep 10 21:17:40 2018 -0400

    Use native zlib library. (#1105)
    
    We are using the native zlib library for libcurl, but not for protobuf.
    That is bound to create problems.  We should probably decide to use no
    native libraries by default, but this is a good fix until we do the
    larger thing.

[33mcommit 8c86ea510ceaff3b196b2645b5f704df565ae5d5[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Sun Sep 9 23:35:01 2018 +0530

    Add integration test for Snapshot CRUD operations (#1100)
    
    This fixes #1502. It implements an integration test that creates a snapshot,
    verify it shows up in the results for ListSnapshots, and GetSnapshot, then
    deletes the snapshot and verifies it does not show up in Lists.

[33mcommit 406d6d212749b4db9a267718f2bb454c609f0483[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 9 08:01:51 2018 -0400

    Implement Client::CreateNotification(). (#1096)
    
    This fixes #1035. It implements the API, the usual unit tests, extends
    the integration test to make this API call, adds an example for the API,
    and runs the example as part of the CI build.

[33mcommit 121c9e96f5264dbd5264a134c1b72051d3fc7ad5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Sep 8 21:36:01 2018 -0400

    Simplify the Client class. (#1095)
    
    When I started this class I thought the functions would be larger and
    therefore worth moving the body out.  Turned out that was not the case,
    this PR cleans up a couple of *Impl() member functions that were one
    line long.

[33mcommit 863ffa5428f8f2f7d619f8e20d32b0c6de7c92bf[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Sat Sep 8 17:32:28 2018 -0700

    Implement compose operation (#1090)
    
    * Implemented compose operation with samples(w/test)
    
    * Adding happy/retry/failure unit tests, and testbench updates
    
    * Rework optional and nit
    
    * Fix lint issues
    
    * Address review comments
    
    * Missing KmsKeyName parameter added and addressed comments
    
    * Remove one definition of DestinationPredefinedAcl

[33mcommit fe95ad17b8445bc1ca821c18d25d70c46c9c36c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Sep 8 18:01:23 2018 -0400

    Implement CopyObjectRequest. (#1085)
    
    This is part of the work for #812. It implements the request object
    for `Objects: copy`.

[33mcommit 70576e27aa13da9c93d285b81dcd10524bcf242e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Sep 8 13:48:39 2018 -0400

    Change comments to be descriptive. (#1094)
    
    * Change comments to be descriptive.
    
    This fixes #968. I made a pass and changed all comments to be
    descriptive vs. assertive. For example, we prefer "Creates a foo" over
    "Create a foo".
    
    * Ooops, missed one.
    
    Thanks to @mharris312 for pointing it out.

[33mcommit 61fe3c31fe0ea8b01e5dee07ba5a8babd1d3c381[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sat Sep 8 21:02:15 2018 +0530

    Implement sample snippet for TableAdmin::WaitForConsistencyCheck (#1093)
    
    This fixes #1061.

[33mcommit 3363840296c4e41745285a66a75e34c8e1dea97c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Sep 8 07:58:27 2018 -0400

    Implement Client::ListNotifications. (#1086)
    
    This fixes #1036. It implements the API, the usual unit tests, the
    integration tests, a code sample. Both the integration tests and the
    code sample execute as part of the CI builds.

[33mcommit 11cc22e5bdf1211cee3260048dbbecdc19326fec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 7 19:38:00 2018 -0400

    Link consistent versions of OpenSSL with Bazel (#1088)
    
    This change fixes #1087.  With Bazel builds we were linking against BoringSSL
    for the Cloud Bigtable client (via gRPC, which seems to prefer that version with
    Bazel), but against the system SSL library for the Cloud Storage client. This
    change makes both consistent. With CMake we were already using the system
    SSL library for both.
    
    Created an example to first reproduce the problem, and also to show how to
    compile and use both.
    
    BoringSSL does not implement BIO_f_base64(), and apparently the EVP_*
    functions are "better", so use them when linking against that library.

[33mcommit a08c042ea51662c00c4ca4e95bb2bbdae56281ce[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 7 19:32:14 2018 -0400

    Update recommended Ubuntu version. (#1092)

[33mcommit 573a26d4d1e8f17cdc34082b0498f3ee845c09ed[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 7 19:31:48 2018 -0400

    Simplify search path for .cc and .h files (#1091)

[33mcommit 40cf3584c925f820d60efe208d49c0812f464808[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Sep 7 14:46:34 2018 -0400

    Replace cc_proto_library() with cc_grpc_library(). (#1089)
    
    The former comes with a hefty warning about being removed "Real
    Soon[tm]", and it creates problems for users that want to import the
    common protos (e.g. google/api/annotations.proto) into their libraries.

[33mcommit 4f651e95beb797a6ab60403aacac45ac9db636f2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 18:36:05 2018 -0400

    Implement Notification APIs in testbench. (#1083)

[33mcommit 0c8e684cec569f36dbfc5d278036aa25902cc7de[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 18:22:45 2018 -0400

    Implement request types for Notifications. (#1082)
    
    The Notifications resource type needs request, just like Objects and
    Buckets do. This is part of the work for #1033, #1034, #1035, and #1036.

[33mcommit 09f2a35f3be0930f271cb1bed8cac56dbd0e2a86[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 18:03:00 2018 -0400

    Upgrade to Fedora 28. (#1081)
    
    Fedora 27 will go EOL in a couple of months (~2018-11), and 28 has been
    around for a while (since ~2018-05). Better to test with 28 since we
    have limited cycles and we cannot test with both.

[33mcommit fc22bff7ad7d1add7fea44afdf2e8b6fefbec90c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 17:30:24 2018 -0400

    Implement Client::PatchObject. (#1072)
    
    This fixes #815. It implements the Patch API, the usual unit tests,
    expands the integration tests to use the new API, adds examples, and
    runs the examples as part of the CI build.

[33mcommit 0702f01be9c12306f414f265a7dabed8934657e8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 13:58:40 2018 -0400

    Implement Client::GetServiceAccount(). (#1071)
    
    This fixes #818. It implements the API, the usual unit tests, an
    integration test (though it is sort of weak because there is no way to
    predict the value returned), the usual examples, and the examples run as
    part of the CI build.

[33mcommit 8377528ae92c7edf0f6e346b8c3d8a202d818de3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 13:03:05 2018 -0400

    Cleanup CMAKE_FLAGS hack. (#1078)
    
    I was abusing CMAKE_FLAGS to pass information down to the external
    projects. Instead we should rely (when needed), on environment variables
    if the platform requires special settings. Standard variables, like
    BUILD_SHARED_LIBS, should be passed down using -DVAR=${VAR}.
    
    Disable shared libraries for Fedora build.
    
    I was trying to be clever, but we cannot (yet) test shared libraries
    with projects that do not install the dependencies. We are using
    external projects, which install the shared libraries in non-standard
    locations, and the binaries cannot find them.

[33mcommit b368aaeb1651ab84b30974dc2345041bf4e1878b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 12:43:26 2018 -0400

    Initial version of CompletionQueue. (#1068)
    
    This is a wrapper around the grpc::CompletionQueue with a nicer
    interface. Instead of returning a `void*` when an operation completes
    this function invokes a callback provided by the application, passing in
    the result of the asynchronous operation.  In this initial version we
    support just timers, unary and streaming RPCs will be implemented later.

[33mcommit ce6334cd9de18c865a70c872f75f8640dcc43d19[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Sep 5 19:40:54 2018 +0530

    implementation of snapshottable (#1079)
    
    This fixes #379 and #1053. It implements SnapshotTable and integration tests for it.

[33mcommit 8babf54383cfe7141b7f3e343b4660782a6356aa[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 09:57:33 2018 -0400

    Remove /shutdown handler in testbench. (#1076)
    
    It long longer works with gunicorn, and there is no way we are going
    back to Werkzeug as the wsgi framework.

[33mcommit a815665d828e3b3c2a57209c5f70c33b87450e83[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 08:16:54 2018 -0400

    Implement NotificationsMetadata. (#1080)
    
    This fixes #1032. This new class plays a similar role
    to ObjectMetadata and BucketMetadata.

[33mcommit f467c7c0f3973671a0c130d691efacb856dc23b1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Sep 5 08:16:21 2018 -0400

    Reuse connections in libcurl. (#1077)
    
    This fixes #1049. We keep a pool of CURL* and CURLM* handles
    and reuse them instead of creating a new one for each request.
    The handles are separated by endpoint, i.e., there is a
    separate pool for /upload/storage/v1 and /storage/v1.
    
    Handles are created on demand, so application with a single
    thread will only have one handle of each type.
    
    The pools share a CURLSH* handle, which is an libcurl API to share
    connections, SSL state, and DNS resolution results.
    
    An explicit factory allows us to track where the default factory is
    used, and since both are internal classes ease of use is less of a
    concern.
    
    Fix memory leaks around the CURLSH* handle. This is why we
    have a ASAN build for, nice.

[33mcommit 1c93a9ac63b8a855fb029496756349a1420ddef1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Sep 4 22:45:46 2018 -0400

    Trip log file output in CI builds. (#1073)
    
    Sometimes we get super large log files, and the CI builds fail
    because we printed too much. The common solution is to just print
    the top and bottom portions of the log, because the rest is typically
    repetitive. This change refactors a few places where we did the trimming
    in different ways.

[33mcommit 4e9a06efaa2e09a6432172b072cc2147be344a2f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 2 16:35:58 2018 -0400

    Fix constructor with AppProfile and Policies. (#1075)
    
    It was not passing the app profile id value. Add some accessors and
    tests to verify it works correctly.

[33mcommit bd26ccae6571df17e00bad155e4cc118b024005b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Sep 2 14:30:43 2018 -0400

    Refactor CurlRequestBuider setup. (#1074)
    
    Lots of repetitive code moved to a single function.

[33mcommit 47804abd4741bb50ce0b1d7901bc562026369587[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 31 19:52:10 2018 -0400

    Implement ObjectPatchRequest. (#1062)
    
    This is part of the changes for #815.

[33mcommit e84cd6f8edebf146500f1406b5ad103d517e0280[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 31 19:28:36 2018 -0400

    Improve errors if the user does not set CMAKE_FLAGS. (#1069)
    
    Forgetting to set CMAKE_FLAGS is an easy mistake to make. Changed the
    README.md file to fail if the user does not set the environment
    variable. If the user types `${CMAKE_FLAGS}` without the ending `?`
    we also generate an error in the CMake file that explains what is
    going on.

[33mcommit eee2b9bc6641e2fa985f5427d46a3b7789d172c5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 31 13:42:01 2018 -0400

    Do not use std::iterator. (#1066)
    
    std::iterator is deprecated in C++17, MSVC is already generating
    warnings about using (future) deprecated classes. And while we are not
    using C++17 (or C++20 where std::iterator may finally be removed), our
    users might be.  It is easier to simply not use the class.

[33mcommit 85ae66318ef949fbf396a9d200ade2c48a092f88[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 31 13:04:10 2018 -0400

    Fix component_count type. (#1067)
    
    MSVC was producing warnings about the return type for component_count,
    on inspection, the correct type was std::int32_t: the type in the JSON
    structure is `integer` and we decided to map those to `std::int32_t` in
    the surface design doc.

[33mcommit aefaea12378a52cb6e9238f0710767768d88cb7f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 31 07:56:56 2018 -0400

    Improve coverage of all examples. (#1045)
    
    The examples are part of the code we expose to our users, and needs
    to be tested and executed.  In this PR:
    
    * We run all examples for the storage client, some were missed in
    previous passes.
    * We verify that calling the examples without an argument produces a
    Usage message.
    * We change the some of the Bigtable examples to produce better usage
    messages.
    * We enable coverage reporting for Cloud Bigtable examples, it was
    disabled because we never executed the examples before (see #492).
    
    Using the same table for the full example (aka run-full-example) vs
    running each one of the smaller examples does not work in production.
    Fixed by using two tables.

[33mcommit 5d73b5711fa86c357514874258d1f2da29d31a88[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 31 00:15:08 2018 -0400

    Initialize SSL thread callbacks when needed. (#1050)
    
    This fixes #1048.
    
    OpenSSL 1.0.2 (which is still widely deployed) does not perform any
    internal locking. Instead, we must provide callbacks to lock and
    unlock the OpenSSL data structures. Because we use OpenSSL via
    libcurl, we must perform this configuration only if libcurl is
    linked against OpenSSL<=1.0.2.
    
    In some environments multiple versions of OpenSSL are available, if we
    manage to link the library against a different version than the one used
    by libcurl, the callback configurations would not work.  So we
    explicitly check the library versions once, and fail to initialize the
    library if this is the case.
    
    Use the same SSL library as libcurl on macOS.
    
    On macOS libcurl is linked against the LibreSSL library, we need to
    link the same library in our code or we cannot safely use it with
    multiple threads.

[33mcommit 3e7fcc29145e20e77869d99059aaf4bd79e6ccc0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 30 21:51:46 2018 -0400

    Implement customer encryption keys (#1031)
    
    This fixes #1022. It implements new options for customer supplied
    encryption keys.  In addition to supporting the optional headers,
    this PR adds some functions to create the header fields from a
    binary encryption key, as well as a helper function to create the
    encryption key from a pseudo-random number generator.

[33mcommit 190eac7cd723462c1b837f85ae4085dbc6497a67[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 30 21:50:09 2018 -0400

    Fix AppVeyor builds. (#1064)
    
    AppVeyor upgraded their images in the last 24 hours:
    
    https://www.appveyor.com/updates/
    
    This update installs OpenSSL in:
    
    C:\OpenSSL-v11-Win64
    C:\OpenSSL-v11-Win32
    
    unfortunately that gets picked up by CMake and the build breaks.
    Apparently the intention is to remove these directories in the next
    image:
    
    https://github.com/appveyor/ci/milestone/95
    https://github.com/appveyor/ci/issues/2600
    https://github.com/appveyor/ci/issues/2558#issuecomment-417463121
    
    Meanwhile the workaround is to manually delete them:
    
    https://github.com/Microsoft/vcpkg/issues/4189#issuecomment-417462822
    
    For extra joy, the new compiler in this image also requires a new
    version of googletest:
    
    https://github.com/google/googletest/pull/1620

[33mcommit f3b27e0b24683088e4028513bf93a722e6204a19[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 29 16:51:41 2018 -0400

    Implement Client::UpdateObject(). (#1027)
    
    This fixes #817. It implements the API, the usual unit tests, expands
    the integration tests to use the API, adds an example, and runs the
    example in the CI builds.

[33mcommit 305f193b24bd40e35fc9b7a1085d9e9ce2fb4805[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 28 22:49:46 2018 -0400

    Implement the ContentType optional header. (#1041)
    
    This fixes #1020. It implements the parameter, adds it
    Client::InsertObject and Client::WriteObject, fixes the testbench to
    capture the header in the contentType metadata, and includes integration
    tests that use the parameter.  By default the header is set to
    application/octet-stream, because the libcurl default is plain awful.

[33mcommit 3453b5fb1ff66335b89fce3b205c4c12dc6ea6ce[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed Aug 29 07:22:02 2018 +0530

    Adding basic implementation of CreateTableFromSnapshot (#994)
    
    This fixes #375.

[33mcommit b7b449aa727cab17a3261d0f59f0cd75648b3808[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 28 16:46:10 2018 -0400

    Implement Fields optional query parameter. (#1039)
    
    This fixes #1024. It implements the parameter, extends the testbench
    with minimal support for an integration test, and adds the integration
    test.

[33mcommit 72c4628b9441bcfbb00adeb6277859714c7da3b2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 28 15:18:52 2018 -0400

    Implement the QuotaUser parameter. (#1038)
    
    This fixes #1025. It adds the parameter to all requests, and adds
    an integration test that uses the parameter.

[33mcommit 6a82ea4be7882649961948a164f255490e1d3383[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 28 00:24:26 2018 -0400

    Document the expected value instance_admin_endpoint. (#1044)

[33mcommit fbd7786537b59567ca0a3a4230cd5ce468c12737[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 27 22:32:49 2018 -0400

    Split the instance admin endpoint configuration. (#1043)
    
    The [Cloud Bigtable emulator](https://cloud.google.com/bigtable/docs/emulator) does not support instance admin operations.  When I asked (a while ago), the emulator developers were not interested in adding support for instance operations to it either.  So we wrote our own `instance_admin_emulator` to run integration tests and examples. Note also that we cannot run against production because there is not enough quota.
    
    With this PR, tests and examples that only use the Cloud Bigtable emulator continue to work as before, just set the `BIGTABLE_EMULATOR_HOST` environment variable.
    
    Tests and examples that only use the `instance_admin_emulator` can run using the `BIGTABLE_INSTANCE_ADMIN_EMULATOR_HOST` environment variable. We no longer need to temporarily set `BIGTABLE_EMULATOR_HOST` just for that test.
    
    With this PR we can run tests or examples that use both `instance_admin_emulator` and the Cloud Bigtable emulator.  Before such tests or examples could only run against production.
    
    Make new instance_admin_endpoint() protected with some friends to
    access in the tests and the one place we use it in the library.

[33mcommit 75d449ca25235078a55d90bd192aa5fc710182f6[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Aug 28 06:33:51 2018 +0530

    Use GAPIC configuration files to generate default retry parameters (#1030)
    
    This fixes #428. It introduces a program to read the GAPIC configuration files, converts them
    into a C++ header (fragment) that is then used by the library to initialized the default retry
    strategies.

[33mcommit 942e8e152d290c41b6fc886b43322033e6f5af7c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 27 10:29:35 2018 -0400

    Run the examples for realsies. (#1042)
    
    I merged the fixes for #730 too early. The tests passed because the examples
    were skipped, fixed that.  In the build without exceptions the
    ${CMAKE_BINARY_DIR}/google/cloud/bigtable/examples directory does not
    not even exist, so we have to check for its presence before cd-ing into
    it.

[33mcommit 6b6970206fa1fc40d650f3812da68e1861f54b75[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Aug 27 01:50:08 2018 +0530

    Run examples from the examples directory (#1012)
    
    This fixes #730. The examples can be executed from the examples directory.

[33mcommit 5d6907d465d2de8011623e1533227d76a04d497d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 24 12:21:37 2018 -0700

    This fixes #837. It implements the API, the usual unit tests, extends
    the integration test to use the API, adds examples and runs the examples
    as part of the CI build. Some minor tweaks to the testbench also.

[33mcommit c313463e06cf385525b9cd0eeb0d2467bf185e7c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 22 16:13:19 2018 -0700

    This fixes #838. It implements the API, the usual unit tests, extends the integration test to use the API, adds and example and runs the example as part of the CI build.

[33mcommit 3991340b12361ecb6c9b3b35a72fc1f533ef6618[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 22 15:20:39 2018 -0700

    Implement Client::PatchBucketAcl(). (#1005)
    
    * Implement Client::PatchBucketAcl().
    
    This fixes #830. It implements the API, the unit tests, extends the
    integration test to use the new API, adds the examples, and runs the
    examples as part of the CI build.
    
    * Address review comments.
    
    * Reformat with yapf(1).

[33mcommit 3af81a5fb10f68f9c66d02629c9498e603b8cf75[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 22 07:58:06 2018 -0700

    This is part of the changes for #817. Implement the request class which will used for Client::UpdateObject().

[33mcommit 7771c04371d4d7160ce2aaa02e6f509aa357314e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 21 16:12:00 2018 -0700

    Fix capitalization for Metageneration. (#1016)
    
    This fixes #856. We (I really) incorrectly capitalized MetaGeneration
    when Google Cloud Storage treats that as a single word so it should be
    Metageneration.

[33mcommit c841640768b608c1e87c22114d3f21ed51549f6a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 21 15:14:05 2018 -0700

    This is just cleanup to make it easier to maintain this file.

[33mcommit f305e4e8fa5b1de4056f7fa3b5b5ccfa565ab995[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Aug 18 18:24:32 2018 -0400

    This is part of the work for #838. It consolidate the request types in one file, like we have done for Bucket and the *Acl things.

[33mcommit de6898bbf2ceec97f1f609d9a40dcc1d4cb6531b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Aug 18 16:05:14 2018 -0400

    Implement Versions parameter for ListObjects. (#1008)
    
    We missed the optional parameter to iterate over all the object
    versions, this comes handy when you want to delete all the object
    versions in a bucket.

[33mcommit e557e91d0f37006b2ab84c4d1fca33eb475fbcc1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Aug 18 14:55:08 2018 -0400

    Handle attempts to download non-existent objects. (#1006)
    
    The code was just never signalling eof() so the application would not
    know to check the status code. Now the stream reports eof() immediately.

[33mcommit 4d66b50a70812001ef9e2b679e6bf896da31b1eb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 17 19:35:08 2018 -0400

    Upgrade to gRPC-v1.14.1. (#1010)
    
    There is an advisory that v1.14.0 is broken, upgrade to v1.14.1.

[33mcommit e6e982ed550274d48f43119173316a75756eef7f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 17 17:13:55 2018 -0400

    This fixes #834. It implements the API, the usual unit tests, extends the integration test to use the API, adds the example, and runs the example as part of the CI build.

[33mcommit 0e53692ceb98101d446f3522cdbbe80f2f7c9135[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 16 22:30:41 2018 -0400

    Implement Client::DeleteDefaultObjectAcl(). (#1004)
    
    This fixes #833. It implements the API, the typical unit tests for it,
    extends the integration test to use the API, adds a sample program, and
    runs both the integration test and the sample as part of the CI build.

[33mcommit 6371251dd4511169d3523693910d7261f23f8adb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 16 16:35:16 2018 -0400

    Implement Client::PatchBucket. (#1001)
    
    This fixes #823, and computes the Bucket CRUD stuff. It implements the
    API, the unit tests, an integration test, code snippets, and runs the
    snippets in the CI build.
    
    Thanks to @houglum for suggesting an integration test that changed all
    the attributes. In the process I discovered a misnamed field (logPrefix vs.
    logObjectPrefix), and that location is not something you can change via a
    patch request.

[33mcommit 4e649ad9e72c6e3575b1a1c7f3502956461c5142[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 16 10:47:29 2018 -0400

    This fixes #831. It adds the API, the unit tests, extends the
    integration test to use the new API, adds the examples, and runs the
    example as part of the CI build.

[33mcommit 50c33ab5a83b538e3aab07b2e70d8bc945882e6c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 15 18:07:37 2018 -0400

    Implement Client::CreateDefaultObjectAcl(). (#999)
    
    This fixes #835. It implements the API, the typical unit tests, extends
    the integration test to use the API, adds a sample program and runs the
    integration tests and the sample program as part of the CI build.

[33mcommit 41986615552e5851f8601a31356e21c9a0c7e173[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 15 18:06:55 2018 -0400

    Move Object integration tests to the right file. (#997)
    
    And once you do that some duplication became obvious so I deleted the
    ListObjects test because it is done as part of BasicCRUD.

[33mcommit b888333050ed5cf566f258ac623ce950eb790d79[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 15 11:08:57 2018 -0400

    This fixes #957.

[33mcommit f99eb7d6649f54f8dffbee5909e5bd9e38344c64[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 13 21:48:23 2018 -0400

    Implement PatchBucketRequest. (#990)
    
    This is part of the work for #823. This PR introduces classes to
    represent a request to the `Buckets: patch` API.
    
    Thanks to @houglum for helping with the subtleties around labels
    and ACLs.

[33mcommit 662a45bae8933ba9393a1822bd163cb3952824c9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 13 19:13:24 2018 -0400

    Complete and cleanup *AclRequest classes. (#996)
    
    Implement the remaining *AclRequest classes. Cleanup the code to
    consistently use the same class naming and structure across
    *ObjectAclRequest, *BucketAclRequest, and *DefaultObjectAclRequest
    classes.

[33mcommit 75c315e40c39e798e1ea300861b75b14c45b8066[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 13 19:10:10 2018 -0400

    Refactor example driver scripts. (#995)
    
    With this change the bigtable and storage examples are driven by the
    same bash functions. Also, the storage examples are easier to grok.

[33mcommit f3a136a0be806159379c25bbf98bca4d6556fa27[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Aug 11 19:57:48 2018 -0400

    This fixes #827. It implements the API, the basic unit tests,
    extends the integration test to use the API, adds a code sample,
    and runs the code sample, integration test, and unit tests as
    part of the CI builds.

[33mcommit 51dbb8e5d7a20cdb17348aa86115e6a68a121b82[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Aug 11 19:55:19 2018 -0400

    Refactor driver scripts for examples. (#993)
    
    The drivers to run the examples during the CI build were masking some
    failures. Refactor them to make this less likely.

[33mcommit ae6614f1cb7c65045681cf8e9448d742834818da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Aug 11 15:31:45 2018 -0400

    Use random object names in integration test. (#991)
    
    This fixes #681. Random object names make it less likely that two tests
    running simultaneously will conflict with each other. When I first wrote
    this test we did not have the pseudo-random number helpers in
    google::cloud, and left a TODO to fix them, time to do that.

[33mcommit acc8776a21e39fe3c6b0514ffbb926d04789278f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Aug 11 11:23:25 2018 -0400

    Implement Client::ListDefaultObjectAcl. (#989)
    
    This fixes #836. It implements the API, the unit tests, a basic
    integration test, some sample code, and runs both the integration test
    and sample code as part of the CI builds.

[33mcommit d00b5214b0468890eb0d374d1fd3bc5fdae95069[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 9 23:33:08 2018 -0400

    Implement Client::UpdateBucket. (#988)
    
    This fixes #824. It implements the API, unit tests, extends the
    integration test to run this API, and a (very small) example. The
    integration tests and example are part of the CI build.
    
    Also fixed BucketMetadata because I accidentally droppped one of
    my commits earlier.

[33mcommit ef80bda6f323a2c968baf0651c584b4eae55eb99[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 9 17:49:00 2018 -0400

    DefaultObjectAccessControls request objects. (#985)
    
    * DefaultObjectAccessControls request objects.
    
    These objects represent each of the of the DefaultObjectAccessControls
    APIs.
    
    * Address review comments.

[33mcommit 85434b5647fb7c5d8a8d7d91074c07cb0036ef77[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 9 17:41:59 2018 -0400

    Implement Client::CreateBucketAcl. (#970)
    
    This fixes #829. It implements the API, unit tests, extends
    the integration test to use this new API, and adds a sample
    snippet.

[33mcommit 03a71b6982a2aac9d5e04c1e0094ca7145e1bdb1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 9 14:41:24 2018 -0400

    Implement Client::GetBucketAcl. (#979)
    
    * Implement Client::GetBucketAcl.
    
    * Address review comments.
    
    * Add sample function to dispatch table.

[33mcommit ae07c6c662cae8b05664dd8d1960634721ee3312[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 9 13:53:29 2018 -0400

    Remove unused modifiers for *Request objects. (#981)
    
    Most the the *Request objects had modifiers that were not used,
    or were used only in tests.  Removed them.

[33mcommit bef252113794134448ac5e845e94325796a6d2d6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 8 22:38:45 2018 -0400

    Integration tests for CreateBucket/DeleteBucket. (#987)
    
    This fixes #821. It implements the integration tests, and runs
    the examples as part of the CI build. Oh, and I fixed some bugs
    caught by actually running these things </shame>.

[33mcommit 28ad12a662292d26c4bbd8c8d87374eb944ffcc1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 8 21:45:26 2018 -0400

    Implement DefaultObjectAcl support in testbench. (#984)
    
    This will be used in the DefautlObjectAccessControls CRUD APIs,
    such as #836.

[33mcommit faaa63c3ab4f04b4ce3b3fc8e59138e763f90e07[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 8 16:38:14 2018 -0400

    Implement Client::CreateBucket (#983)
    
    This is part of the work for #821. It implements the API, the
    unit tests, and the code samples. The code samples do *NOT* run
    in the CI build yet, because we need to implement DeleteBucket
    or the tests will constantly leak buckets. For the same reason,
    the integration tests do not call this API either.

[33mcommit 2e6583d1a808a93449870993616c81545bb3f728[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 8 15:33:06 2018 -0400

    Put all ObjectAccessControls request in same file. (#982)
    
    One of the ObjectAccessControls request classes was initially in its own
    file, but we are now keeping them all together.

[33mcommit 38d4e147e09ef574c00b748ea755ec6310de1a8a[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed Aug 8 19:10:15 2018 +0530

    Optimize ReadModifyWrite rule copying  (#918)
    
    Fixes #336. Avoid copying rules when passed to ReadModifyWrite.

[33mcommit 72680a0447349dcc89f7a4806b70806c8f5052f2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 7 23:25:05 2018 -0400

    Implement Client::DeleteBucket. (#978)
    
    This fixes #820. This PR implements the API, a unit test, and
    ads some sample code.  The sample does not run in the CI build
    because we need #821 for that. Likewise, we cannot implement an
    integration test without #821.

[33mcommit 20d8db98b532726072e373fc5d35c12165c31e4e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 7 21:28:12 2018 -0400

    Implement Client::CreateBucketRequest. (#977)
    
    This is part of the changes for #821. It introduces the request
    object to create a bucket, and the corresponding query parameters.

[33mcommit f7a3b9a5232966c9e4afe677d8cf54d3b3d10ac0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Aug 7 09:23:52 2018 -0400

    Move make_unique to google/cloud/internal. (#976)
    
    This is generally useful, and we miss it in google/cloud/storage
    sometimes.

[33mcommit 5f191e118704e4d0f1fd157e105e32b3ce3ae57c[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Aug 7 03:43:27 2018 +0000

    derive channel pool size from cpu count (#956)
    
    This fixes #871.

[33mcommit 5c395a067c3027f2d64a7a8a5f4394fab1edb0cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 6 20:41:32 2018 -0400

    Implement Client::PatchObjectAcl (#969)
    
    This fixes #843. It implements both overloads for the API: for
    read-modify-write and for patch-without-read. It adds unit tests
    for the API, an integration test, and sample snippets.

[33mcommit 5dabc143e9739e55c70f9994907e2ff8933b9364[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 6 20:40:30 2018 -0400

    Move chrono literals to google/cloud/testing_util. (#975)
    
    These literals are generally useful when writing tests, move
    them to the shared directory.

[33mcommit 68206b69480ee77b03241f8de1c0296152884888[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Aug 6 20:40:11 2018 -0400

    Format time points as RFC-3339 strings. (#973)
    
    We need to format timepoints as RFC-3339 strings when sending
    timestamps to the GCS servers.

[33mcommit 797c0a76301b7a1a368d34cfbba0aad6b7037177[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Aug 3 17:03:46 2018 -0400

    Unpin vcpkg version. (#971)
    
    This fixes #946. Now that vcpkg points to protobuf 3.6.1 the build
    problems on Windows should be no more.

[33mcommit 6a42c84479ffde8fd4d554a9edc2cfb01f660dc9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 2 12:04:33 2018 -0400

    Refactor Bucket requests objects to one file. (#962)
    
    Creating one file per request type was getting tedious. This is
    in preparation of adding more request types for #821.

[33mcommit f91308fc6e4256761ed7d3dc6b5dc200634f1d6f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Aug 2 10:42:14 2018 -0400

    Implement Client::ListBucketAcl (#955)
    
    This fixes #826. It implements the API, a unit test for it, an
    integration test, and the code sample. I changed the testbench
    to support BucketAcl, and I created all the request types in a
    single PR because they are fairly repetitive.

[33mcommit 14760a86c4ffab9943b476305c4fe927ad95db1c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 23:42:47 2018 -0400

    Add BucketMetadata::lifecycle field. (#967)
    
    This is part of the work for #537. It adds the lifecycle
    (optional) field to BucketMetadata.

[33mcommit fbe4b68b7d1225f23768279bea9d3240a20e5576[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 23:42:13 2018 -0400

    Use lambda for code samples. (#940)
    
    This fixes #878. It puts each example in a small lambda, so we
    can show application developers the inputs to the examples, with
    their types, without having to include all the command-line
    argument parsing noise.

[33mcommit bd3d1ebc1a6a2415b316edbb846f9f7595a9397f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 20:45:08 2018 -0400

    Fix the CI build to test `make install`. (#966)
    
    After updating the version on `master` I forgot to update the
    expected version on the test program.

[33mcommit ba907ab06d811f1c1f5e58431a2e60eecee846b5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 18:21:03 2018 -0400

    Update v0.2.x release notes [skip ci]. (#964) (#965)

[33mcommit 707db2f285d8270692dda441f8274afa18645d50[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 17:48:22 2018 -0400

    Fix optional fields in BucketMetadata. (#960)
    
    This is part of the work for #934. It fixes BucketMetadata.

[33mcommit 3ae0ad883e8c00fbb9bad699687b91a27cd5eabf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 17:43:48 2018 -0400

    Add wrappers for lifecycle rules. (#954)
    
    This is going to be used in BucketMetadata, as part of the changes
    for #537.

[33mcommit 6ee94c78d8ae8942a7939237c4a670582ae3588a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 17:08:28 2018 -0400

    Bump version number for Bigtable [skip ci]. (#963)
    
    I created the v0.2.x branch and I am cutting a release. This PR
    updates the version number on the `master` branch.

[33mcommit 98225c1178fd590bcd97601ae4196513ca83830b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 15:54:24 2018 -0400

    Propose upgrading client to Beta [skip ci]. (#959)
    
    All the bugs for the milestone are closed.

[33mcommit f144d4d86a67a90566d2529b1a0c1b3935bdfa90[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 15:23:08 2018 -0400

    Remove workaround for BlockAll filter on emulator. (#961)
    
    The emulator supports the BlockAll filter correctly, no need to
    workaround it.  This is part of the fixes for #151.

[33mcommit f37fa204f62379b9c11f4bfef1fd8d552575d83a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Aug 1 00:16:48 2018 -0400

    Actually use LoggingClient. (#950)
    
    The storage::Client was supposed to create a chain of decorated
    RawClient objects: RetryClient -> LoggingClient -> CurlClient.
    Somehow I dropped LoggingClient from the chain, created a test
    and fixed the problem.

[33mcommit eb54d8b037a34d7a71fb1412e74ff091cd557b4c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 31 22:46:55 2018 -0400

    Storage class functions should be inline. (#953)

[33mcommit 6b8853bce24e6107fb306f96abebecee163e0477[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 31 22:33:16 2018 -0400

    Implement request for PatchObjetAcl. (#949)
    
    This is part of the work for #843, it implements the request
    object.
    
    * Rename AddModifier(WellKnownHeader) to AddOption.
    
    Missed that one after all the merges, thanks to @houglum for
    spotting it.

[33mcommit f553c49224c5223b87d02a9676113de4553929f5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 31 17:44:37 2018 -0400

    Fix optional fields in ObjectMetadata. (#951)
    
    This is part of the fixes for #934. It fixes CommonMetadata and
    ObjectMetadata.

[33mcommit cfa1084349c61ca65947e069f08e104d7da9b6ac[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 31 16:48:53 2018 -0400

    Refactor storage class well-know values. (#929)
    
    I will need the well-known values separated from the
    BucketMetadata. Part of the changes for #537.

[33mcommit a5dacb763ec4a13d00f54f12d77c2eba087e2eb2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 31 14:20:57 2018 -0400

    Implement Client::ListBuckets() without project. (#942)
    
    This fixes #898. It adds a default project to ClientOptions, and
    uses that project in ListBuckets. Because of the parameter packs,
    the function to take an explicit project id is now called
    Client::ListBucketsForProject.
    
    * Address review comments [skip ci].
    
    * Address review comments.

[33mcommit ed6f7f82c5bb20a80b98c3e873b50d3ee95ad0be[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Tue Jul 31 22:18:42 2018 +0530

    Use consistent aliases for proto namespaces (#943)
    
    Fixes #648. Use consistent aliases for namespaces: **only** in the `.cc` files we
    use aliases for the proto namespaces to save typing. With this PR those aliases
    have consistent names across files for readability.

[33mcommit c674ac41d4773dac2358ddde41d918a12a3f2b39[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 31 09:47:23 2018 -0400

    Do not touch every file in ci/check-style.sh. (#948)
    
    The script to enforce our coding standards was touching each file,
    even when no changes were needed.  That forced a full rebuild
    after running the script.  For those of us who run the script
    locally, it is very incovenient.

[33mcommit 45ba3caa5b94d96de3804cedfd29dc9d20e6d401[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 31 09:46:52 2018 -0400

    Implement Client::ReadObject() using streaming reads (#938)
    
    Use the streaming read classes to read object media. I removed
    some tests because they would have become tests for "does iostream
    works". This fixes #819.
    
    * Fix tests in CentOS.
    
    The old curl library in CentOS seems to be less forgiving and
    caught a bug we had.  Fixed.

[33mcommit 7d639be8b8378f183458bac60f154630ec585f54[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 30 22:40:52 2018 -0400

    Implement the Quickstart example. (#944)
    
    This fixes #615 for realsies.

[33mcommit 36823b73ade526c85f2b227f047866642368e2a8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 30 22:30:23 2018 -0400

    Implement class to build patch requests. (#925)
    
    In the JSON API we need to send patch requests that remove fields
    by setting them to null, and both insert and set fields by giving
    their new values. This change introduces a class to make it easier
    to create these patch messages. Part of the changes for #843.

[33mcommit 5a49e08ae171553486a4321b878ef13478bedb70[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 30 20:57:42 2018 -0400

    URGENT: Fix windows builds (#947)
    
    Today was not a good day.  The Windows build broke over the weekend (maybe
    late last week, but I did not notice until the weekend).
    
    This morning I could not even troubleshoot the problem because `strawberryperl.com`
    was down, and we use that (indirectly) to build openssl on Windows:
    
    https://github.com/Microsoft/vcpkg/issues/3973
    
    I tried to do other stuff, without success. Late in the morning the site was back up.
    At first, I thought it was just a matter of adapting to the newer protobuf (3.6.0) that
    we got as part of a regular vcpkg update:
    
    https://github.com/Microsoft/vcpkg/commit/c95b6bfdc448295b66da22cfd35d34ed8302aa4d
    
    Well, the changes I made in our `cmake/*` files (included in this PR) did fix the build,
    and look like useful changes.  But then the unit tests would not pass because of:
    
    https://github.com/google/protobuf/issues/4773
    
    Which is "Not Good"[tm].  I decided to revert the vcpkg version for now, that got the
    tests to compile and pass on my Windows machine.  The programming gods wanted
    to toy with this mortal today. Because the `.appveyor.yml` file was not properly clearing
    the cache, and the builds on appveyor.com still used the protobuf 3.6 artifacts already
    cached there.
    
    BTW, this is probably why the builds did not break immediately: vcpkg reused the cached
    versions even other stuff had changed.  Our builds continued to work after that commit
    made it through.
    
    I think all the necessary changes are in now.  I will commute home and fix anything else
    that is broken when I get there.  May the programming gods be kind to you, oh faithful
    reviewer.
    
    * Use targets in add_custom_command.
    
    CMake automatically expands targets to the correct generator
    expression in add_custom_command, no need for generator
    expressions.
    
    * Set missing paths for PROTOBUF_IMPORT_DIRS.
    
    Depending on your version of CMake you get PROTOBUF_IMPORT_DIRS,
    or Protobuf_IMPORT_DIRS, or nothing:
    
    https://cmake.org/cmake/help/v3.10/module/FindProtobuf.html
    https://cmake.org/cmake/help/v3.5/module/FindProtobuf.html
    
    Make an educated guess in the file dealing with such nonsense.
    
    * Pin vcpkg to an older version.
    
    The newer version includes protobuf-3.6.0 which is broken on
    Windows.

[33mcommit 165b516a8ec82f9a644de2283bd595a3b7e109fc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 30 16:08:54 2018 -0400

    Fix optional fields in *AccessControl. (#941)
    
    Part of the fixes for #934.

[33mcommit 64a9537cad53d7b488c5e2c14edfad1e6702c062[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jul 28 08:00:10 2018 -0400

    Complete IAM implementation. (#939)
    
    This finishes #416. It tweaks the APIs for IAM to make them
    similar to other APIs in InstanceAdmin, and implements the
    examples for those APIs.

[33mcommit e089e2dfa8c7f7941aeb5bcae558cfbfafb453a3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 27 20:29:23 2018 -0400

    Renamed modifiers for requests. (#930)
    
    We need a generic name that applies to both query parameters and
    request headers, because we will be setting both.  This change
    renames "parameters" to "options".  This is part of the fixes for #843.

[33mcommit dd9690e1d7351f2f92762c56093f26b812ba8f8a[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Fri Jul 27 22:09:00 2018 +0530

    IAMPolicy APIs (#935)
    
    * Initial commit for Policy APIs.
    
    * Added unit tests for APIs.
    
    * Fixed issues.
    
    * Fixed build errors.
    
    * Initial commit for integration tests.
    
    * Integration tests for IAM APIs.
    
    * Clang-tidy fix.
    
    * Comment fix.
    
    * Addressed comments.
    
    * Indentation fix.

[33mcommit 64f040464956d8b61d60daa80405a63425a47f00[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 27 09:03:21 2018 -0400

    Implement BucketMetadata.logging (#931)
    
    Part of the changes for #537.

[33mcommit 4bfd77b7c47d045cb1cb0d979e42ea996e01b5de[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 27 00:07:37 2018 -0400

    Implement BucketMetadata::encryption. (#928)
    
    Part of the changes for #537.

[33mcommit d88dbeb77130533764f8efabfda8178a45da7abc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 26 23:59:55 2018 -0400

    Implement storage::internal::CurlDownloadRequest. (#927)
    
    Part of the fixes for #819. This is a libcurl wrapper to receive
    large downloads without blocking or allocating memory to hold the
    full download.

[33mcommit f70d494423cc91c182c04b4a1de6a7480459eb4d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 26 23:40:52 2018 -0400

    Implement Client::WriteObject(). (#926)
    
    This fixes #557. It implements the API, a unit test, an integration
    test, and the sample.

[33mcommit 494f44ec5180199f5ccc580a712c58b71dc46893[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 26 22:08:34 2018 -0400

    Implement BucketMetadata.{owner,versioning,website} (#932)
    
    Part of the changes for #537.

[33mcommit f42197d57f1edef98c18a7691b147e3acfa59ce0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 26 22:07:37 2018 -0400

    Fix builds with Ninja. (#933)
    
    We normally do not use Ninja to build, but I use it sometimes
    because it has some cool features to diagnose dependency problems.
    The introduction of external projects broke the Ninja builds
    because Ninja needs to know about the side-effects of
    externalproject_add.  More details can be found here:
    
    https://cmake.org/pipermail/cmake/2015-April/060238.html

[33mcommit 85f27dcc6d1c535bc7f34989f92a38775112160f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 25 23:47:07 2018 -0400

    Add (some) missing functionality in BucketMetadata. (#916)
    
    * Add ACLs, billing, CORS and DefaultObjectAcl to BucketMetadata.
    
    This is part of the fixes for #537.

[33mcommit 2079eff5a058be5455732076bfc8ba1f380d927d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 25 17:46:29 2018 -0400

    Implement storage::ObjectWriteStream (#911)
    
    This is a class derived from std::basic_ostream<char> that uses
    libcurl to upload data using chunked enconding. It will be used
    in Client::WriteObject(), part of the #557 changes.
    
    Use gunicorn + flask in the integration tests, Werkzeug does not
    seem to support chunked transfer encoding, and we need to test
    that.
    
    Remove a lot of hard-coded stuff.
    
    Thanks to @houglum for pointing it out.

[33mcommit a14282f129cf8dadc0ad9dc6b0742c356b1e529d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 25 16:00:32 2018 -0400

    Skip curl tests for production integration tests. (#924)
    
    This fixes #922. We do not need to run these tests in "production"
    because they already run the in the regular testbench tests
    against the same code that they would run otherwise (the httpbin
    python module).

[33mcommit e7b3778144591c3ef5e24aa20c2f48a0173873b7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 25 12:19:18 2018 -0400

    Improve README steps to build the system [skip ci]. (#914)
    
    * Improve README steps to build the system [skip ci].
    
    Reduce the number of dependencies to install, use Dockerfiles to
    test the steps. Add documentation for OpenSuSE, clarify that the
    steps for Ubuntu Bionic also work for Ubuntu Xenial. Sadly the
    steps for Ubuntu Trusty are quite convoluted, created #913 to
    improve that. Add the steps for Debian Stretch.
    
    * Address review comments [skip ci].
    
    * Addressed review comments. [skip ci]
    
    * Address review comments and typos [skip ci].

[33mcommit c6829527de3b3901482dfe99e52a5ea210787e91[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 25 09:05:51 2018 -0400

    Fix the versioned namespace in the Doxygen docs. (#923)
    
    Made a mistake in the macro definition, the macro (in Doxygen)
    expanded to `v` instead of `v0`.

[33mcommit 59ce9904784636b582a4e8bee01cc349e36df5a6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 24 22:22:23 2018 -0400

    Add parsers for int32. (#920)
    
    Some of the JSON fields are best represented by int32. This is part of the work for #537.

[33mcommit 010cf4eb0ab8eb2f91a614d9c1e6c6ab4c9b4ccb[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed Jul 25 07:05:20 2018 +0530

    Table admin examples (#765)
    
    Fixes #615: adds table admin examples.

[33mcommit 9cdbb17764d288502166d416a95abde3b59876fb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 24 21:28:11 2018 -0400

    Implement Client::UpdateObjectAcl. (#919)
    
    This fixes #844. It implements the API, the unit tests, extends
    the integration test, and adds an example.

[33mcommit ad55fd090d8d5fe190836c84fd563888cb6c14be[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Tue Jul 24 20:35:00 2018 +0530

    IAM Binding wrapper (#917)
    
    * Initial commit for policy wrapper.
    
    * Addressed comments.
    
    * Included <iterator> library.
    
    * check-style error fix.
    
    * Check-Style fix.
    
    * Added more tests and renamed functions to follow convention.
    
    * Indentation fixes.
    
    * Minor fix.
    
    * Addressed comments.
    
    * Clang-tidy fix.
    
    * Addressed comments.

[33mcommit edd17d9e4dacd8245ece5fa94f9c3600fd44e5b0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 23 16:39:40 2018 -0400

    Implement Client::GetObjectAcl. (#906)
    
    This fixes #840. It implements the API, the unit tests
    the integration tests, and the sample snippet.

[33mcommit 3acaf9975574b0c9081a17671c29d00d2dd27270[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 20 15:05:03 2018 -0700

    Simplify storage::Status operator<. (#907)
    
    Things you learn in school if you had been paying attention: std::tie
    implements lexicographical comparisons (and makes no copies).

[33mcommit fac4b570a2d6af6f789cfdce4326a113ecc4d521[m
Author: Matt Houglum <houglum@google.com>
Date:   Fri Jul 20 06:43:42 2018 -0700

    Remove using-directives; prefer using-declarations (#908)
    
    The GSG prohibits using-directives (using namespace foo), but allows use
    of using-declarations (using foo::SpecificSymbol) within .cc files.
    
    This fixes all current occurrences of using-directives under
    google/cloud/storage.  Note that while we could add
    "google-build-using-namespace" to the list of clang-tidy checks, this would
    probably break builds because of all the other using-directives in the rest of
    the code (under google/cloud/bigtable).
    
    Occurrences of using directives were found via these commands:
    $ cd google/cloud/storage
    $ grep -r -- "using namespace [A-Za-z:_]\+;" .

[33mcommit 0b5fc1b8433e3ad641caa119720b6d14c26a4ba1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 19 16:56:08 2018 -0700

    Fix integration tests and examples. (#905)
    
    Some of the tests were passing when they should not, others were
    simply missing. This gets things running again.

[33mcommit 00973e93dcf8ec0efa814b2bebb87016f1557e15[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 19 15:07:52 2018 -0700

    Implement Client::DeleteObjectAcl (#902)
    
    This fixes #839. It implements the API, the unit tests, the
    integration test, and the example.

[33mcommit 9aa24dc6a99cf41dd0cc6e9b734d0df1008a14a3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 19 12:19:19 2018 -0700

    Fix integration test driver scripts to be usable on macOS. (#903)
    
    With these changes the scripts are runnable in macOS without
    having to install the full collection of GNU fileutils and
    coreutils.

[33mcommit 09a41a62b8d712eec705470be228f3508eebf83a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 18 08:29:36 2018 -0700

    Implement Client::CreateObjectAcl. (#896)
    
    This fixes #841. It implements the API, the unit tests, the
    integration tests, and the examples.

[33mcommit 3104aa6a80d721ca09900bc1f61ed8bbc657d70b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 17 19:38:38 2018 -0700

    Refactor retry tests in google/cloud/storage. (#899)
    
    This fixes #859, eliminate repetitive code in some of the tests.

[33mcommit 62c1e06656323102e4548d01344c1bac7fb378a3[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Jul 18 01:13:34 2018 +0000

    added sample code for instance admin (#745)
    
    "Administer Instances" subtask of task #615 is addressed with the PR.

[33mcommit 1fc506fd9d15094384765a337a77bb8fcf9e652d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 17 18:07:31 2018 -0700

    Implement ListBuckets reader. (#892)
    
    This is part of the work for #822. It implements a class to
    paginate the list of buckets. This also introduces a unit test.
    We cannot close the bug because without a CreateBucket and
    DeleteBucket functions the regression tests are meaningless.

[33mcommit c278be90796d6e88bbdef7fe30165dfe51d81282[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Jul 18 01:07:06 2018 +0000

    Optimize CreateInstance and DeleteInstance in instance_admin_emulator (#897)
    
    This fixes #697 and reduces complexity of DeleteInstance.

[33mcommit 823f25fde6de5ec496dc56a6decd0e6547a10be6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 17 16:32:58 2018 -0700

    Implement new curl request wrapper for uploads. (#883)
    
    With this change we introduce support for streaming (chunked)
    uploads. This is part of the work for #557.

[33mcommit 91b0d5ac01eca57bffabb9d4df5bba6fe47835c8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 17 15:50:46 2018 -0700

    Disable recursive submodule extraction. (#900)
    
    The remaining submodules (googleapis and googletest) do not
    require recursively extracting any submodules. Using non-recursive
    submodules saves us a few seconds (sometimes minutes) in the
    buids. This is a quick win, ideally we should remove the
    submodules altogether, but that is a larger chunk of work.

[33mcommit 72fc706b92ff114e3639024a0f6a99bea5842f0b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 17 15:13:03 2018 -0700

    Fix Kokoro breakage. (#901)
    
    The Kokoro builds are breaking, apparently because the default
    compiler changed (or maybe the default changed on the servers we
    use).

[33mcommit 65269d5b3b271f4c00509be2d037b92f318d6234[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 17 10:10:03 2018 -0400

    Implement Request for multiple ObjectAccessControl APIs. (#895)
    
    This class will be used in the `get`, `delete`, `patch`, and
    `update` APIs for `ObjectAccessControls`.

[33mcommit c3b79d1f549aa0d911cbc2e19a77980f8bdfe70e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 16 22:12:22 2018 -0400

    Organize CI driver scripts. (#890)
    
    One directory per CI system makes it easier to understand what
    files are doing what.

[33mcommit 5dab7323641f90dc77bc2eb00c0d7d246afe4c24[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 16 19:45:00 2018 -0400

    Simplify driver for storage examples. (#891)
    
    Refactor common code to run the examples to a common function.

[33mcommit 2e95ff2a0e30d9fe4add80b09b255e1225b8b4bb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 16 19:44:23 2018 -0400

    Fix description of GenericObjectRequest. (#888)

[33mcommit 7973af903dbbfc8983c99e680f2ba752cfacc994[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Mon Jul 16 15:47:25 2018 -0700

    Update installation instructions for Ubuntu (#893)
    
    Missed a comment in the README.

[33mcommit 8533702f5e7f5fe6988c16f624b5f88762c43a4f[m
Author: Matt Houglum <houglum@google.com>
Date:   Mon Jul 16 10:24:07 2018 -0700

    Clean up style nits following 4613a08. (#886)
    
    Clean up style nits following 4613a08.
    
    These were pointed out in review when merging code into the internal
    repo that mirrors this GitHub repo (in changelist 203784390).

[33mcommit 0fef4e4ce103910afe57e9e553fd14c66faed27c[m
Author: Frank Natividad <frankyn@users.noreply.github.com>
Date:   Mon Jul 16 09:56:38 2018 -0700

    Update root README (#754)
    
    * Update README.md
    * [storage] Update examples README
    * Use command var
    * Fix typo in centos Dockerfile
    * Respond to review comments

[33mcommit a15c5eb8f83a9fab5ed7b076e267d07e6c0c0bcb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 16 07:53:22 2018 -0400

    Remove gRPC regression test. (#887)
    
    Having regression tests for gRPC in this repo is just confusing.
    The tests were useful to demonstrate why we needed to update gRPC,
    but now they add no value.

[33mcommit 4118c60a5c6e1ec14b767401bd6a697417993279[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jul 15 14:33:22 2018 -0400

    Pin the cmake-format version. (#889)
    
    As it is common with these formatting programs, the format changes
    as the program is upgraded, and that can break our builds just
    because some third party took action. We will update the version
    from time-to-time, and change the CMake files format at the same
    time.

[33mcommit ac784f024cc544ec30ca87cfc8fd8a58d1287c00[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jul 15 11:47:11 2018 -0400

    Initial Client::ListBuckets. (#879)
    
    This is part of the work for #822. It implements an incomplete
    client::ListObjects, but this is a good stopping point to keep
    the PRs small-ish.

[33mcommit d5c113e8cd3a4c85ff2e8e0bd92f0070de5f749a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jul 15 10:22:35 2018 -0400

    Add object access control sample. (#885)
    
    This is part of the fixes for #842. It introduces a new program
    to contain all the object access control examples. Runs that
    program as part of the CI builds, and fixes the testbench to
    support 'ObjectAccessControls: list'.

[33mcommit 64a8899a3b67893fc5fd5da97b3a83258d12891c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 13 19:25:27 2018 -0400

    Refactor to common GenericObjectRequest<> class. (#882)
    
    Several *Request classes had common code that could be refactored.
    We need to write a few more of these classes, so saving code now
    is nice.

[33mcommit c97442835b85be25a93114a51331694df10ab61b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 13 16:33:24 2018 -0400

    Implement storage::Client::ListObjectAcl. (#880)
    
    This is part of the work for #842. This change introduces the
    API and the unit tests. The integration tests and examples will
    be introduced later.

[33mcommit 7848328ee2667bf3b419860c07b702b5d3675078[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 13 16:33:01 2018 -0400

    Complete implementation of ObjectMetadata class. (#872)
    
    This fixes #693. The class can parse the full `storage#object`, as
    described in:
    
    https://cloud.google.com/storage/docs/json_api/v1/objects
    
    I also introduced modifiers for all the "writable" fields. Some of
    the refactoring touched BucketMetadata, this PR does *not*
    complete the implementation of that class though.

[33mcommit 8316110005102fe1517288e28d4a09f13f4254bf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 13 14:52:05 2018 -0400

    Implement Client::GetObjectMetadata. (#875)
    
    This fixes #814. With this change:
    
    - Client::GetObjectMetadata implements the API.
    - bucket_test includes the unit tests for
      - Normal path
      - Detecting a permanent error
      - Stopping retries after too many errors.
    - object_integration_test is modified to include a single
      CRUD test which includes this new function.
    - storage_object_samples includews a code sample.
    - The new code sample is executed by run_examples_utils.sh
    - The testbench had a bug that needed fixing.
    
    We need to split the tests: #858.
    We need to refactor the unit tests to avoid repetition: #859

[33mcommit 846e72eabe747d50766da709225612b2acb22a21[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 13 10:06:09 2018 -0400

    Use ExternalProject_Add() for gRPC. (#861)
    
    This is part of #518. It makes the management of the gRPC
    dependency homogenous between Bazel and CMake build, both
    will download the same version, as opposed to using a submodule
    in CMake and downloads in Bazel. It also should speed up the build
    by a few seconds, because the download of a single version is
    faster than downloading the full history.
    
    It also cleans up our namespace for targets in CMake, we no longer
    get random targets (such as gtest) introduced by the gRPC
    submodule.

[33mcommit 6a95e1009128a007f23e8e16212aa8f573e151ab[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 12 23:03:05 2018 -0400

    Implement ListBuckets{Request,Response}. (#877)
    
    This is part of the changes for #822. This change introduces the
    Request and Response classes, but does not use them yet.

[33mcommit a3825cd0b36024ab7ddda53259fbeab9844107e7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 12 20:32:17 2018 -0400

    Add ListAccessControl{Request,Response}. (#867)
    
    This is part of the work for #842.

[33mcommit 6706fcf4e5d8738d91783b578f888ede958da068[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 12 19:43:34 2018 -0400

    Implement wrapper for bucketAccessControls. (#869)
    
    This fixes #825. It introduces a wrapper for bucketAccessControls,
    will be needed for ListBucketAcl, GetBucketAcl and similar
    functions. I refactored ObjectAccessControl as part of this
    change because both classes are very similar.

[33mcommit 77ce2c6b205046116814cf12ef69532d10ccccf0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 12 16:36:28 2018 -0400

    Refactor CurlRequest to clarify roles. (#864)
    
    This fixes #863. As described in that bug, storage::CurlRequest
    has too many roles, which makes it hard to reuse the class in
    implementing streaming uploads and downloads. This is a large-ish
    change, please read the bug first to understand the motivation.

[33mcommit 52fc6f4ae3d3421203d99a7a18c59adce35c665a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 12 10:14:05 2018 -0400

    Undo (and prevent) reflow of copyright blocks. (#876)
    
    I committed the changes that reflowed the copyright blocks for
    CMake files by accident. Undo those changes.

[33mcommit c28d4f7c01aa83e27c217cfc5b275ce817fe60e0[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Thu Jul 12 19:20:01 2018 +0530

    Implement missing request parameters for storage::InsertObjectMediaRequest (#874)
    
    This fixes #710.

[33mcommit 592492fb637be276940acffe35858f9827f41531[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 11 23:49:36 2018 -0400

    An example of using application profiles. (#850)
    
    This is part of the fixes for #329. It could be improved, for
    example by writing a companion Doxygen document that explains
    each step, but it is fairly self-explanatory as-is (I think).

[33mcommit a6b62a278d486f3a8ddd3c6cb4dbc89e825612c5[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Thu Jul 12 06:12:58 2018 +0530

    Simplify integration tests for Table, Instance and Cluster CRUD operations (#854)
    
    This fixes #593.

[33mcommit 5e24c4fdd4d81a7b431389d0c68b86797f4a0506[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 11 20:35:23 2018 -0400

    Simplify storage default client (#865)
    
    This fixes #862. It refactors the DefaultClient template into a
    non-template class, sacrificing some testability for simplicity.
    The coverage is obtained via the (existing) integration tests.

[33mcommit 0a6b0937609328b4b5d10ea63d454d55c2ac5a10[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 11 20:03:26 2018 -0400

    Simplify changing retry / backoff policies. (#860)
    
    With this change application developers can change just the
    RetryPolicy, just the BackoffPolicy, or both. Before it they
    needed to provide both policies in the storage::Client()
    constructor, even they may want to just just one of them.
    
    Take advantage of this feature in some of the tests, that makes
    the tests simpler and demonstrates that it works.

[33mcommit 962600306999448ee94a0f55788ce3951a22f36c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 11 18:12:40 2018 -0400

    Use cmake-format to reformat all CMake lists. (#807)
    
    This is part of the fixes for #506. It enforces the formatting of
    the CMake files using the cmake-format tool:
    
    https://github.com/cheshirekow/cmake_format
    
    Naturally the files required a lot of formatting the first time.

[33mcommit 590d44bd18929d2530432a93fe82255af9ea8264[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jul 11 17:26:38 2018 -0400

    Consistently qualify types in RawClient classes. (#855)
    
    We were inconsistently qualifying classes in the `internal`
    namespace. Sometimes we said `internal::Foo`, sometimes `Foo`,
    sometimes `google::cloud::internal::Foo`. Since the RawClient class
    and its derived classes live in `google::cloud::internal` I think
    we should use just `Foo`.

[33mcommit e8a0f18676243ffc526045d4fd8d9bcadc87b38d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 10 15:46:37 2018 -0400

    Simplify definition of *Request classes. (#866)
    
    Use the CRTP [[1]] to simplify the definition of *Request classes.
    Considering that we have about 35 of these classes to write, the
    easier it is to write them the better.
    
    [1]: https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern

[33mcommit e8eeea4942778a0226888b00b1709c69d69102d4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 10 12:31:28 2018 -0400

    Implement wrapper for objectAccessControls. (#851)
    
    This fixes #832. It is not used for much now, but will be needed
    to implement the APIs to change Object Acls, and to fully
    implement ObjectMetadata.

[33mcommit 32b4beb0bd5fee994d850e1e5748d1a1dba46391[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jul 8 00:49:37 2018 -0400

    Fix memory corruption in instance emulator. (#852)
    
    Some of the integration tests were getting flaky, and one of them
    showed the instance emulator crashing. Running with valgrind(1)
    found memory corruption immediately. Calling std::map::erase()
    while an iterator is not valid, the iterator is invalidated.

[33mcommit dc704ab7ed490e97eccc58e9c760f191c95f1c85[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jul 8 00:49:17 2018 -0400

    Fix ListClusters() in instance emulator. (#853)
    
    The instance emulator was returning the same cluster multiple
    times if there was more than one instance created in the emulator.
    This was found just by code inspection, it was not causing
    problems because we never use the emulator with multiple
    instances or projects.

[33mcommit a246f7c50282fe70cc743eea9c73622f7d26a0e6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jul 7 13:23:34 2018 -0400

    Implement DeleteObject. (#810)
    
    This fixes #813. It implements
    storage::Client::DeleteObject(), the unit test, the code snippets
    for the documentation, and extends the integration test to verify
    it works.

[33mcommit 42203e973d625f048f0cdd11e9f948954409152f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jul 7 08:53:26 2018 -0400

    Implement InstanceAdmin::UpdateAppProfile() (#808)
    
    This finally fixes #780. This change implements the API, adds
    the integration tests, unit tests, and code samples.
    
    As @mbrukman pointed out, the operation is idempotent, it
    should retry.

[33mcommit 7cff5f61921daf8e606a1c593718ffb2f3eeee03[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Fri Jul 6 20:16:55 2018 -0400

    Update docs links in README [skip ci] (#849)
    
    * Remove the documentation badge: it's confusing because it's not
      actually a build status page, but links to docs; I couldn't find it in
      the README at first because I mentally ignored the list of badges;
      only realized it points to the docs when I read the source. Other
      client library pages don't use a badge for documentation, but
      explicitly link to GCP docs and client library docs via text.
    
    * Fix link to the Cloud Bigtable source code, which was moved when the
      namespace changed.

[33mcommit f875700a023bdd706333cde45aee8758b272c357[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jul 6 17:05:34 2018 -0400

    Simplify configuration of policies. (#809)
    
    This fixes #66. Until now, if you wanted to change one of the
    policies in a Table, TableAdmin, or InstanceAdmin object you had
    to pass *all* of them in the constructor. With this change you can
    just pass the ones that you want to override. That makes life
    easier for our users.

[33mcommit f6fa75d463c522072f46e5ef3cfe5918efc31fdd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 5 17:37:34 2018 -0400

    Implement GetAppProfile() and DeleteAppProfile(). (#805)
    
    This is part of the fixes for #780.

[33mcommit 714d86992b8e134c129b8bd4327eb938faf9d218[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 5 13:34:27 2018 -0400

    Automatically reformat BUILD files. (#806)
    
    This is part of the fixes for #506. The CI build will break if
    any Bazel file is not formatted following the buildifier standard.
    It also fixes the CMake functions that create *.bzl files to
    format those correctly.

[33mcommit 4550a626491a99000a6c138bc17b0153f5ffba90[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 5 12:39:15 2018 -0400

    Describe environment variables used in the library. (#804)
    
    This fixes #691. There is only one environment variable used by
    the client. We also reference the gRPC environment variables
    because the application developers may want to use them.
    
    Thanks to @mbrukman for his help.

[33mcommit b4001022f2fb407ac330ac3a1224bacc728a2926[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 5 11:19:32 2018 -0400

    Use PollingPolicy in InstanceAdmin operations. (#792)
    
    This fixes #631.

[33mcommit c61602858ee9d0c857cc192beca9cd4596079cd5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jul 5 09:58:55 2018 -0400

    Implement Create and List for AppProfiles. (#788)
    
    This is part of the work for #780. It creates the functions, unit
    tests, sample snippets, integration tests and changes to the
    emulator.

[33mcommit 2c1481b3299ceaa37d68a65a9ef2ead921b8714e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 3 16:46:26 2018 -0400

    Update googleapis version. (#791)
    
    The version we were using labeled the Cloud Bigtable replication
    APIs as alpha, which could be confusing to folks. Pick up the
    latest version to avoid this.

[33mcommit 438d46d59547b0d9eff3a15059d9683c45533816[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 3 16:12:58 2018 -0400

    Fix EnvironmentVariableRestore helper. (#799)
    
    Change the `previous_` member variable to `std::string` so we copy
    the value returned by `std::getenv()`. On Windows the pointer returned
    by `std::getenv()` is not guaranteed to remain valid after modifying
    *other* environment variables, thus the need for this copy.
    
    This fixes #796.
    
    Also always use `GoogleApplicationDefaultCredentailsHomeVariable` to
    fetch the `HOME` (or `APPDATA`) variable name.  This was a bit
    of cleanup I did while trying to figure out what was broken.

[33mcommit e61dcdddbdff2a3f45ee7e1bbf0902dde0206a71[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 3 15:59:21 2018 -0400

    Include google/cloud unit tests in Bazel build. (#800)
    
    I think originally the file had no unit tests and I forgot to
    add the Bazel rules when we added the first tests, oops.

[33mcommit 8df741f7ad53c8948e8ceaef026b01acfd2b37f3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 3 12:48:06 2018 -0400

    Workaround gcc-4.8 bug for TensorFlow. (#797)
    
    While we do not support gcc-4.8, TensorFlow does, and it was easy
    to workaround the compiler bugs this time.  We may have to revisit
    the decision to drop gcc-4.8 support altogether.  For now, just
    make the code work for the TensorFlow folks.

[33mcommit cdeb24d85ae645d2a09c831b05cbb1f965d6ddcc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jul 3 08:28:51 2018 -0400

    Actually compile and run the credentials test. (#795)
    
    Somehow I forgot to add this to the CMake file.

[33mcommit ac7cf34b5688f18f4ec68cf5e561e91a4f0d80f2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 2 21:36:29 2018 -0400

    Fix coverage for CurlRequest. (#784)
    
    Coverage dipped below 95%, fixing some low hanging fruit.

[33mcommit 8d6b6f2946857a1d0acef00136c2388917f1f0a8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 2 17:19:54 2018 -0400

    Use custom initializer for GoogleMock/GoogleTest. (#794)
    
    This fixes #789.  On Windows, with MSVC, when compiling in Debug
    mode, the runtime creates a popup dialog if an assertion fails.
    That can block a CI build on AppVeyor until it times out, and
    because the details of the error are in the dialog, no useful
    information is left in the log. With this change the main()
    function for our tests sets up the runtime to print assertion
    errors to stderr instead.

[33mcommit d35fba7f27ad932ea01f47ef105b1db6a9838780[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 2 14:21:23 2018 -0400

    New LoggingClient to trace requests. (#787)
    
    This fixes #570. With this change the high-level requests
    are logged (in a previous PR we added logging of the http
    traffic). This will help us troubleshoot problems when
    the library may be getting incorrect inputs, as opposed to
    the library sending bad requests. This also logs the returned
    objects from a http response, to trouble shoot bad parsing in
    the library.
    
    Thanks to @mfschwartz for the thorough review.

[33mcommit d3f2fe7f9491505109b4cec8215f1baed7fe052c[m
Author: Brennan Saeta <brennan.saeta@gmail.com>
Date:   Mon Jul 2 10:43:58 2018 -0700

    Typo fix. (#793)

[33mcommit ba7a631d25404702eab9a8c99d472ef55b4e22b8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jul 2 12:35:28 2018 -0400

    Add unit test for GoogleDefaultCredentials. (#785)
    
    Basically improve coverage by checking that the right type
    of credential is loaded.  The unit tests for each credential type
    already check functionality for these classes. The code coverage
    has dropped below 95% and I am picking up low handing fruit.

[33mcommit 53f822805e77ea7715f5b52c592a162c515c7219[m
Author: Gunhan Gulsoy <gunan@google.com>
Date:   Sat Jun 30 13:49:19 2018 -0700

    Fix WIN32 macro. (#790)
    
    https://msdn.microsoft.com/en-us/library/b0084kay.aspx

[33mcommit 4caba48b35647d0ad1ae6e0a85108cf753c72cb7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 29 20:55:10 2018 -0400

    Add support to enable per-call tracing. (#786)
    
    Part of the fixes for #570. Refactor the code to configure tracing
    of each RawClient member function call, in this PR just tweak the
    ClientOptions class and create a test for it.

[33mcommit 8b3df1d9e5c585208ff997778eeee7fc82f6bb68[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 29 17:17:53 2018 -0400

    Refactor EnvironmentVariableRestore to testing library. (#783)
    
    This class will be used in a future test related to #570, I think
    a pure refactor PR is easier to grok.
    
    Thanks to @mbrukman for the suggestion to rename `cloud_testing`
    to `testing_util`, the other name was kind of repetitive.

[33mcommit 45a3cfa96cd852ab38aa66d09acb585111021c32[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 29 15:29:20 2018 -0400

    ostream operators for requests and responses. (#782)
    
    This is part of the work for #570. With this change all the
    `*Request` and `*Response` classes get a `std::ostream<<`
    operator. This will be used to implement logging in a future
    version.
    
    Refactor the function to dump binary data for http debug/info
    logs to its own file so I can use it for printing request and
    response objects.

[33mcommit 1381cfe9ddd0710be58d998cce210c3c2b4bee49[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 27 22:48:49 2018 -0400

    Add sample for ListObjects(). (#772)

[33mcommit ee7bb56389af6b984dee83dde398e0f4ae3f926d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 27 22:48:16 2018 -0400

    Enable GCS integration tests in Kokoro. (#778)
    
    Had to actually compile some of the integration tests with Bazel,
    and cleanup the unnecessary debug output from the library too.
    This fixes #640.

[33mcommit 7703f46ddcfd9044422205d89a5cf6957e9b2392[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 27 22:47:24 2018 -0400

    Add (optional) logging for each http request / response (#779)
    
    This is part of the work for #570.
    
    The severity level names were clashing with existing macros in
    Win32.  In particular ERROR is a macro defined as '0' in wingdi.h,
    which sometimes we indirectly include. I tried using GCP_ as the
    prefix.  Hilariously, GCP_ERROR is also defined as 0x8000 is the
    same header.

[33mcommit 37ea4a449f2887693d82146431fa8db6c59ce5bd[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Jun 27 12:59:54 2018 +0000

    CreateCluster now takes only location id instread of full path (#775)
    
    This fixes #737.

[33mcommit 1831c8d9f90f81a0ddcdc816e4288056d1aea4b0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 27 04:38:50 2018 -0700

    Implement Read() API. (#773)
    
    Including integration tests and sample snippets.

[33mcommit 4613a08f698ff3fdb710e38545c62dc25a571e29[m
Author: Matt Houglum <houglum@google.com>
Date:   Tue Jun 26 21:00:10 2018 -0700

    Tweak JWT refresh request so it works against prod (#776)
    
    Tweak JWT refresh request so it works against prod
    
    I thought I'd testing this against prod with service account
    credentials, but I must have had user credentials set in my environment
    instead. Tested using the command below:
    
    $ export GOOGLE_APPLICATION_CREDENTIALS=<PATH_TO_MY_JSON_KEYFILE>
    $ cd build-output/google/cloud/storage/examples/ && \
        ./storage_bucket_samples insert-object <MY_BUCKET_HERE> obj1 "abc"
    
    This is a follow-up to
    https://github.com/GoogleCloudPlatform/google-cloud-cpp/commit/21f9eb75301b75605f706551a058c62dfb79e294.

[33mcommit 21f9eb75301b75605f706551a058c62dfb79e294[m
Author: Matt Houglum <houglum@google.com>
Date:   Tue Jun 26 16:03:41 2018 -0700

    Add support for basic service account credentials. (#766)
    
    Add support for basic service account credentials.
    
    This class supports going through the JWT flow to retreive an access token.  It requires supplying a JSON-formatted keyfile (which can be downloaded from the Google Cloud Console) in the filename defined in the GOOGLE_APPLICATION_CREDENTIALS environment variable. The JSON format contains information necessary for completing the JWT refresh flow, thus other formats (e.g. .p12 keyfiles) are not supported.

[33mcommit 0c8932a81dc4f30028f20d4a349dd7aa5fbb7594[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 26 05:22:43 2018 -0700

    Refactor Bucket -> Client. (#767)
    
    This fixes #759.

[33mcommit e09a0f6b34f30e6fad667f9fe9df6eedd795e586[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 25 20:03:10 2018 -0700

    Implement classes to read list of objects. (#762)
    
    This fixes #556.

[33mcommit ea73c3e12063ffb624952749b1f300ed4d9d8db9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 25 06:10:47 2018 -0700

    storage::Client to storage::internal::RawClient. (#763)
    
    This is part of the work for #759. Note that because
    RawClient is in the internal namespace we can
    remove a lot of the `friend ...` declarations.

[33mcommit 018eac84599b35818f673abf0af7e5f35467eae6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jun 23 11:09:48 2018 -0700

    Disable admin integration tests for bigtable. (#760)
    
    These tests can use all the available quota for admin operations,
    so we cannot run them. We will rely on the tests against the
    emulators instead.

[33mcommit 7dead2135bcc2695bfc78618d452e8300f3d36f9[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sat Jun 23 12:34:47 2018 +0000

    changed snake_case functions which are not simple accessors (#764)

[33mcommit 8ccccfb8920cd43d62009c2c2d12b970acd11b54[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 22 07:40:38 2018 -0700

    Use retry and backoff policies in all operations. (#752)
    
    This fixes #555, #552, and #551.

[33mcommit 7f0a45a5d057d241f400ec2a3ac50612bc7252e0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 22 05:52:47 2018 -0700

    Refactor CheckLimitedTime. (#756)
    
    This fixes #733.
    The new google_cloud_cpp_testing library is an INTERFACE library
    because it does not (yet) have any source code. If it ever does it must
    become an actual library, until then the build breaks on macOS if it is
    a regular library.

[33mcommit f5d981eb3e14334cc15601cac6758b032d2f57c3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 21 17:33:25 2018 -0700

    Move storage:: to google::cloud::storage (#755)
    
    This fixes #496.

[33mcommit d946ef0b68abb4425fcaf63caf349cd1808e23e6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 21 17:15:52 2018 -0700

    Fix include guard and the script to check them. (#753)
    
    The script to check include guards was not really exiting with
    an error code.  Fixed that and the one include guard that managed
    to sneak by.
    
    Thanks to @houglum who motivated a split of the awk script to its own file.

[33mcommit 1951297ead0eb96be0d04741d18f3be4fabd490b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 21 13:41:46 2018 -0700

    Move test-install build to Ubuntu:18.04. (#757)
    
    This is part of the changes for #19, we are phasing out
    Ubuntu:17.10 builds in favor of Ubuntu:18.04, which is a LTS
    release. Also a cosmetic fix: use `gcc` consistently, instead of
    `g++` in a handful of builds.

[33mcommit 69cc839e70af3b6bb1db518f38c917e6e0e98c6e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 21 12:44:59 2018 -0700

    Implement bigtable::OptionalRow using optional<T>. (#716)
    
    Since we have an optional template class, might as well use it.
    Note that I had to fix a few things in optional<T> to get it to
    work.

[33mcommit 81a28a4c92eab1b18c2d7e4b9cefa032e830f804[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 20 05:53:00 2018 -0700

    Implement reading of large objects (#747)
    
    Part of the work for #554.

[33mcommit 0fe3c8659184d1173618485cd6ec0525a6b1bc50[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 19 20:20:52 2018 -0700

    Refactor retry policy to google/cloud/internal. (#728)
    
    This is part of the fixes for #552. I think in a future change
    I will also replace the retry policy interfaces in bigtable
    (the new one is simpler), but I wanted a smaller change that
    just showed the code moving to a central place.

[33mcommit b6848128d30cb2d941d85d75a6a5d1bc4e0ae6dd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 19 20:03:40 2018 -0700

    Document decision regarding input validation. (#748)

[33mcommit c2e66a5720545a335bd1465930262b5fa5ab8815[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 19 20:03:15 2018 -0700

    Fix insert object operation (#749)
    
    This fixes #746. Thanks to @frankyn for identifying the problem.

[33mcommit 79040a24caa7b9e947f63262694b5d38f4c1be3a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 19 13:28:38 2018 -0700

    Refactor BackoffPolicy implementation. (#734)
    
    This is needed for #551.

[33mcommit aea5dcaa1aa330af1a3be82c029dedefbd8f56f5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 19 10:01:48 2018 -0700

    Initial iostream class to read object media. (#736)
    
    This is the first version, it just reads the first part of the
    object.  Good enough to write tests and validate the API.

[33mcommit a295e5ab2fbc92702120e7f3305b25b3601f5f74[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 19 08:41:07 2018 -0700

    Document how treatment of optional parameters [skip ci]. (#735)
    
    Document treatment of optional parameters [skip ci].

[33mcommit bfa961816eac3119d00e2628a4d34bb57f82ab90[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 18 23:03:53 2018 -0700

    Do not reuse cluster names in the example script. (#739)
    
    Reusing cluster names results in this error:
    
    Cannot re-create cluster 'cluster2' in a different instance [6=ALREADY_EXISTS] -
    
    Note that even changing the instance does not work, the cluster
    name must be unique *even after it is deleted*.  This fixes that
    problem and unblocks commits to the code.

[33mcommit 00330a7172c3a3cbe5a1c2ef590301988b2db843[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 18 18:20:10 2018 -0700

    Implement ReadObjectRangeRequest. (#725)

[33mcommit 5d6cb5f779fce51e0076399c60487183fdad62fe[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 17 19:30:41 2018 -0700

    Switch Kokoro configuration to Bazel. (#729)
    
    This fixes #642 (well this and a number of configuration changes).
    We can grant access to the Kokoro logs to particular users (and
    eventually to all of the Internet).
    
    This also free up a slot in the Travis build for more things we
    cannot do in Kokoro, and also means we can upload the test results
    to the ResultStore.
    
    It also unblocks external projects (#518) for complicated reasons.
    
    In summary, nothing major, but improves the CI a bit.

[33mcommit 964b3c9456fdcd04db638a4314b8d0b4bf74cfa1[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Sun Jun 17 20:58:38 2018 +0530

    Polling Policy one failure case handling on server overload (#731)
    
    This fixes #713.

[33mcommit 2ec76be4ac642ddff74cbff823d3175a29888440[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Sun Jun 17 03:29:35 2018 +0530

    Implement integration tests and samples for InstanceAdmin::CreateCluster (#722)
    
    Fix #422.

[33mcommit 40bc01bc953c940d899b755fd924341b86e2df73[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 15 12:14:41 2018 -0400

    Refactor bigtable/testing/random.h to google/cloud/internal. (#723)
    
    This fixes #681. We need (pseudo) random number generators for the
    same reason the Bigtable client does: to generate random data, and
    random names for buckets and objects.
    
    Thanks to @mbrukman for pointing out we do not want this as
    a public API.

[33mcommit 68f8e65be08d88cc99ffc97e05ba12ddd58b35ec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 15 07:46:09 2018 -0400

    Refactor parameter handling for *Request classes. (#718)
    
    Too much duplication, reduce the amount of code to write.

[33mcommit f4d82f3a049ba9f5665b5cddc3fa98e10b2999ab[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 14 14:59:27 2018 -0400

    Correctly initialize ClientOptions in test. (#720)
    
    The test was initializing ClientOptions with the default
    credentials. Those credentials may not exist in the CI
    environment. That generated some distracting warnings, so we
    initialize with the credentials we actually want and cleanup
    the output.

[33mcommit 0b335cb77d8963b6b68ed72fbe74006dcb88b61a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 14 13:29:09 2018 -0400

    Pass TableAdmin by value in sample snippets. (#700)
    
    This is a simpler model, no need to complicate the code for users.
    This fixes #645.

[33mcommit c5b54e819ed8c22e694020d5f148ccf9a126e358[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Thu Jun 14 18:01:48 2018 +0530

    InstanceAdmin::GetCluster Implementation and Unit Tests (#719)
    
    This fixes #643.

[33mcommit 4c8324978d47f8a293b02c88420ef2006a37b54e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 14 07:55:41 2018 -0400

    Run the examples against the GCS fake. (#702)
    
    The examples should run against the fake to avoid
    bitrot.

[33mcommit 47e279e185d4e8d86e7e6da22c87f49f2c0a1ce4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 13 17:13:05 2018 -0400

    Introduce API to create GCS Objects (#705)
    
    This fixes #553.

[33mcommit 8814ecc52cde897ce051e38394aa226d9ad866ab[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 13 16:00:19 2018 -0400

    Propose new ADR [skip ci]. (#715)
    
    Based on our discussion during #705.

[33mcommit 0121fa8dc535fc667d92f7d1d229fba6f5e6844a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 13 15:59:52 2018 -0400

    Create storage::Object class (#711)
    
    This this is just a placeholder, no real functionality implemented
    in this PR.

[33mcommit 7228b50dc12fa8a42b82773d2773301008e81b2b[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Wed Jun 13 21:18:03 2018 +0530

    Integration Test for InstanceAdmin::ListCluster (#587)
    
    This fixes #482 and fixes #423.

[33mcommit f5ca302dfadfc594ca7923608dca0cba6073ff1a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 13 11:16:00 2018 -0400

    Fix implementation of optional<T>. (#707)
    
    Add unit test and fix the implementation of optional<T>. This is
    (still) not a full implementation, nor do we intend to build one.

[33mcommit 6f175e15d14d1bb1906d88d8ebbc4b983b984497[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 13 00:01:26 2018 -0400

    Take a new snapshot for the ABI check. (#708)
    
    The google_cloud_cpp_common library ABI has changed, and thus
    we need to take a new snapshot of the ABI to receive accurate
    reports in the future. I should have taken this snapshot as part
    of #703 because I dropped symbols in that PR. In the future, once
    the ABI checks start breaking the build this will not happen
    anymore.

[33mcommit 49ba84c19de268f5c960cd2d73a04b6972aec967[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 13 00:01:04 2018 -0400

    Link CURL dependencies only if the library is static. (#709)

[33mcommit 765190206efbd81812e71a448223bd658612d660[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 12 14:18:09 2018 -0400

    Pass Table by value in the samples. (#701)
    
    This fixes #646. We want to show best-practices to our customers.

[33mcommit 05da9dc303d67a5a21b2160e70c252f7c6f37438[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 12 12:38:48 2018 -0400

    Fix typos in the style guide [skip ci]. (#706)

[33mcommit 81b0e390084982372b88660eea2faa38cda695a0[m
Author: Matt Houglum <houglum@google.com>
Date:   Mon Jun 11 17:42:14 2018 -0700

    Return "" for auth header of InsecureCredentials. (#704)
    
    Previously, this returned the header "Authorization: none". For
    anonymous API calls, we should be omitting the "Authorization" header.
    As a result, this change makes other credential types include the
    "Authorization: " prefix in their AuthorizationHeader() return value.

[33mcommit 4dc8d2f8f1f2b6b06775a95921c156a16f91b5bb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 11 20:21:33 2018 -0400

    Use functions to get build-time config. (#703)
    
    Using global (or extern) arrays is not binary compatible between
    releases, the length of the array may change from one release to
    the next. This should fix the ABI warnings.

[33mcommit fc7596457adb4eac94029901f80fe73ab1ad1be1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 11 16:07:24 2018 -0400

    Run integration tests against a fake. (#695)
    
    Our code coverage results are poor because we cannot run most of
    the code in the coverage build. This change (more of a proposal
    really), runs the code against a super simplistic fake of GCS.
    While I expect that fake to grow in complexity, and to need
    refactoring over time, I do not expect it to be much of a burden.
    
    To make it work I also introduce insecure credentials, and an
    environment variable to configure which endpoint (production vs.
    the fake) is used by the library.
    
    Thanks to @houglum for the patient review.

[33mcommit 1610821bd1a7fb249e6bd70fa9b7ee8f8dedf921[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 11 12:54:40 2018 -0400

    Include analysis reports in the Travis logs. (#698)
    
    Some of our analysis tools (the ABI compliance checker and the
    Clang static analyzer) present their results as HTML reports.
    Include the output of these reports as text when they are present.
    
    The dump-logs.sh script runs after the build is finished, and
    does not affect the status of the build, so it is the perfect
    place to include these.

[33mcommit a616fb869e0df4ad39634fe21ec1b793c6fd953f[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sat Jun 9 20:12:29 2018 +0000

    implemented integration test of DeleteCluster(#503) and enhanced instance admin emulator to support clusters in CreateInstance and DeleteInstance(#610) (#696)

[33mcommit 447a61854412f7900a53d1bff314a880f0da8edf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jun 9 08:33:57 2018 -0400

    Support query modifiers in Bucket::GetMetadata. (#685)
    
    This implements per-request query modifiers such as
    ifGenerationMatch, or userProject (#566).
    
    Thanks to @houglum for the careful review.

[33mcommit 892a1ecbd3df693fec0931dca1965caa51135b3a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 8 20:56:25 2018 -0400

    Implement a script to detect ABI changes. (#644)
    
    And add a Travis build to detect any ABI changes.

[33mcommit 543a41aecb0930cfbcbbe4d0fcce781cf7a9c05a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 8 18:29:54 2018 -0400

    Introduce ObjectMetadata class. (#686)
    
    We will use this class soon to create objects (#553).

[33mcommit 8d2288a7f9d68c9eb66c01abc7fa5e5691d83f19[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 8 18:03:18 2018 -0400

    Move `bigtable::` namespace to the `google::cloud::` namespace  (#652)
    
    This fixes #628. In general, I chose to alias the namespace in
    tests (i.e. `namespace bigtable = google::cloud::bigtable`). I
    think this is what I would have done if writing the tests from
    scratch anyway.  I preferred to use the full namespace in
    examples, while that is very verbose I would rather be explicit
    in them.

[33mcommit dd287a2d1153a1573c897023a5d89cde6e5627e3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 8 16:39:35 2018 -0400

    Refactor retry loop for install step. (#692)

[33mcommit c7a5fe18ce794d7e0418a955e17253b2a3a8ac85[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 8 15:18:48 2018 -0400

    Shorten the name of the unit tests. (#689)
    
    This fixes #688.  The build was breaking on Windows because some
    of the intermediate files in the build had too long of a name.
    I shortened the names of the unit test targets, which required
    some refactoring to make sure they remained unique.

[33mcommit 89b685dad630ec075eea496746204cc54b1641e1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 8 00:01:03 2018 -0400

    Improve code coverage after refactoring BucketMetadata (#684)

[33mcommit bda924edf30b3d6d222989ee2503504d170dd1e4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jun 7 15:40:57 2018 -0400

    Refactor BucketMetadata code. (#680)
    
    I am about to create an ObjectMetadata class, as part of the fixes
    for #553. I do not think we want to keep basically two copies of
    the same code to parse the common parts of the metadata.

[33mcommit 8eeb98f9ac0bb02aa2a7ea132100fc5515c36f4a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 6 16:05:56 2018 -0400

    Move storage to google cloud (#678)
    
    This fixes #617 and fixes #618.

[33mcommit be4db3bc8d45c8e90a1b7cc6843052b12c7dc940[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 6 12:19:56 2018 -0400

    Optimize build matrix for personal forks. (#608)
    
    Many of the builds rarely detect problems, yet they slow down
    the development cycle for folks testing their own forks. Disable
    some of the builds that are least useful.

[33mcommit 1b39cfe758967152b9179bdcd586eefbd9cba9a2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jun 6 10:07:02 2018 -0400

    Rename storage credential classes (#663)
    
    I had named the files and classes incorrectly.

[33mcommit 1e54b64bfbab7d294f0e5a5508b2abf84d41b81a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 5 21:44:12 2018 -0400

    Introduce basic logging (#601)
    
    This fixes #569.

[33mcommit d047f2094eb5a5bef17e91a147fc3b9f4ddd0447[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 5 11:26:41 2018 -0400

    Use EXPECT_THAT to test for substrings. (#655)
    
    This fixes #653. Replaced tests that used:
    
    EXPECT_NE(std::string::npos, string.find(substring))
    
    with
    
    EXPECT_THAT(string, HasSubstr(substring))

[33mcommit a7dbfb8b41ea930e3a7b3ebdf61e999655ff7950[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jun 5 08:36:33 2018 -0400

    Implement Bucket::GetMetadata (#585)
    
    This fixes #547.  It completes the first end-to-end API for
    Google Cloud Storage, including an integration test and sample
    program.

[33mcommit 0ab2a95d19699c93017cf53ca0068883af8e4ee9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jun 4 23:14:51 2018 -0400

    Fully qualify grpc::StatusCode values. (#651)
    
    This fixes #649.

[33mcommit f9ff105957965bcf87f7cb9a93e951c3d08d1734[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 15:54:01 2018 -0400

    Move bigtable/* to google/cloud/* (#635)
    
    This fixes #619 #620 #621 #622 #623 #624. Note that this
    does not include the changes to move the classes to a different
    namespace (#628).

[33mcommit 9b73f651f67ba838a03f488093d3a6482f5da211[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 14:31:39 2018 -0400

    Include Google Cloud Storage as a component [skip ci]. (#634)
    
    Also, cleanup the text for clarity.

[33mcommit e009cb07e11f9e77ba6610beef01afb9bdb79852[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 14:27:04 2018 -0400

    Enable ccache on macOS (#638)
    
    This is part of the fixes for #118.

[33mcommit 3a4498873a69a5e29a84c71263f0abe7285536b1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 10:52:47 2018 -0400

    Run a local httpbin server for integration tests. (#612)
    
    This fixes #542. The Docker images install gunicorn and httpbin,
    and we use those installed versions in the integration tests.

[33mcommit b7247957499ddec1f7dd847e046f94f5ed0d4d38[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 08:43:01 2018 -0400

    Take advantage of ccache on builds that install the dependencies (#614)
    
    Some builds need the dependencies (gRPC, protobuf, c-ares)
    pre-installed.  We used to install the dependencies as part of the
    Docker image creation, with this change the dependencies are
    installed by the Travis script.  That allows us to use ccache
    to speed up the build+install of these dependencies, just like
    we do for the main code.
    
    Enable ccache in these builds, they are slightly different from
    the rest of the builds in that they run as root within the
    container, so the cache directories are different.
    
    For the SCAN_BUILD=yes builds I could not figure out how to use
    both scan-build and ccache at the same time.  Both replace CXX
    and CC, so configuring that is tricky.  I was able to use
    ccache for installing the dependencies (which do not require
    static analysis), and then disabled ccache for running the static
    analysis on our code. We can improve on this later.
    
    Make the logs a bit more readable.
    
    The builds that install their dependencies (TEST_INSTALL,
    SCAN_BUILD), do not need to download the gRPC submodule,
    which saves time.
    
    Thanks to @mbrukman and @paprat for their comments.

[33mcommit 0ede67d61289ea7e86cff5e691b56be98219313a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 08:38:52 2018 -0400

    Move firestore:: namespace to google::cloud:: (#633)
    
    This fixes #630.

[33mcommit 896162dc2f68750e3eb4769f845f9e96185d7506[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 08:38:27 2018 -0400

    Fix retry loop in install scripts. (#641)
    
    This is somewhat embarrassing. The loop had been "in production"
    for ages, but only after I cut&paste it to another script it
    actually fails :-(

[33mcommit f5bfdcb8ee263c3d89955c0691cf5da698b3fde9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 01:12:30 2018 -0400

    Fix `TableAdmin::WaitForConsistencyCheck()` (#639)
    
    The implementation should abort the wait loop on the first unrecoverable error, it
    was not doing so. The tests were passing only because they had short timeouts,
    and that was actually a problem because sometimes they would fail.

[33mcommit 13418d036c8e69619fc829d02e62f5f7e23dc39d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 00:05:14 2018 -0400

    Make Bazel and macOS builds more robust. (#636)
    
    While rare, from time to time the Bazel or macOS builds fail
    because they could not install the dependencies.  Often retrying
    fixes the problem, so have the robots do that.

[33mcommit 27e61a683aeacc78392278916746fe0649cbb4cf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jun 3 00:04:48 2018 -0400

    Enable codecov comments for pull requests. (#616)
    
    This will prevent future problems where we dramatically
    change the coverage due to CI changes and/or code changes.

[33mcommit 3938bb24e81713fce97a07d700b2387f30b21ac6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jun 2 23:15:32 2018 -0400

    Workaround emulator crashes in CI builds. (#627)
    
    The bigtable emulator crashes sometimes (see #441 for details),
    and when it does we need to restart the build or tests. Instead
    of manually restarting things have a robot do it.

[33mcommit 0908c243406f381a1a910599409c90d381b76580[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jun 2 23:08:54 2018 -0400

    Print test error messages on failure. (#626)
    
    By default Bazel just prints the path of the log file, with this
    change it should print the full error message.

[33mcommit 1dbd77e0e1bca9298f98006face9b4cd04b359e9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Jun 2 13:21:43 2018 -0400

    Disable ccache on coverage builds. (#613)
    
    The coverage stats went to almost 0, evidently a bug in how
    we are using ccache.  Disable it for now until we figure it out.

[33mcommit 35234b52089c2a26488db2cd7e086e898caba7c1[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Fri Jun 1 14:50:02 2018 +0000

    implementation of InstanceAdmin::UpdateCluster (#596)
    
    This is part of the fixes for #424

[33mcommit 61090226b769166bcbca7eda11b6085ea4ecc964[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jun 1 10:11:54 2018 -0400

    Use ccache for Travis builds. (#611)
    
    Part of the fixes for #19, and also helps with #116.

[33mcommit 8e87bb5644fa9273210960b8559e1c2b0028be17[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 31 21:29:12 2018 -0400

    Fixed some low hanging fruit to improve code coverage. (#607)
    
    Also fixed some warnings by the googletest framework were getting confused
    with sanitizer errors.

[33mcommit dcd0c7f46601e72d046fb49bc11b50dc222bec61[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 30 19:13:34 2018 -0400

    Move firestore/ to google/cloud/firestore/ (#606)
    
    This is part of the fixes for #496.

[33mcommit 310ff582e3b628513a51b1e14fee45f26cab6fd0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 30 19:13:12 2018 -0400

    Refactor macOS install steps to a script. (#605)
    
    We have scripts for all other platforms, no reason why macOS
    should be different.

[33mcommit 2cb74e530843573a72f7749dc46b9dfb818eec4b[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Thu May 31 01:12:29 2018 +0530

    Wrap TableAdmin::CheckConsistency in a loop. (#461)
    
    Fixes #426.  Provides a function to poll CheckConsistency until it is satisfied.

[33mcommit fe514649d3425803f191f101d3fe3ad63d94c886[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 30 15:39:42 2018 -0400

    Preserve error messages in grpc::Status. (#604)
    
    On idempotent operations we were not preserving the error message
    returned by the server, that left the users with poor errors.
    
    On non-idempotent operations we were not inserting the library
    call that produce the error, which is also not great.
    
    Use testing::HasSubstr(), far more readable, to check that strings have
    a given substring. Thanks to @mbrukman for the suggestion.

[33mcommit 329907b3b3ac27ede71f57943bb2ec033323f255[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 30 12:40:09 2018 -0400

    Use cache for Bazel builds. (#603)

[33mcommit 421c284b3c28d1833cb7913dc01bdba2a9184b92[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 30 10:31:40 2018 -0400

    Fix retry loop to build Docker images. (#602)
    
    The loop was useless because `set -e` was active, the first
    failure exited the script, when we wanted to try a few times.

[33mcommit bc53ea89585b8bba628ff7668195842ecd259508[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 29 22:52:56 2018 -0400

    Run Docker builds with the user id. (#598)
    
    By default Docker containers run as root.  Our build scripts
    execute inside the container, but mount the user's workspace to
    read the code and to output build artifacts (both `.o` files and
    final outputs). That is annoying because any files need to be
    removed with `sudo`.  With this change the docker script uses the
    user's uid for most builds.
    
    The only exception are the TEST_INSTALL=yes builds, where it is
    useful to run as a user with permissions to write in `/usr/local/`.
    Note that this is the `/usr/local` directories inside the Docker
    image, so none of these changes leak to the user's workstation.

[33mcommit e28ad573a21efa33105c767c6e8fd47aa10c8038[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 29 16:49:59 2018 -0400

    Format with clang-format-6.0 on ubuntu:18.04. (#597)
    
    Moving the clang-format build to ubuntu:18.04 allows us to merge
    he clang-tidy and clang-format builds, saving a build for more
    useful stuff.  Part of the fixes for #19.
    
    If you are curious, the newer clang-format enforces the comments
    when closing a namespace (`}  // namespace foo`), highlighted
    that we were using `[[noreturn]]` attributes on a function
    definition (where they have no effect), and has very different
    opinions about formatting complex lambdas.
    
    As usual I do not care about what clang-format produces, just
    happy it is close enough to what a human would type, and we can
    reproducibly run it.

[33mcommit fef3fdd958b7c6867b7916b5e67cf143fe326f16[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 29 15:06:23 2018 -0400

    Do not check for an empty instance. (#599)
    
    I should have removed this when I made all the table names random.

[33mcommit c81014a8ddc42573c81f612a549d2f26716c658c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 28 13:43:16 2018 -0700

    Make the tests easier to follow. (#595)

[33mcommit 0d9f15529fb873d799c63bdf348f93ee323baaec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 28 12:21:46 2018 -0700

    Use grpcpp/grpcpp.h for the gRPC libraries. (#592)
    
    This fixes #488. The old headers (grpc++/*.h) have been obsoleted
    by gRPC, so we should not use them.

[33mcommit 4dad76f84636c34b58443f4d21ce2a478a0e922c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 28 09:54:50 2018 -0700

    Turn clang-tidy warnings into errors. (#591)
    
    This change turns case mismatch (snake_case when it should be CamelCase,
    or UPPER_CASE when it should be lower_case) into errors. Also
    enable clang-tidy in all libraries, not just Bigtable.
    
    This is part of the fixes for #339 (might be all, need to review the bug).

[33mcommit 47eb3700ab3b13f78a0e26f184e0da5fe14888c7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun May 27 21:40:35 2018 -0700

    Enable one build with gcc-4.9. (#589)
    
    Since we say we support it, at least one build should use that
    compiler.  Used the Bazel build because we already install
    a specific version of the compiler for it, and I wanted to
    remove unnecessary dependencies.

[33mcommit b6600156830efed42615b4ee4c388acb6ede09c1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun May 27 21:35:26 2018 -0700

    Enforce include header guard formatting. (#586)
    
    Enforce the formatting rules defined in the style guide.  Fix the
    existing problems.  This fixes #136.

[33mcommit 205c506a0928420dcdd86118c3eaa96e9dd8a9d8[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon May 28 01:53:24 2018 +0530

    Implementation of CreateCluster() API (#509)
    
    Part of the fixes for #422.  These changes implement the API and the unit tests.

[33mcommit 83b2fef15a981fd0c4c9923ec1818ba257a29f8a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun May 27 09:19:35 2018 -0700

    Fix the integration tests against production. (#588)
    
    The integration test was setting the display name to something
    too short. Fixed the test and change the emulator to have the
    same check.

[33mcommit de4d68ca525628f878572fa62b5d6c8f16053331[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun May 27 07:04:56 2018 -0700

    Use random table ids for integration tests. (#583)
    
    This fixes #356. We can two or more instances of the integration
    tests in parallel, even when using the same Cloud Bigtable
    instance.

[33mcommit b930b1b97bbe37c030cbe0a15ba931e83e321f9f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 26 22:50:50 2018 -0700

    Require clang-3.8 and list dependencies. (#582)
    
    Stop the build with older versions, document how to install a
    newer version.
    Refactor Ubuntu dockerfile.
    Document minimum requirements for build dependencies.

[33mcommit c69fb3e580224623d65a14dcdc31da4243316b6e[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sun May 27 02:01:29 2018 +0000

    InstanceAdmin::UpdateInstance implementation (#545)
    
    Implement InstanceAdmin::UpdateInstance(), unit tests, integration tests, and sample code.

[33mcommit fa20022ca0230ed2333b54bf2554e2fbbf985188[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 26 13:38:42 2018 -0700

    Initial storage::Client classes (#550)
    
    Implement Client and DefaultClient::GetBucketMetadata.

[33mcommit 0b3f68a5162cfec6f285c35116c47f408892a644[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 25 15:26:10 2018 -0700

    Improve code coverage for firestore::FieldPath. (#524)
    
    Also some cosmetic cleanups.

[33mcommit b43250716cdf8f41ccc49bcc103e3f45962a265c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 25 14:56:23 2018 -0700

    Correctly cleanup when using the emulator. (#529)
    
    I was using trap to cleanup instances and kill the emulators, but
    only one trap can be in effect at a time. Stacking traps is a
    pain in bash, but since we know what traps are in effect we can
    simplify things.

[33mcommit 8e1c75b3aff87a2621aaf7ac27d93d9695f0e5b9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 24 13:37:19 2018 -0700

    Refactor MockHttpRequest. (#543)

[33mcommit f10bbcbb572a8ee43acfd286578de08eaadd462b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 24 13:36:57 2018 -0700

    Protect client APIs from accidental use. (#544)
    
    Most of the APIs in the bigtable::*Client classes are not for
    public consumption.  Make them protected and then make only the
    classes that need access friends.

[33mcommit fb46a358cd290b17bb812a0acb0f8041f7785e19[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 23 20:42:50 2018 -0700

    Capture full http response in storage::internal::CurlRequest (#541)
    
    Capture headers and status from the http response.
    
    This fixes #533.

[33mcommit d482382ba6f7417aa1d51fdb80007409c540e632[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 23 17:06:20 2018 -0700

    Create kokoro configs (#540)
    
    This is the initial configuration for Kokoro-based CI builds.

[33mcommit 77f3431dfc2e9448580d115bfd8565dca2fd7fa7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 23 09:39:53 2018 -0700

    Run benchmarks in CI build (#508)
    
    We cannot run the full benchmarks (one takes ~24 hours), but we
    can run a short version to verify the code is still good.
    
    Thanks to @mbrukman for the detailed reviews (as usual).

[33mcommit b44c8b529e9aaec39c5c3983a9dc667607b79e93[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 23 07:57:26 2018 -0700

    Fix integration tests on Jenkins. (#538)

[33mcommit 0c90c127e17dcb8dc25ccb042a8d358b6b56e818[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 22 20:14:16 2018 -0700

    Use GOOGLE_APPLICATION_CREDENTIALS if set. (#539)
    
    This fixes #522. Turns out we needed this functionality earlier
    than I expected.

[33mcommit 01ca5df1d1efa4b8c0f5ce53d40fc4d1420b8aa6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 22 14:29:23 2018 -0700

    Initial class to hold and parse Bucket metadata. (#535)
    
    This is the first version of the class, it is very incomplete,
    but usable to write initial tests and prototypes.

[33mcommit 6e17cf8b18ea7280b291dd23a9f21004fc59dc00[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 21 20:31:20 2018 +0000

    Implement a parser for RFC 3339 dates. (#531)
    
    Google Cloud Storage returns RFC 3339 dates in the JSON messages.
    I could not find a parser for them, the nlophmann::json library
    does not have own, curl has a parser that accepts too many other
    formats. Protobuf has a parser, but that would introduce a strange
    dependency, and (I believe, by code inspection), the parser does
    not handle leap seconds correctly.
    
    C++ does not require std::chrono::system_clock to have nanosecond
    precision, and macOS (at least) actually has microseconds. Fix
    the code to preserve as much precision as possible, but not force
    nanoseconds.
    
    Thanks to @mbrukman and @houglum for the improvements they
    suggested during the review.

[33mcommit 1b62e6532ea3d320bae917b4e0a6bdbb073bb0b3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 19 23:35:39 2018 +0000

    This time actually print output on test failures. (#532)
    
    Fixed a PBKAC (mine, coryan), where I used `--stop-on-failure`,
    an option that does not exist, when I wanted `--output-on-failure`.
    I guess `ctest` was trying to be helpful and run anyway.

[33mcommit e076c35573c6223f25144d6c560ac0aaabc30200[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Sun May 20 00:31:10 2018 +0530

    Addition of instance_id in ListClusters api (#512)
    
    This fixes #490, it adds the necessary parameter to `InstanceAdmin::ListClusters()`

[33mcommit 9b5e8f0f7b12289c2d59f869fafb640a43528b97[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 18 20:45:16 2018 +0000

    Cleanup the travis yaml file. (#520)
    
    Part of the fixes for #19. Some of the comments were out of date,
    also the order of the environment variables did not make sense.
    
    Put each environment variable in its own line.
    
    Thanks to @houglum for the idea, much better I think.

[33mcommit 9a54630d48c96aa776aa57acce7dc052da621772[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 18 00:55:11 2018 +0000

    Make bigtable examples output prettier. (#525)

[33mcommit 72aba8733816e223e0ee1d0f8193997369f72638[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 17 19:52:42 2018 +0000

    Refactor integration test driver scripts. (#526)
    
    We need to have a cleaner way to separate the integration tests
    for each library.  This is a first attempt.

[33mcommit 012f241940e5ec13ca7418d21c0b1fb9e8f6d387[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 17 19:43:31 2018 +0000

    Default credentials raise if HOME is not set. (#527)
    
    This fixes #523.  Note that on Windows the environment variable is
    called something else.

[33mcommit 86dab944382eed548d143be629a51d67b34a3ff7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 17 17:13:06 2018 +0000

    Basic credentials for Google Cloud Storage (#517)
    
    Create a simple credentials class.  Still very much a work in progress.

[33mcommit 62401781f5893ce0de9fa502b692ee3230e5478a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 17 03:25:22 2018 +0000

    Remember to push firestore docs too. (#521)

[33mcommit c3cbd8f67d92af3d351cf9989ac4b27e5aacf541[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 17 03:25:00 2018 +0000

    Add firestore bazel support (#519)
    
    Add Bazel support for Firestore.

[33mcommit 10e6518d1b26b03da665f560f7bbae78b5b5657d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 16 14:02:18 2018 +0000

    Create instance integration tests (#498)
    
    Part of the fixes for #418. Creates an emulator for InstanceAdmin and runs the
    integration tests against the emulator.

[33mcommit 7a5d44e0fd76b01f142c97d82cef55464582f953[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Wed May 16 19:06:44 2018 +0530

    AppProfileID in Table:: member functions. (#440)
    
    Add support to pass the application profile id in all `bigtable::Table` operations.

[33mcommit e3a621b7a1b9bdeb53bfd45429abd576e2312c03[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 16 13:34:53 2018 +0000

    Add a build to test Bazel as a dependency. (#514)
    
    Build with Bazel, but using google-cloud-cpp as a dependency, as our users would.

[33mcommit b05c8c7cbb9be6f10f6bbb304f9a034c995cdc46[m
Author: chemelnucfin <alan.c.wu@gmail.com>
Date:   Tue May 15 19:33:42 2018 -0700

    Firestore Field Path (#431)
    
    Helper classes to work with Firestore Field Paths.

[33mcommit 45683c68f9254ebc12cdbfed6a42b6c531077882[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 15 21:55:47 2018 +0000

    Initial classes to make http requests. (#507)
    
    Use libcurl to make http requests, write integration tests.  Lots of tweaking to build
    across all platforms.
    
    Thanks to @houglum for the feedback.

[33mcommit 0bb5ef0038474af046ec542902e5e162427291da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 15 21:54:38 2018 +0000

    Reset expectations for new Bigtable emulator. (#513)
    
    Make test less strict so we do not run into these problems in the future.

[33mcommit 67ca1d38ca2439da3cde8f50a9859e10d40aa79c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 12 12:49:58 2018 +0000

    Refactor throw delegate functions to google/cloud (#505)

[33mcommit 7b696db730bba444fb1003062fab380599267cc1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 10 20:32:22 2018 +0000

    Add nlohmann json library (#504)
    
    Add nlohmann::json library.  Thanks to @houglum for the review.

[33mcommit 50537a66499f66c1020888c2269e41554ebeef1e[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Fri May 11 01:36:02 2018 +0530

    Implementation of PollingPolicy (#487)
    
    Implementation of PollingPolicy

[33mcommit db67b8917e2e373904b2b574cae6e97dccc3dbe4[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Wed May 9 20:34:39 2018 +0100

    Dump the emulator logs in Travis (#469)
    
    Always dump the emulator log file after travis build failures.

[33mcommit b6a5752641a265d8c2607c808f3a941788c469fd[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed May 9 18:39:02 2018 +0000

    implementation of InstanceAdmin::DeleteCluster (#502)
    
    Part of the fixes for #425.  Implements the function, unit tests, and samples.

[33mcommit 20f0084464e14abf05ce7b08cd9e4a947c413b18[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed May 9 08:43:07 2018 -0400

    Run samples in ci build (#492)
    
    Run the examples during the CI builds.  In most builds we run against the emulator, but we also
    run against production in the Jenkins build.

[33mcommit 3d4f77fbe3c100cb0443fa92d0dc72fec610b975[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 8 16:35:38 2018 -0400

    Build the build info variables to its own library. (#475)

[33mcommit 20b87b55712d712110768518a3a42a1c172b9460[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 8 16:35:00 2018 -0400

    Explain why gcc-4.9 is not good enough. (#500)

[33mcommit 9767a068a07ad370df62ca4369d5a78aad4445fd[m
Author: chemelnucfin <alan.c.wu@gmail.com>
Date:   Tue May 8 11:07:12 2018 -0700

    Issue template grammar issue (#499)

[33mcommit 9996b147b6d568ca7648bd42f1cb560b07aa4e74[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Tue May 8 08:57:01 2018 +0530

    Add sample snippet for InstanceAdmin::GetInstance() (#493)
    
    This is part of the fixes for #419.

[33mcommit f6e4ee8240e195b65dd8b21bd046e8c65d11313f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 7 20:12:06 2018 -0400

    Run test-installs in the build-output subdirectory. (#497)
    
    Do not output build artifacts in the source directory, makes it
    easier to test this locally.

[33mcommit e0bd2738ab9dcd738bdc7a308bd86c441b40d791[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon May 7 10:24:29 2018 -0400

    Do not use gcc-4.8 in CI builds. (#494)
    
    This compiler has poor C++11 support, and some of the new
    libraries will it.  The CI configuration shows how to upgrade
    the compiler for the distros where this is the default compiler.

[33mcommit 809c438cf207bbaf144bae5b01bb35979cc12db8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 5 23:24:39 2018 -0400

    InstanceAdmin::CreateInstance() sample snippet. (#491)
    
    Part of the fixes for #418.

[33mcommit 9ead3b3719c32a05f49177985c84f2d56cae0083[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Sun May 6 03:05:56 2018 +0530

    issue #419 GetInstance(), test cases added (#485)
    
    Part of the fixes for #419.

[33mcommit ac731daa3b73beeb4c28b862a6c11dbaaf2f6773[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 5 16:06:44 2018 -0400

    Refactor random number functions (#478)
    
    Refactor pseudo-random number functions to the testing library.  We will use this for #418.

[33mcommit 2d21412093cb2a67bee411a1ccb4b97438d67c7d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat May 5 11:57:26 2018 -0400

    Add Bazel support for the storage/ directory. (#474)

[33mcommit 5bb89ea5b475170719c0293c7c33b0417bcedc44[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 4 23:21:57 2018 -0400

    Cleanup the build script for macOS. (#477)
    
    It just needed a bit for TLC.

[33mcommit 2da5077b07371ea870d9a15f3f5087b3cac8935c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 4 17:14:32 2018 -0400

    Use @par for examples in Doxygen docs. (#483)
    
    Instead of using **Example** use `@par Example`, which produces
    slightly more pleasing output (matches the other sections of the
    documentation), and has the right semantics. This fixes #481.

[33mcommit 071e139c64e921768e3996a43da7e49e5a3b1e43[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 4 15:13:44 2018 -0400

    Mark APIs that are "private alpha release" as such. (#436)
    
    This fixes #435.

[33mcommit e5e81cbfed9597d4e8028f41c5cc42166cca4594[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Fri May 4 22:34:50 2018 +0530

    Implement InstanceAdmin::ListClusters (#462)
    
    Implement InstanceAdmin::ListClusters.  This is part of the fixes for #423,
    the integration tests need some work.

[33mcommit 64cac062ff50c90fa06de3b62963b7f70be698ba[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 4 11:01:55 2018 -0400

    Use compiler with full C++11 support for CentOS. (#479)
    
    The stock compiler (gcc-4.8) has really broken C++11 support, fix
    before making changes that will break the compiler.

[33mcommit 6e90a8d93b20a41db60feb1a5266c6690556ee39[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri May 4 08:22:08 2018 -0400

    Fix the DeleteInstance integration test. (#476)
    
    I forgot a number of constraints for production when reviewing
    the integration test.  The name of the instances must be lower
    case, and cannot include '_'.  The location must be a valid
    Google Cloud Platform zone. And a few more.

[33mcommit 0314357a07347b6e07100ade49be0796f1c810dd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 3 22:06:29 2018 -0400

    Remove some of the boilerplate for both libraries. (#473)
    
    This is a first step towards creating a common library.

[33mcommit 33d6b1b50b0f6334342e40e4a619c8c5219a267c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu May 3 11:00:25 2018 -0400

    Changed expected results against production. (#459)
    
    The production server results richer results than the emulator.
    This fixes #451.

[33mcommit 3b1964e08702346f7df28c8958b4574ee54c6dc8[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Thu May 3 11:44:26 2018 +0000

    Implement InstanceAdmin::DeleteInstance (#472)
    
    This fixes #420.

[33mcommit 3b60c249bbdc02fcd1c586103b2d3cca43945758[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Wed May 2 22:33:34 2018 +0530

    Implementation for InstanceAdmin::GetInstance with unit tests for no errors (#464)
    
    This is part of the fixes for #419, it implements InstanceAdmin::GetInstance.  We still need unit tests
    for the cases where the server returns errors, an integration test, and some examples.  All coming in
    future PRs.

[33mcommit 9ff799d6804f7c025c9e127e92409d7b62b27576[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 1 14:21:18 2018 -0400

    Use 199.0.0 Google Cloud SDK as baseline. (#467)
    
    To prevent problems with broken releases we use a well-known
    version to bootstrap the Google Cloud SDK.  It has been a while
    since we updated the version, it is time to do it again.

[33mcommit bd14f5654be3114541ccfc5e94747699b0d7c5b0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 1 12:29:50 2018 -0400

    Fix build breakage. (#468)
    
    One of those where the main branch got more strict checks, and
    a PR did not include the additional checks in its build.

[33mcommit 8c1818828f15330863f639eaa0d2900632c92ba9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue May 1 09:57:26 2018 -0400

    Minimal implementation of InstanceAdmin::CreateInstance (#457)
    
    This is part of the fixes for #418.  It is a minimal implementation, enough
    to unblock other work in this area, but still needs polishing, for example:
    - It does not have an integration test or examples.
    - It does not have a good polling policy, it hijacks the existing RPC policies.

[33mcommit 3f67d9f6ec31d6005c6632ca57d2d94251925235[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 30 11:17:40 2018 -0400

    Create ClientOptions constructor with Credentials argument. (#466)
    
    This fixes #465. Make it possible to initialize ClientOptions when there are no default
    credentials configured.
    
    Removed a vacuous test, the typeid of grpc::*Credentials() is
    always the same type. It is a wrapper around the inaccessible
    C-layer credential classes.

[33mcommit 7cfd11921ab772c286c2d4a614b97e6264a0e5b5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 30 10:18:25 2018 -0400

    Enable (and fix) clang-tidy performance warnings. (#460)
    
    Enable the performance-* warnings in the clang-tidy build. Fixed a number of
    problems caught by these warnings.

[33mcommit 1da964068e90caf26304e6f50c7ae2b5c0d1550a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 27 15:46:06 2018 -0400

    Cleanup install target (#450)
    
    Sometime ago, in one of those large merges, I messed up the CI build to test the install target. And then it broke, and we did not notice. This restores the build that actually tests the install and gets it to work again.

[33mcommit d66bcffe2e130f4fbd39693de0294d2d359f9755[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 27 08:59:55 2018 -0400

    Run one CI build on Ubuntu 18.04. (#458)
    
    This is the latest LTS release for Ubuntu, good practice to test
    on it.

[33mcommit 7cace18ebdfb06b56efdc82068c599ad1d6a26d1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 25 23:12:09 2018 -0400

    Support Bazel-based builds. (#452)
    
    This fixes #334. It creates Bazel BUILD and WORKSPACE files to
    compile the code.  The files are automatically kept in sync
    with the CMake files: our CMake files generate (most of) the
    contents for the Bazel files.  This also introduces a Bazel CI
    build, and tests to verify the Bazel files are usable when
    embedded from another project.

[33mcommit 710a308a095e8f134753cc14fda0d07b3e7a0a5e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 25 08:48:00 2018 -0400

    Support multiple services in bigtable::DataClient. (#449)
    
    This fixes #433. With this change all the clients can support multiple interfaces, for example, google.longrunning.Operations.

[33mcommit 88031e6c17a24cf75019eade86ce101ca23e14fb[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 23 11:04:21 2018 -0400

    Refactor AdminClient to support multiple services. (#444)
    
    This is a large change. It is part of the fixes for #433 and
    for #418. The current implementation of bigtable::*Client makes
    it really hard to write tests that use multiple services, and
    when using long running operations you need to access at least
    two services.
    
    The good news is that the tests and some of the helpers get
    easier to write, and this does not affect any of the APIs exposed
    to the user.

[33mcommit de7dd90deaf81ace603b5438c9cd5068b0514e75[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 23 09:32:57 2018 -0400

    Use a different name for the ReadRowNotExistsTest table. (#447)

[33mcommit 798f283fefa71c51539ad31e55edd25454c6c2bb[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Sat Apr 21 00:08:50 2018 +0100

    ReadRows integration test (#403)
    
    This fixes #77.
    
    Cover the basic cases in a style similar to the other tests:
    
    - all rows, including a large key and large value
    - a subset of rows
    - no rows
    - error - non-existent table.

[33mcommit a2c7f2508d2e3a3e73e11e4cf78503723e23135c[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Fri Apr 20 15:05:28 2018 +0100

    Handle special types of ranges (#446)
    
    Fixes IsEmpty() for open ranges with consecutive ends.
    Returns such a range, namely ("", "\0"), as the Empty() range.
    The reason being that a range ending in open "" is considered
    infinite by the server side logic.
    
    Fixes #404

[33mcommit cd766995fa5bed3ac32d23c0edf443ae498c0c95[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Thu Apr 19 02:02:13 2018 +0530

    #409:Make bigtable::TableAdmin CopyAssignable and CopyConstructible (#432)
    
    This fixes #409.

[33mcommit 280e25771e009c87b998b527620747e6bbaba9a6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 18 16:31:19 2018 -0400

    Optimize error messages in RpcUtils. (#445)
    
    This fixes #358.

[33mcommit 4c12e3efdbf2440fe7a7f95b2546f4757bd8e8f1[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Thu Apr 19 00:49:19 2018 +0530

    Fixed issue #338 bigtable::DeleteFromColumn* should take std::duration<> parameters. (#429)
    
    This fixes #338.

[33mcommit 748679632410cfd8889d127320fa61e97926c564[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Wed Apr 18 17:35:30 2018 +0530

    List snapshot (#414)
    
    Implement TableAdmin::ListSnapshots.

[33mcommit e6397ac48571202ee9a7adef298aad9c7c6facde[m
Author: chemelnucfin <alan.c.wu@gmail.com>
Date:   Mon Apr 16 13:36:41 2018 -0700

    minor typo (#443)

[33mcommit 4b1c939180061452688207bf8502437a009dd6e4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 16 14:56:54 2018 -0400

    Refactor common *Reader mocks. (#442)
    
    Several tests were re-implementing the same mocks. Refactored
    them to the testing library.  This will be more handy for
    future changes related to #433.

[33mcommit fde20995af953205cd8fe0ac040059d8db8554b4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 16 11:50:43 2018 -0400

    Refactor InstanceAdminClient to support multiple services (#434)
    
    This is part of the fixes for #418 and for #433. We will need the channels to
    get the google.longrunning.Operations Stub. Also cleanup some
    duplicate code.

[33mcommit b4375c64e1212ac3fb0dbe5735cc3ef22ebaa681[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 16 10:45:57 2018 -0400

    Make bigtable::InstanceAdmin CopyConstructible. (#439)
    
    This fixes #437.

[33mcommit dc5c782d69c8f455f075ba602aa90183fbb427c5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 16 10:24:59 2018 -0400

    Make bigtable::Table CopyAssignable. (#438)
    
    This fixes #408.

[33mcommit c7e7b9fa01f2dd6c21b4285ec6ca2b6e300c565e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Apr 14 14:29:14 2018 -0400

    Implement create instance pr1 (#430)
    
    This is part of the fixes for #418 Configuring an instance requires a fairly detailed descriptor,
    better to wrap it in a class that seems natural to C++ programmers.

[33mcommit 4c1927d4c69927f6cf4eb0e904a25dd8a3310931[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Apr 13 12:31:35 2018 -0400

    Find the right byte swap intrisics on macOS. (#427)

[33mcommit 8aac419f8dabfd543510664125cb7e2b8058c548[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Fri Apr 13 17:30:43 2018 +0530

    Delete snapshot API. (#413)

[33mcommit 0183cf3c6f04fc2e4dc1d1cd3d1eb4dd613f9f9a[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Thu Apr 12 20:51:28 2018 +0530

    app_profile_id in Table::Table constructor (#417)
    
    Initial commit for app_profile_id in Table constructor.

[33mcommit 5632a6646270913c04c05959ec049b68ecbd3263[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Thu Apr 12 00:57:38 2018 +0530

    Issue#355: Support for storing std::int64_t directly into Bigtable value (#395)
    
    Fix #355. Support for storing std::int64_t directly into Bigtable value.

[33mcommit b0bb80dcf1399088e9eefd602eba237f57d90b43[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 11 12:47:47 2018 -0400

    Fixed typo in CONTRIBUTING.md (#410)

[33mcommit 32ea7e72aef4c5e9c68c628dee7686b353a64583[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 11 12:47:29 2018 -0400

    C++ goes after .NET because '.' [skip ci]. (#399)

[33mcommit d2e42315e2746b6f36222f686c45287f0ab045db[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Apr 11 12:47:16 2018 -0400

    Change CMake config to find the dependencies. (#400)

[33mcommit 3f06e32816adf003ac2d527b3435042b1fc2ad20[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Mon Apr 9 20:42:09 2018 +0530

    Changes required for fix. (#415)

[33mcommit 8daee31efb939417d56bdcd68dce9e392c1b4c40[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Mon Apr 9 00:21:55 2018 +0530

    Return std::chrono::microseconds from Cell::timestamp().
    
    This fixes #337.

[33mcommit 5f53a50cfae7c3e4d0d8dbeb1ebc203db34f4211[m
Author: roopak-qlogic <36889394+roopak-qlogic@users.noreply.github.com>
Date:   Sat Apr 7 18:50:19 2018 +0530

    Print (only) the overall results in endurance benchmark (#368)
    
    The benchmark used to print the partial results every 5 minutes, that gets long after a while.

[33mcommit fb476b80219b7e233a27dbb3c68cc578e0433250[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Fri Apr 6 21:13:00 2018 +0530

    Consistency API implementation (#405)
    
    * Initial commit for consitency APIs.
    
    * Fixed travis build.
    
    * Removed extra new line.
    
    * Changes to accommodate strong_types for Consistency APIs.
    
    * Fixed travis build.
    
    * Removed StrongType class from internal/table_admin.h
    
    * Addressed comments.

[33mcommit 592202fff57dab864171c1f6b6865ebe0fdeee68[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Thu Apr 5 22:59:03 2018 +0530

    Get Snapshot. (#398)
    
    Implement TableAdmin::GetSnapshot.  This fixes #381.

[33mcommit ecea9368494d954dde7f9a469ea156ba6026e400[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Apr 3 04:48:45 2018 +0530

    doxygen changes to remove include and collaboration graphs (#397)
    
    This fixes #321 and #322.  We do not want to include the collaboration or include graphs
    in the user-facing documentation because they are only of interest to the maintainers
    of the library.

[33mcommit 7b012f2d5f095c50beecd6a969af5a6c8f323ec2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 2 19:16:16 2018 -0400

    Better landing page for documentation. (#394)
    
    Modeled after the `google-cloud-*` landing pages.
    
    All the landing page assets are kept in the `gh-pages`
    branch, just as all the other repos do.  The upload script
    automatically create them from the `latest` subdirectory.
    
    This fixes #243.

[33mcommit 2eb26c00e95022d3c1babcb83c286f5bdf16705d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Apr 2 10:47:26 2018 -0400

    Link code snippets from Doxygen docs. (#393)
    
    Link code snippets from Doxygen docs.

[33mcommit 5cf4aa46e8c0e02b77c099e7f1d95685e66fe71d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 29 15:11:07 2018 -0400

    Create initial directory for GCS (#389)
    
    Add the subproject, a trivial library, and merge the subproject
    into the integration builds.  Started with the assumption that
    libcurl would be used for the storage/ subproject so I changed
    the Docker images to include this dependency.
    
    Cleanup scan-build support to enable storage/

[33mcommit 167f4162df3ccfb07062ce81bd75e5fe91a0208c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 29 15:02:01 2018 -0400

    Update README files to declare this is an Alpha release (master). (#391)
    
    Update README files to declare "alpha".

[33mcommit fcdb7c3897d79314520ef0f6d7314eb1464bc0a1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 29 10:18:55 2018 -0400

    Bump version to 0.2.x in master branch. (#387)

[33mcommit 3e79ad29c54804a97d6e6111f422991f9e5f9d41[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 28 00:44:06 2018 -0400

    Update googleapis to current `master`. (#388)
    
    This fixes #218.

[33mcommit bbaa3099313738ce56ca947048f06c0a8bc89c15[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Wed Mar 28 00:54:16 2018 +0530

    unit tests in MetadataUpdatePolicy for parent, name and table_name x_goog_Request_params (#363)
    
    This fixes #347

[33mcommit f15198ce45f3c8330d6365edb15bc580fde2346d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 26 21:18:54 2018 -0400

    Implement examples for all APIs (#372)
    
    This fixes #38.

[33mcommit 31921b5a7b4a749d0735edb647d982237f40deff[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 26 17:04:38 2018 -0400

    Model Hello World examples like other languages. (#364)
    
    Refactor Hello World example to look like other languages.  Avoid confusion by using .dox for
    Doxygen documents.

[33mcommit 27da1c1129640fa993641019dcebd29f3d0f954f[m[33m ([m[1;33mtag: v0.1.0-pre2[m[33m)[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 24 21:38:13 2018 -0400

    Integration test for InstanceAdmin::ListInstances. (#371)
    
    This fixes #343.

[33mcommit 848349ae9a851768f3404c2ab28c05e14c0089d3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 24 21:04:40 2018 -0400

    Update boilerplate instructions [skip ci]. (#365)

[33mcommit 2e1836c4a456449d8acb8fecb8d2afa9d420dcc6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 24 08:16:33 2018 -0400

    Run integration tests in Ubuntu 14.04 (#370)
    
    The tests were disabled because we used to build the Cloud
    Bigtable Emulator from source, and Ubuntu 14.04 native golang
    tools could not do it.  Now that we install the emulator via the
    Cloud SDK, this is no longer an issue.  This fixes #361.
    
    Ignore testing components in code coverage reports.

[33mcommit 37c00f4f84621f876664912b8250a5b72e673a32[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 24 08:15:51 2018 -0400

    Add "quick start on GitHub"-type links [skip ci]. (#369)

[33mcommit 154947bd5a3e0860ec1a321ac2184d18b221189b[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Sat Mar 24 01:54:47 2018 +0530

    Unit test for ReadModifyWriteRow (#367)
    
    Fixes #304.

[33mcommit 52cce0982810901661ea5f287b5c22bd8640073f[m
Author: ajaaym <34161822+ajaaym@users.noreply.github.com>
Date:   Thu Mar 22 09:28:45 2018 -0400

    Fix #35 Refactor wrappers without exceptions to separate namespace (#353)
    
    Fix #35.  We now have wrappers that do not raise exceptions in a separate namespace.
    Also fixed #247.  We have an API for ReadRows() that do not raise exception.

[33mcommit 9c82d08f105635c2e536d4a2ed25ffd87fb2c027[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Wed Mar 21 01:24:14 2018 +0530

    Default container (#362)
    
    * Setting default template parameter to std::vector.
    
    * Fixed identation.
    
    * Addressed comments.
    
    * Minor change.
    
    * Fixed order of imports.

[33mcommit 75bd1227f0bb811d3d3ff71a0ea2aeeafcbf9339[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 20 11:22:57 2018 -0400

    Integration test for Table::SampleRows(). (#360)
    
    This fixes #357.

[33mcommit c2c07ed6f42a2e8887a29c3c9a6e6aae8f550608[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Tue Mar 20 18:52:17 2018 +0530

    Fix for grpc submodule. (#354)

[33mcommit 26257787d49b9d47900f49c9dac79733796a2942[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 19 21:14:18 2018 -0400

    Run integration tests vs production (#350)
    
    This is part of the fixes for #270.  We need to change the Jenkins
    config and scripts to wrap it up.

[33mcommit 8fca23544074fa5d7213ab4c307b120d1ff80bf5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Mar 18 16:54:13 2018 -0400

    Complete read modify write integration tests (#351)
    
    This fixes #306.
    
    Improve debug output for bigtable::Cell in tests.
    In tests it is useful to examine the contents of a Cell as a
    string, but sometimes it contains a 64-bit BigEndian number,
    and sometimes non-printable characters. In both cases print
    additional information to make debugging easier.

[33mcommit b8bb14bdf812fa3e90416d1b64bf08b7d02bb8cc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Mar 18 14:53:54 2018 -0400

    Fix pointer alignment once and for all (#352)
    
    Turns out you need to set DerivePointerAlignment to false to
    stop clang-format from guessing, even if you also set
    PointerAlignment to an specific value.  So now the references
    and pointer sigyls are properly aligned.  Fixed the code for
    consistency.

[33mcommit 89f77dc323c16f0f449f6cfef9b296161a8905d1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Mar 18 07:57:57 2018 -0400

    Fix missing documentation (#346)
    
    This is part of the fixes for #342.
    
    Doxygen thought there were two overloads of
    `CreatedDefaultDataClient, because it does not realize
    that `bigtable::Foo` is the same as `bigtable::v0::Foo`.
    
    The rest was just missing gaps in the docs.

[33mcommit 4762a7fbef4c337d60ca3bdd42a7ed0183713c8f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Mar 18 00:31:53 2018 -0400

    Reorder includes using clang-format. (#349)
    
    The last pass missed a few files added *after* I started my pass.
    And the PR builds do not always catch problems like this: the PR
    build caches a version of the destination (typically master)
    branch. The cache is not invalidated on commits to master.

[33mcommit 643ec8c0412f9489b89f2fd0903515155589c6af[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 17 21:49:07 2018 -0400

    Fix #include order in clang-format config. (#341)
    
    Use the order recommended in the style guide. Fix
    the existing #includes.

[33mcommit 744992b413e4add85799bae8c2f330ea9c8cbeaf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 17 21:48:44 2018 -0400

    Remove "admin" from Doxygen inputs. (#344)
    
    I should have removed this when the directory went away.

[33mcommit 04a98aa4025e4ed986bfd89a09965d044ea3f25e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 17 21:48:07 2018 -0400

    Fix namespace for version_* functions. (#345)
    
    These should always have been in the bigtable::v*:: namespace.
    Fixed them.  Also took the opportunity to document them, which
    helps with #342.  And finally the format of version_string() was
    wrong, build info is +foo, not -foo according to semver.org.

[33mcommit 4ad4ec25702995334ec9c8220854763652ca7424[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 17 21:47:42 2018 -0400

    Write unit tests for throw delegates. (#348)
    
    This is implicitly tested in other places, but the code coverage
    was getting too low.

[33mcommit 9edf4f1d36565c2c3208f8b7dc2d0ae2e36638ee[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Sun Mar 18 00:21:24 2018 +0530

    Changes for ReadModifyWriteRow api addition (#326)
    
    Implement Table::ReadModifyWriteRow().  This fixes #303.

[33mcommit a729bca1250f9129870df248ccf0a31833cea4f0[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Sat Mar 17 08:33:57 2018 +0530

    rpcmetatdata holds x-goog-request-params and google-cloud-resource-prefix (#313)
    
    This fixes #190.  It adds the right x-goog-request-params to each request.

[33mcommit 68032712d150d16db234f36241e9d9040f065f9e[m[33m ([m[1;33mtag: v0.1.0-pre1[m[33m)[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 16 00:29:52 2018 -0400

    Use milliseconds in bigtable::SetCell (#335)
    
    The timestamps must be in milliseconds, so make it hard for the
    user to make a mistake with them.  This fixes #274.

[33mcommit 86a70bc3de11f381e102e826afb7679fe5789a79[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 15 11:34:45 2018 -0400

    Move admin/ to client/ (#298)
    
    This fixes #103.  Moved the files from `bigtable/admin` to `bigtable/client`.
    Thanks to @paprat for catching the include guard changes.

[33mcommit 2c9ef33ec39980dd0ad0ab101b653288f9ae16fd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 14 23:05:40 2018 -0400

    Simplify vcpkg build (#311)
    
    This is needed so vcpkg can compile the libraries with
    a minimal number of submodules.

[33mcommit bd6e4c9e2e3b948c24f7eb9b5ccfde3cd195c5dc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 14 22:34:32 2018 -0400

    Introduce a complete style guide. (#98)
    
    Thanks to @deepankarsharma, @gamorris, @jgeewax, and @mbrukman for their input.

[33mcommit 86c4006d8352ff1501e1ab3c9aa97a2a321dd071[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 14 16:36:55 2018 -0400

    Wrap grpc status with exception (#324)
    
    Instead of raising a plain std::runtime_error use a more detailed
    exception that derives from it.  This fixes #119.
    
    Thanks to @deepankarsharma for the ideas around std::abort()
    and helping me improve the documentation for this class.

[33mcommit ac324a992cc9bc0da02156180ef27aa21128f802[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 14 13:16:03 2018 -0400

    Upgrade to gRPC v1.10.x (#283)
    
    Fix #230.  Update gRPC to v1.10.x.  There are known bugs in
    v1.9.x that manifest when using round robin load balancing
    and disconnects.
    
    We want to enable -Wall -Werror on our code, but we do not want
    to force it on the user, nor do we want to force it on our
    dependencies.  I needed to make the change now to workaround the
    build problems referenced in:
    
    https://github.com/grpc/grpc/issues/14511
    
    But they are good changes in general too.
    
    Use `cmake -H. -B.build` to simplify script.

[33mcommit c44cc8bb22e8be0e0fa7706fd684113bb209a662[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 14 10:48:14 2018 -0400

    Document the user-facing namespaces. (#325)
    
    This fixes #320.

[33mcommit 402de2c6d6911d93978c1a7cdf51ee06b29a6cb1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 13 11:06:35 2018 -0400

    Remove internal details from user-facing docs. (#323)
    
    Class in tests, in the testing/ subdirectory, or the internal/
    subdirectory should not be included in the user facing
    documentation.  This fixes #319.

[33mcommit 5ced11c3cf2f9b6482b75edac00bd71fbb5c2cba[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 13 09:46:05 2018 -0400

    Update the documentation for bigtable::Table. (#318)
    
    Even had a TODO that had been fixed.

[33mcommit ad8678a7261a4ccb3e1cbfdce18b9762a1303da4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 13 09:45:46 2018 -0400

    Fix spelling of JAVADOC_AUTOBRIEF option. (#317)
    
    I typed it wrong before.

[33mcommit 265b9c9d377b2410655e466e4e01be5efb76b1a3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 12 19:20:15 2018 -0400

    Fix include path in the Doxygen output. (#316)
    
    The Doxygen output was not including the full path of the headers.
    The name of the option to enable this is counterintuitive:
    
    https://stackoverflow.com/questions/2422755/how-can-i-force-doxygen-to-show-full-include-path

[33mcommit bfbf742d302a2a83ac928fdb93777f724a7ce559[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 12 19:19:52 2018 -0400

    Do not raise exceptions in bigtable::DeleteFromColumn() (#315)
    
    This fixes #312.  It is consistent with the comments in #148,
    we have been pushing more and more of the checks to the server
    side because we do not want to implement them twice.
    
    As documented in GoogleCloudPlatform/google-cloud-go#932 the
    emulator (which is what we use for the CI builds), does not
    exhibit the same behavior as the production server, so disable
    those tests and leave a TODO.
    
    Thanks to @richdutton for the suggestion to catch the correct
    exception in the tests.

[33mcommit 0dd45f9ffbd7adb212c0aaf28ec7b36e9c702144[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 12 14:06:53 2018 -0400

    Jenkins scripting (#296)
    
    Refactor Jenkins configuration to a script.

[33mcommit 0ec636e2926ca1ef5bf62b65cd4e4b3b3abe6460[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Mar 12 12:37:45 2018 -0400

    Implement check and mutate row (#314)
    
    This fixes #208. It adds the implementation, unit tests, and integration tests.

[33mcommit e751740d229555970cc040ecd4bcd38aad8ea659[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 8 13:55:01 2018 -0500

    Implement ReadModifyWriteRule::IncrementAmount() (#309)
    
    This fixes #302.  Also initialize the family_name() and column_qualifier() members
    that I missed in the previous PR.

[33mcommit 2fcc923432e3a6d29aaa73ea74961ff02a0637c5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 7 21:42:07 2018 -0500

    Initial version of ReadModifyWriteRule wrapper. (#307)
    
    This is not a complete implementation, but fixes #300 and #301.
    That unblocks a few more bugs.

[33mcommit ed2b3b28bba47220241bbce13726d3be969c54c8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 7 15:33:41 2018 -0500

    Fix bug in scan throughput benchmark. (#299)
    
    I made a mistake in the scan throughput benchmark, swapping the
    scan_size and table_size parameters. Effectively this meant all
    the tests were using the same scan size, and it was absurdly
    large (the full table!).  Of course that resulted in fantastic
    performance results, but for a different thing than we wanted to
    mention.
    
    I changed the function signatures to make it less likely that one
    can swap the parameters.

[33mcommit af524f743635f6562879002bf67c29a09c3636cd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Mar 7 13:01:20 2018 -0500

     Complete implementation of install target (#281)
    
    This fixes #24, it contains an example to test 'make install' as
    part of the continuous integration build.  It also fixes #44, it
    creates and installs the pkg-config support files.  Finally it
    fixes #45, it creates and installs the CMake configuration files
    to use find_package() when the libraries are installed.
    
    Apologies for making so many fixes in one commit, but otherwise
    the commits need to create pkg-config files (or CMake config
    files) that are not tested, or I need to introduce tests that
    have everything hardcoded without the config files.
    
    When gRPC is used as a module we cannot install some of the CMake
    support files.  But that is no reason to disable installation of
    all the other goodies, so leave that on.

[33mcommit 63a69701136176ae427b239562ccf9faa4163e89[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Mar 6 08:08:39 2018 -0500

    Spedup AppVeyor builds. (#297)
    
    Reduce the AppVeyor build time from ~20min to ~15min.
    I made a number of changes to get there:
      * Use /m flag in msbuild to take advantage of both
        cores provided by AppVeyor.
      * Use a explicit 'test' phase because otherwise
        AppVeyor takes a long time "searching" for any
        tests.
      * When compiling a PR, do not build the feature
        branch too. That saves slots in the build queue.
    
    There are other changes here preparing the build
    to run without vcpkg, i.e., from submodules in
    the source.

[33mcommit 8ce256801edbb56034adcb032bdd337faeaf4a84[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Mon Mar 5 23:14:28 2018 +0530

    Issue#76: Implementation of ReadRow integration test case (#294)
    
    This fixes #76.  It implements an integration test for Table::ReadRow().

[33mcommit 357b97489fee0bd35bb2a6c7421aa07c8dd7e67c[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Sun Mar 4 21:22:14 2018 +0530

    Issue fixed for empty instance check at test startup (#295)
    
    General cleanup for the filter integration test and ensure tables are
    deleted after each test case.

[33mcommit 472dcc60e059cfabd877cc3c55b10056e57c68b2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Mar 3 06:43:10 2018 -0500

    Separate CMakeLists.txt into smaller files. (#291)
    
    This fixes #259.  I think it will make the changes for #103
    easier, so start with them.

[33mcommit d055381c6668b984299d13e5d10db82e19714807[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Fri Mar 2 23:56:33 2018 +0530

    Code optimization for using table.Apply instead of table.BulkApply (#290)
    
    Thanks to @hemant-qlogic for a nice cleanup of the integration tests.

[33mcommit 875b27af29826d42b82ddb7fff2b03e03886c7ba[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Fri Mar 2 21:58:52 2018 +0530

    Issue#206: Changes for Mutation Integration Test as per Carlos review… (#282)
    
    This fixes #206.  It creates an integration test for each mutation function.

[33mcommit a734463f75c10f6a46c12d6f971282f60728d65c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 2 09:41:48 2018 -0500

    Make versions consistent (#280)
    
    The documentation, Makefiles, and the code had different version
    numbers, fixed it by using the Makefile version numbers
    everywhere.  This fixes #238.
    
    Also use CMake to call doxygen, which allows us to refactor the
    common parts of the Doxyfile, this fixes #71.

[33mcommit a4ede184670596d42c852b7a3a53fe3c0bff2a6c[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Fri Mar 2 18:59:49 2018 +0530

    Addition of DropRows* integration test (#289)
    
    This fixes#141.  It also cleanup some of the older integration tests to make naming
    more consistent.

[33mcommit 481aa5666a59e31f633ae14481524f0bfff4a3bf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Mar 2 08:23:33 2018 -0500

    Do not retry non-idempotent operations. (#288)
    
    This fixes #287.  All remaining non-idempotent operations do not
    retry.

[33mcommit 7da3658abe0454d1812eff54b0ad14e12ff1187f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Mar 1 21:08:46 2018 -0500

    Create minimal interface to admin instances. (#284)
    
    Implement InstanceAdmin::ListTables. This fixes #271.
    It is the only API in InstanceAdmin we are planning to
    implement.

[33mcommit 647ff500e232991cac2821b4151d1479309ac3ec[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Thu Mar 1 19:41:18 2018 +0530

    CreateTable and DeleteTable now only support one try (#285)
    
    CreateTable and DeleteTable now only support one try.  This fixes #268.  Also fixes #269.

[33mcommit c6d0ff25ca125cf8c480ddcb6eeba4330bbe0f7f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 28 11:04:01 2018 -0500

    Refactor code to retry RPC calls (#275)
    
    Move `TableAdmin::CallWithRetry()` to its own file, and make it
    possible to use with other stub types.  This fixes #273.

[33mcommit 1f3d5d047aa4a0737fde80ed9ec5ded1390689de[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 27 20:57:35 2018 -0500

    Remove abseil submodule and remaining usage. (#279)
    
    This fixes #255.  It removes the remaining usages of Abseil, the
    submodule, the CMake support files and references in the docs.

[33mcommit daed2014e1d8f8579aa9bdb34da81ddea7960655[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 27 14:43:42 2018 -0500

    Implement connection pooling. (#272)
    
    This fixes #204.  With this change the application can control
    the size of the pool associated with each client using
    `ClientOptions::set_connection_pool_size()`.  The default size is 4,
    which happens to match the value in Go. Note that by default the
    channels created by different clients are shared, but the application
    can override that using `ClientOptions::set_connection_pool_name()`.
    We expect that to be rarely used.

[33mcommit 44a62d0ae59d15003fb075875604c55721984a14[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 27 13:39:02 2018 -0500

    Do not use absl::optional<> (#264)
    
    This fixes #252.  Use a small class to represent optional rows.
    Thanks to @richdutton for the suggestion.  The previous code left
    "row" and "has_row" as two disconnected things.  On the other
    hand, implementing a full std::optional<> replacement is overkill.
    So we implement a small OptionalRow class to do the work.

[33mcommit 5e725658dd4d95d8d52b8a796ccf7d313667409a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 26 23:20:02 2018 -0500

    Remove usage of absl::FromChrono(). (#262)
    
    This fixes #253.

[33mcommit 2d8da0ccee399ac7e6f3dae060471c8384e5efad[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 26 22:07:24 2018 -0500

    Do not use absl::StrCat() (#265)
    
    This fixes #250.

[33mcommit 8e568af85b47d1190a5a183c84403d33ffc74f92[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 26 22:03:02 2018 -0500

    Implement a benchmark for long-running programs. (#228)
    
    This fixes #199.  It measures the performance of a long-running
    program, to ensure it does not degrade over time.

[33mcommit c38f976fd2426baa4cadf7e188ef425a62a8562a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 26 21:11:23 2018 -0500

    Fix build problems on master. (#276)
    
    The PR merged cleanly in a purely syntactic sense.  Disable the
    examples when exceptions are disabled because we want those to
    be clean code.

[33mcommit d350b08988e56eee49843a9689dfd5e6c1180656[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 26 14:32:16 2018 -0500

    Hello world example (#244)
    
    Also link the example from the Doxygen landing page, and link
    that make from the github README for the bigtable subdirectory.
    This fixes #240.

[33mcommit 0a686f23a2ce38debca4d185866331a49d6e29ae[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 23 11:41:47 2018 -0500

    After installing known-good SDK, update to latest. (#266)
    
    This fixes #224, always install a known-good version and
    upgrade from that version.  Every so often we would need
    to update what the known-good version is, but that can be
    done without disrupting the current builds.

[33mcommit bb5b64e4eeae96eb1ecc474ac604318cae9dbb2f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Feb 23 11:40:35 2018 -0500

    Add issue template. (#267)
    
    This fixes #40.

[33mcommit 7699fa26f74b5a6b12bac8fc10d40b4373e023be[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 22 21:37:21 2018 -0500

    Do not use absl::make_unique. (#261)
    
    This fixes #248.  Had to create and use `bigtable::internal::make_unique<>`
    to make `clang-tidy` happy because that is the "modern" way to reset a
    `std::unique_ptr<>`

[33mcommit b18e6685711cd86a7f72c3edb6c7854cef9e01d8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 22 12:50:03 2018 -0500

    Do not use absl::string_view (#256)
    
    This fixes #249.

[33mcommit 5682d4437d19c9cc5a7a9985562a0fa5652a73d2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 22 12:47:41 2018 -0500

    Do not use ABSL_HAVE_EXCEPTIONS. (#263)
    
    Created new macro (GOOGLE_CLOUD_CPP_HAVE_EXCEPTIONS), use that
    instead, this fixes #254.  Thanks to @mbrukman for the suggestion for the
    suggestions on how to make nested `#if/#endif` blocks more readable.

[33mcommit b92b33c82077ecd65c8606989835369171c82efc[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 21 23:24:24 2018 -0500

    Do not use absl::StrJoin() (#260)
    
    This fixes #251.

[33mcommit 8aed75484f7b68da203b6563d2f756204f136863[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 21 16:28:26 2018 -0500

    Fix build breakage. (#258)
    
    I should remember that sometimes (rarely, but sometimes) skipping
    the CI build is a bad idea even for documents.  The relative path
    for a markdown link did not work with Doxygen, that broke the
    build, fixed now.

[33mcommit 44422232b8128676979bb36e2164c241a3edb393[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 21 12:12:23 2018 -0500

    Document how we support C++ without exceptions [skip ci]. (#246)
    
    This fixes #245.

[33mcommit bc375a203ae45c06eef88e7ae460b23fbc1f9970[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 21 10:36:18 2018 -0500

    Refactor CMake code to link against gRPC. (#233)
    
    Document how we can manage the mess of CMake dependencies and
    use that documentation for gRPC and Protobuf.  This is valuable
    regardless of the decision on whether we install our libraries or
    not.

[33mcommit ca2929132b59c6e7b3de93428d13d956ba15e520[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 20 23:21:54 2018 -0500

    Enable a build with exceptions disabled. (#237)
    
    This is part of the fixes for #35.  The changes are (I think) the minimal set of changes to get a build to compile and pass the tests without exception support, but even so, it is a large PR.  There are several changes:
    
    - Introduces a configuration flag in CMake to disable exceptions.
    - It creates an automated build using that flag.
    - It changes the code to raise exceptions through a delegate function, an idea stolen from Abseil, which aborts on exceptions.  A future PR we will add APIs that return errors instead of crashing.
    - It changes the tests to use `EXPECT_DEATH()` when exceptions are disabled instead of EXPECT_THROW().
    
    Some tests are disabled when exceptions are unavailable, and mocking is complicated with `EXPECT_DEATH()` because the side-effects in the mocks are not observable (they happen in a separate process).

[33mcommit 631b5e243bcd63e094b37b73cd0dd15328dc6cd3[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Wed Feb 21 01:04:58 2018 +0530

    Changes for using googletest framework in admin_integration_test (#235)
    
    Use googletest framework in `admin_integration_test`.  Fixes #193.

[33mcommit 2ceb5fdf21dbd03a8c6b6b964572387439c463ec[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Feb 20 14:33:34 2018 -0500

    Add direct link to Doxygen documentation. (#242)
    
    This fixes #241. We can [skip ci] for this commit.

[33mcommit 18d71ab33392c40e27f2ccaafcf5a586e646db8f[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Feb 20 20:03:16 2018 +0530

    SingleRowMutation supports variadic Mutation list (#236)
    
    Implement `SingleRowMutation` constructor that takes a list of `Mutation&&` objects.  Had to remove the constructor taking an iterator range, it is not used anyway.

[33mcommit 4e3dbb62d9ece8b7b32e3d45e095f4d61d895e91[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 19 13:22:57 2018 -0500

    Implement benchmark for Apply()/ReadRow() latency. (#226)
    
    This fixes #189. Implements a benchmark to measure the latency
    of Table::Apply() and Table::ReadRow() using either production
    Cloud Bigtable, the Cloud Bigtable Emulator, or an embedded server.

[33mcommit 4d143af1099468fb7c228b0e44f2c15d8beec2f4[m
Author: hemant-qlogic <36054914+hemant-qlogic@users.noreply.github.com>
Date:   Fri Feb 16 19:47:09 2018 +0530

    Use std::chrono::duration in bigtable::ClientOptions::SetGrpclbFallbackTimeout (#231)
    
    This fixes #169.

[33mcommit 936675e7b7bdbd8c80854ca6a41d0fda60ff4a03[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Feb 14 12:04:09 2018 -0500

    Remove references to Ubuntu-17.04 it is EOL. (#229)
    
    We stopped using Ubuntu 17.04 a while ago, and moved to 17.10.
    Some of the documentation was not updated at the time.

[33mcommit 915922f3b566aec2106a0391e947133359f00242[m
Author: manish-qlogic <36055509+manish-qlogic@users.noreply.github.com>
Date:   Tue Feb 13 20:00:15 2018 +0530

    Data int test to gtest (#222)
    
    Implement data_integration_test using googletest, fixes #194.  Refactored common code shared by `data_integration_test` and `filter_integration_test` to `bigtable/client/testing`.

[33mcommit de3508edc0952cdc23d53236cc07a551dfffc9b8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 12 15:48:17 2018 -0500

    Enforce pointer/reference alignment consistency. (#217)

[33mcommit 0a2f5803df037c8b1f03d76b0597333fe18d010f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 12 10:50:30 2018 -0500

    Implement a benchmark for Table::ReadRows() (#227)
    
    This fixes #196.  Implements a benchmark to measure the throughput
    of Table::ReadRows() using either production Cloud Bigtable, the
    Cloud Bigtable Emulator, or an embedded server.

[33mcommit cf9839b808ebe8bc9d64a01c6ae8dae7cbf00691[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 8 12:58:33 2018 -0500

    A class with the common code for the benchmarks. (#215)
    
    When implementing the benchmarks described in #189, #196, and #189
    I found myself repeating the same code to create a table, populate
    the table, and then report the results.  Refactored the code to
    a class, it is not the cleanest design ever, but it serves its
    purpose.

[33mcommit eabb94b202eb65d0af28e0f64f5e9e28b4dfee97[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 8 10:22:25 2018 -0500

    Workaround breakage in Google Cloud SDK v188 (#223)
    
    The breakage is documented in the external issue tracker:
    
    https://issuetracker.google.com/issues/73044966
    
    Install v187 until we know 188 works. Add TODO to revert this change, documented also in #224.

[33mcommit d6982c448a346e21c3f4482b969dc91882bad645[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Tue Feb 6 20:06:28 2018 +0530

    Added class to randomize sleep period. (#205)
    
    * Fixed algo.
    
    * Fixed clang-format error.
    
    * Fixed type.
    
    * Addressed comment.

[33mcommit cfa651e193bfe268339bd8fe38661c9560e73be5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Feb 5 19:08:08 2018 -0500

    Do not return absl::string_view objects. (#216)
    
    They are not that useful because one has to explicitly convert
    them to std::string to use them with most C++ classes, for
    example, the std::string constructor does not accept
    absl::string_view (in C++17 it would accept std::string_view, but
    that is not the version we use).  Same problems with
    std::istringstream, or with protos.
    
    This is part of the fixes for #32.

[33mcommit bf474d62422a67e15e9194718cdf6f8f822837b9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 3 11:13:06 2018 -0500

    Update to current gRPC branch (v1.9.x) (#213)
    
    Fix #211.  It was a bug in gRPC so we move to a more recent
    version.  I tried `master` but it does not compile on Ubuntu 17.10.
    Luckily, v1.9.0 has just been released so we can use that.  Add
    a small test to reproduce the problem in the future, it takes hours
    to run, so it is not part of the CI tests.  The test might be useful
    next time we find a problem in gRPC.

[33mcommit 567e2174466535de00d7d18a6fbaad84d983cef1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Feb 3 10:14:40 2018 -0500

    Helper class to create an embedded Bigtable server. (#212)
    
    The benchmarks in #199, #196, and #189 will need to run against
    the production Bigtable server, against the Cloud Bigtable
    Emulator, or against a server running in the same process as the
    benchmark.  This class make it easy to create such an embedded
    server.
    
    Implement unit test for embedded server.  I realized late that I
    needed one, and found many bugs thanks to it.
    
    Use IPv4 in embedded server benchmarks. This is because
    Travis has a weird configuration, the default
    address for localhost is IPv6 (::1), but Travis has disabled
    local IPv6:
    
    https://github.com/travis-ci/travis-ci/issues/5200
    https://github.com/travis-ci/travis-ci/issues/4964

[33mcommit c9b9a94aa47587670a940bc7bdea8948e538e1dc[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Sat Feb 3 15:12:34 2018 +0000

    ReadRowsParser fix: move the value of single chunk cells (#214)
    
    Fix the problem with the value of a single chunk never being moved instead of copied.  Add a test that fails when the value of a single chunk is copied.

[33mcommit 0385d028823800d9722084ee445987299d5fde60[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 1 15:23:25 2018 -0500

    Helper class to configure the benchmarks. (#210)
    
    The benchmarks in #199, #196, and #189 will need to parse
    the command-line to determine the project_id, instance_id,
    the duration of the benchmark, etc. There is enough
    commonality that we can refactor that code to a class.

[33mcommit 678e22f0f76db2fdc6d0ad68108d09f5cbc9ad88[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Feb 1 10:26:22 2018 -0500

    Helper classes to initialize PRNGs. (#200)
    
    The benchmarks in #199, #196, and #189 will require good
    pseudo-random number generators (PRNGs).  Unfortunately C++11
    PRNGs are notoriously hard to initialize, and Abseil does
    not offer a solution either.  We also introduce some
    helper functions to create random strings in the benchmarks.
    
    Introduce dependency on absl::time, not strictly needed in this PR,
    but will soon, and that will need Win64 builds anyway.

[33mcommit 2e6a1c606f865bdff8b0c2031210f67e82d7ec13[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Tue Jan 30 21:45:28 2018 +0000

    Make the integration tests script friendlier to manual runs. (#203)
    
    The emulator can be launched in a separate shell and reused.
    
    Also remove a dead code test for error, the return
    code for processes launched in the background
    is assigned only after `wait`.

[33mcommit c0073687a5085decc201af4fd017ac26d40f7bb6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 30 13:05:23 2018 -0500

    Use target_include_directories() for the libraries. (#201)
    
    Modern CMake prefers target_include_directories() over
    include_directories().  The latter changes the include path
    globally, the former changes the include path for targets that
    depend on a given library.
    Also create bigtable::* aliases for the libraries as this is the
    preferred style (it seems) for exported CMake targets.
    
    Thanks to @DanielMahu for spotting the typo in one of the target names.

[33mcommit 6ffb8ca3e5c60e55b62ad9a18c54169f7a87af88[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 30 10:23:38 2018 -0500

    Use a different ClientContext for each RPC. (#202)
    
    gRPC requires a new grpc::ClientContext for each RPC, but the
    bigtable::RowReader class was reusing them.  Since this is only
    a problem on retries it was mostly a non-issue.

[33mcommit e485aaa0dac831c1e171dd4d7230471e708f3358[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 23 16:40:03 2018 -0500

    Add a user-agent prefix by default. (#198)
    
    This fixes #191.  Every grpc::Channel created by the client
    library includes the library name (`cbt-c++`) and version as
    a user-agent prefix.  The version includes the git commit (the
    short form of the SHA-1), which is captured by CMake at
    build-time.  I also captured the compiler id, compiler version,
    and relevant compiler flags because those will be useful
    elsewhere.

[33mcommit 4dbdd15f96cc504c24254b2c3f9e1ec72c581987[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 23 14:34:19 2018 -0500

    Add the AppVeyor CI badge [skip ci]. (#197)

[33mcommit 9a072e0e57f3c268c6ef6977996914d0fcca9abe[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Tue Jan 23 20:26:29 2018 +0530

    Clean Appveyor build. (#185)
    
    Fixes #23.  Introduces configuration files for AppVeyor and the supporting scripts.

[33mcommit 0518a0a32c542cc6aa598769a02989bfbe7adae5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jan 21 00:02:03 2018 -0500

    Refactor bigtable::AdminClient and bigtable::DataClient. (#170)
    
    * Refactor bigtable::AdminClient and bigtable::DataClient.
    
    There was a certain amount of duplication in these classes. This
    change fixes that.  As a side-effect, it fixes #107 too.
    
    This change does not attempt to *use* both classes the same way,
    though we should, I do not want to introduce more changes in a
    PR that basically refactors things.
    
    Use CreateDefault*Client instead of some with Default and some
    without.  Also use Default*Client instead of Simple*Client for
    one and Default*Client for the other.  Thanks to @garye for
    noticing.

[33mcommit 36194b6b60a381b80fecb16e1610d6811cafabd7[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Fri Jan 19 14:01:56 2018 +0000

    Implement RowReader::Cancel() (#186)
    
    Fixes #179.

[33mcommit 4719fe915895612d2b51fb6ac6547f1188bd7445[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 18 13:08:59 2018 -0500

    Automatically retry when the image creation fails. (#188)
    
    From time to time the build fails because we cannot create the
    corresponding Docker image.  Often this is just a time out from
    some server, and restarting the build succeeds.

[33mcommit 0ba63641840e81c71b8d074567cf979aa7211a78[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 17 21:57:44 2018 -0500

    Ubuntu Zesty (17.04) is EOL, upgrade to Artful (17.10). (#187)
    
    The builds broke because Zesty became EOL on 2018-01-13.

[33mcommit a78d75be1cb7b1a63c1988d78839395652849531[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 17 04:26:55 2018 -0500

    Implement Table::ReadRow() (#182)
    
    This fixes #29.

[33mcommit 6f782d03f5915c0234622ecfedc345712078577e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 16 12:50:30 2018 -0500

    Simplify integration tests, use Table::ReadRows(). (#181)

[33mcommit b62240466df7252e132e9a26d4b8f14a8e7597af[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Tue Jan 16 13:26:17 2018 +0000

    Replace std::next with an increment (#183)

[33mcommit d309ce7e40ddcb6a2c59c592d9304479c02deddf[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 15 17:55:13 2018 -0500

    Fix broken build with installed gRPC. (#180)
    
    Mainly we cannot use headers that are not installed by gRPC, so I removed their use in a couple of tests.  I also discovered that Fedora:27 is ongoing changes to the clang-format version they have during this weekend, so half the mirrors get clang-format-4.0 and the other half get clang-format-5.0 which results in broken builds because the formatting is different in a few files.
    
    And finally I changed the build matrix to prevent these problems in the future.

[33mcommit ceae0a8e30309825e125b0b58fcf33a979e65206[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 15 11:28:30 2018 -0500

    Get the code to compile with Microsoft Visual Studio 2017. (#178)
    
    Get the code to compile on Windows.  Incidentally this fixes #100.  Lots of warnings in Abseil
    and Protobuf code that I am chosing not to silence.

[33mcommit 69e7cc70b8189af68d3dad1581f87fe320308937[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Mon Jan 15 10:24:13 2018 +0000

    Implement Table::ReadRows() (#167)
    
    The call returns a RowReader wrapper around the gRPC stream, that can also restart the call with updated arguments. (fixes #32)

[33mcommit d08e86f3da29a4a294fda42cef3602dd749fe9e2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jan 14 09:18:33 2018 -0500

    Complete integration tests for bigtable::Filter (#173)
    
    This fixes #150, it completes the integration tests for bigtable::Filter::*.
    It also fixes #84.  It documents how filters work win invalid inputs.

[33mcommit d441d1e329386cd5f7796482609b484197075af7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jan 14 09:12:42 2018 -0500

    Use Google Cloud SDK to get the Cloud Bigtable CLI tool and emulator (#168)
    
    This fixes #166.  It uses the Google Cloud SDK to get a stable
    version of cbt (Google Cloud BIgtable Command Line Tool)
    and the Google Cloud Bigtable Emulator.

[33mcommit b7ef4f4e943e0006f1062e3f5daddc99337538ab[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 11 08:57:27 2018 -0500

    Implement bigtable::RowSet::Intersect() (#176)
    
    This member function is needed to implement bigtable::Table::ReadRows(), it is therefore part of #32.

[33mcommit d3938fd38a7e6d7af41d50c97e28b18fd472c903[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 9 12:47:29 2018 -0500

    Fix code coverage upload after #138. (#174)

[33mcommit f78b72a0f904fe2e8245cb53be332a32a34347da[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 8 17:42:16 2018 -0500

    Implement bigtable::RowSet (#165)
    
    Implement RowSet class and test.  This fixes #31.

[33mcommit 522fd4dc19842e52baf1b811901d43044cb27ad3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Jan 8 17:25:57 2018 -0500

    Fix the name of the robot account used to commit gh-pages. (#175)
    
    Does not matter much, but there is a 'nobody' user in github,
    looks better to use the actual robot account we use for these
    commits.

[33mcommit 3b10ade07d10dcf3f47f422171057edf46c13b87[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Mon Jan 8 08:56:31 2018 -0500

    Add a comment to explain how PrintTo() is used (#172)
    
    Although this function is not used in this file directly, it's not dead code:
    it's indirectly used by GoogleTest to make human-readable output, so it should
    not be removed. [skip ci]
    
    Context:
    https://github.com/GoogleCloudPlatform/google-cloud-cpp/pull/150#discussion_r160048494

[33mcommit 1b61dca2231edc0e7eadceb2776df6f6d4721323[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Jan 7 08:48:17 2018 -0500

    Implement integration tests for bigtable::Filter::* functions. (#150)
    
    Implement integration tests for most filters.  Those still pending have TODOs to track them.  Also filled out the comments in each filter, making progress towards #84.

[33mcommit a71e95d9ebfdedfef405b7a83bda50015f942fa2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Jan 5 14:13:46 2018 -0500

    Implement bigtable::RowRange (#163)
    
    This is part of the fixes for #31.  Great comments by @mbrukman and @DanieMahu made me revisit the whole thing.  Must nicer now, thanks!

[33mcommit 6c9331ef1acc95b3d0f02faf2f8aeaea58579cb6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Jan 4 20:56:33 2018 -0500

    Make the bigtable::ClientAdmin and bigtable::DataAdmin interfaces thread-safe (#159)
    
    Return std::shared_ptr<> from `bigtable::DataClient::Stub()` and from `bigtable::AdminClient::Stub()`.  This is part of the fixes for #101.

[33mcommit 4718a0c8e263230b6d8b37eb2235cd622fde3712[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Jan 3 10:28:28 2018 -0500

    Point Travis badge to results from master branch. (#162)
    
    We do not need all the branches to build to declare success.  We still need to build all the branches in Travis, because (a) some folks develop on a branch, and (b) some folks use Travis to build their forks.

[33mcommit e2984d351741f15f44d454bcd4e9e430813fb8c4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Jan 2 13:38:59 2018 -0500

    Fix flaky test for bigtable::LimitedTimeRetryPolicy. (#161)
    
    Timing tests are awful, but necessary.

[33mcommit e4b9f5f9bceb9e4c69eebd5ac1711e3fd05bf132[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Dec 30 11:49:12 2017 -0500

    Separate bigtable::DataClient and bigtable::Table. (#158)
    
    * Separate bigtable::DataClient and bigtable::Table.
    
    This is part of the changes for #101.  It moves the classes to
    their own files.  More changes are coming to cleanup the
    code duplication and fix the thread safety issue.

[33mcommit d344a0bde366d1d8387e5d10329c78e8aa379069[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Dec 30 10:11:49 2017 -0500

    Fix document upload after #138. (#154)
    
    The documents are generated inside a docker image, in a previous
    change (#138), the path for the generated docs was changed. This
    script should have been changed at the same time.
    
    While testing I found out that there was another tiny problem, the
    documents were never uploaded because the change detection was
    broken.  Fix that too <blush>.

[33mcommit 48c92af3d118b3153c99fd0225434d438982bbb4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 29 21:34:01 2017 -0500

    Enable scan build (#157)
    
    Run Clang static analyzer against installed gRPC.
    
    Compiling with the Clang static analyzer is fairly slow, and
    can take longer than the maximum time allowed by Travis if gRPC
    is part of the build.  In this change we compile and install
    gRPC first, and then compile the code against it.
    
    That seems to be the only way to stop cmake from using the static
    analyzer everywhere.  And frankly it is a good thing that we test
    the "package" version of gRPC too.
    
    I think this could be a fix for #10, but I will let @mbrukman decide.

[33mcommit 579d2fb5e5087540ce4b1a6969fbf83c8df6ad78[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 28 16:39:35 2017 -0500

    Rename bigtable::ClientInterface to bigtable::DataClient. (#155)
    
    This is part of the fixes for #101.  It makes the name more
    consistent with bigtable::AdminClient.  More changes coming soon.

[33mcommit bfdd4dc254f24ae553ce9a2f26cdee51100285fd[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 28 15:01:19 2017 -0500

    Document the order of cells within a row. (#146)
    
    Such as it is (the order is not guaranteed for column families).
    This fixes #82.

[33mcommit 745428e2c272336024305e93be817295e28c2372[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 28 14:00:43 2017 -0500

    Rename bigtable::detail:: to bigtable::internal:: (#156)
    
    This fixes #36.  The files are renamed too, and new README.md
    files provide warning to any user that chooses to use the
    contents of the internal/ directory.

[33mcommit 38396fe454da16199da17539db94a4fabaded41f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 27 22:58:23 2017 -0500

    Complete implementation of bigtable::TableAdmin (#142)
    
    This fixes #79.  It completes the implementation of the `bigtable::TableAdmin` class, including unit and integration tests.

[33mcommit ef08ad42476dcc15e2f746dcd67b56758b210035[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 27 21:54:42 2017 -0500

    Break bigtable::Client <-> bigable::Table dependency cycle (#140)
    
    Break dependency cycle between bigtable::Client and bigtable::Table.
    
    This is part of the fixes for #101.  Please read the issue for a
    full description of where these changes are headed, in this PR
    we simply break a dependency cycle to be able to separate the
    classes into different files.

[33mcommit 61194aa97212a30d91dc8a8fc10094b5fb827961[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 27 14:55:10 2017 -0500

    Fix implementation of Table::BulkApply() (#149)
    
    BulkApply was not setting the table name in the RPC request.  Fixed that, created integration test, and improved unit test to reproduce the problem.

[33mcommit 655d91ff625f1030e3ddb79308c7f5d8ffebacd4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 26 17:28:30 2017 -0500

    Fix formatting script and use it on missed files. (#147)
    
    The formatting script was missing the header files, fixed the
    script and use clang-format on the missed files.

[33mcommit f82383d1ad4f0a5e47cc38d498b1b9ababde5e40[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Sat Dec 23 21:52:43 2017 +0000

    Add ReadRowsParser class (#129)
    
    Implements the ReadRowsParser that converts CellChunk protos into
    Row objects.
    
    Validated by running the automatically converted acceptance tests.
    The converter script is included.
    
    The parser directly takes CellChunks to simplify its logic. The grouping of
    several chunks in a response will be handled separately in the ReadStream.

[33mcommit b46ba1aff72ee5bcf9f90822001461f7c8dedfe4[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 22 22:39:52 2017 -0500

    Separate Docker image creation vs. build. (#138)
    
    This fixes #49.  As a side effect, we can now measure
    how long each phase of the build takes.  We can use
    that information to drive future build optimizations,
    such as caching results in Travis.

[33mcommit ba75e7139769239925b516e4b291d4a2ec3f1b31[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 22 17:07:39 2017 -0500

    Refactor code for simple RPCs (#139)
    
    This is part of the fixes for #79 .  With this change we introduce a generic function to retry simple RPCs, and use it to implement CreateTable() and GetTable().

[33mcommit ab5268804e124dc7c6af655b56653323d7441f97[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 22 12:28:08 2017 -0500

    Implement TableAdmin::GetTable() member function. (#131)

[33mcommit cecde389c4990006c393e9bb270327a05bc86df5[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 22 12:22:41 2017 -0500

    Add configuration to run scan-build inside Docker. (#134)
    
    This allows us to run the Clang static analyzer locally, using the Docker scripts that we normally run on Travis. The build is not enabled on Travis because sometimes it exceeds the 50 minute limit that Travis has for builds.
    
    This is part of the fixes for #10 .

[33mcommit 313fcc756d97d686a916b742b8f8c17e591edf18[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 22 11:59:06 2017 -0500

    Refactor code coverage support. (#133)
    
    This is in case (a) we ever have a second subdirectory like
    `bigtable/`, and (b) because it makes the bigtable/CMakeLists.txt
    more readable.

[33mcommit d4c51b23cef79168f77ecb3f8d2c16b6c00ab77b[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 22 09:58:59 2017 -0500

    Fix #include guards. (#135)

[33mcommit 701602715e51b2fd6fc3ed277308e29efb7c567a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 21 23:51:33 2017 -0500

    Add more instructions on how to compile locally [skip ci] (#128)
    
    Add instructions on how to run the same builds that Travis does locally, how to configure the build, and moved formatting instructions from README.md to CONTRIBUTING.md.

[33mcommit 78dfd41192a2e1cc4fd226a0acf391da04375f69[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Dec 21 17:48:23 2017 -0500

    Enable JAVADOC_AUTOBRIEF [skip ci] (#132)
    
    With this option the first line of a Javadoc style comment (which
    is the style we are using), is interpreted as the brief description
    of the class / function / class template / whatever.

[33mcommit a5856f19b899c2e24bc77070124f7fde4598bbec[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Thu Dec 21 12:55:52 2017 +0000

    Row class (#102)
    
    Add the Row class.  This is part of the fixes for #32.

[33mcommit 22938c045b3b6b890b1eb879955abe97eddeb1e1[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Wed Dec 20 23:29:29 2017 -0500

    Use the latest Travis CI image. (#130)
    
    The format `dist: trusty` is deprecated, and the new hotness is either
    `group: travis_lts` or `group: travis_latest`. This change chooses the latter to
    live on the bleeding edge; we run our tests in containers anyway.
    
    More details and background in these blog posts:
    
    * https://blog.travis-ci.com/2017-12-01-new-update-schedule-for-linux-build-images
    * https://blog.travis-ci.com/2017-12-12-new-trusty-images-q4-launch

[33mcommit 255497cf8f3ed94674f11a4e965d4876d989fe0f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 20 21:54:45 2017 -0500

    Implement CreateTable() for the admin client (#117)
    
    This is part of the fixes for #79.  Introduce supporting classes and a member function to wrap `CreateTable()`.

[33mcommit 62cc84185d701313a722d32a9fa438e9eb0f06e3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 20 17:27:51 2017 -0500

    Refactor testing subdirectory (#125)
    
    This fixes #67.

[33mcommit 92277aa4d9beb32d993adca946c43e8c37fbd4c7[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Thu Dec 21 02:32:37 2017 +0530

    Added setters for Channel Arguments. (#96)
    
    * Added setters for Channel Arguments.
    
    * Added Unit tests for setters
    
    * Type casted int to size_t for comparision with num_args of args list.
    
    * Added arg type test for testing correct setter is called.
    
    * Minor changes.
    
    * Changed C-Style comments to C++ style and remove SHA-1 from URL.
    
    * Minor changes.
    
    * Changed EXPECT_EQ to ASSERT_EQ for preventing seg_fault and minor comment changes.
    
    * Removed inline keyword from member functions.
    
    * Fixed send message unit.

[33mcommit d88179d4f46ba28622998c2e8d18faf1b054cbd9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 20 11:55:37 2017 -0500

    Use the gmock library already compiled for abseil. (#124)
    
    The IncludeAbseil.cmake module already has a definition for gmock,
    reuse it in the bigtable client tests.

[33mcommit 4168ff78612d17d404887861c612021bcfa60163[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 23:06:10 2017 -0500

    Ensure all TODO entries point to a bug. (#123)
    
    In some cases simply fix the issue, it was easier than creating
    the bug.  This fixes #41.

[33mcommit ad7d834c11c660d019d4d5e862390964c368c0a2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 22:25:44 2017 -0500

    Implement Filter::as_proto_move(). (#120)
    
    This is a more efficient version of Filter::as_proto() to use
    when passing the proto to a RPC request.

[33mcommit 3bbf36bce49d11b3d630e6d7bd48ac481d91517e[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 15:42:38 2017 -0500

    Speedup Travis builds. (#116)
    
    This is not a huge speedup, but noticeable.  Right now we are
    building all the grpc, abseil, and cctz targets.  With this change
    only the targets that we need for our dependencies are built.
    I think we get around 30% faster builds with this.

[33mcommit c224b48bb2f2ba7893bf984fabbf0a4b7df52876[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 15:18:39 2017 -0500

    Use default move assignment and move constructor. (#115)
    
    With the new gRPC introduced in #86, we got protobuf 3.4.x which
    also has move constructor and assignment for generated protos.
    That means we can use the default move constructor in the Filter
    class.

[33mcommit 17bc6097c55b4c2182a9f53f60d515f2574e1605[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 14:10:32 2017 -0500

    Remove unused file. (#114)
    
    We will need to restore this file (or a similar one), when
    the Table::ReadRows() is implemented.

[33mcommit c6331001ed1cf0fd82f3fed480e1eae55474c4a7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 13:35:35 2017 -0500

    Improve documentation around std::chrono::duration<> [skip ci] (#112)

[33mcommit 67cd5f32a473774d7eecb54e4dac5e2fb6c349c9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 13:05:24 2017 -0500

    Fix Doxygen breakage. (#113)

[33mcommit 927c857698424a84438852838bc20b916ae5b157[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 11:35:30 2017 -0500

    Cleanup ... comments. (#110)
    
    This fixes #50.

[33mcommit 966b7e3964cc00c9e56bb5ebc8db1a6ef5691121[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 11:31:39 2017 -0500

    Implement wrappers for GcRule. (#106)
    
    This is part of the fixes for #79.

[33mcommit 2840cb7cfca8cc79cee3d4bdd45b0a3682a4f2b1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 19 00:09:30 2017 -0500

    Implement the compound filters. (#104)
    
    This completes the fixes for #30.  It implements the
    remaining filters, such as Union, Interleave, Condition, and Sink.

[33mcommit c19f9cba41848131484fe7a4721140a02788ddb1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 18 17:49:47 2017 -0500

    Start work on a minimal admin client. (#93)
    
    Create a minimal admin client, this is part of the fixes for #79.

[33mcommit 5a43f75fdd65506b17db4521eb04a1cad2cb153d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Dec 17 22:27:44 2017 -0500

    Additional functions to create filters. (#89)
    
    * Additional functions to create filters.
    
    This is another step to fix #30.  It introduces more
    functions to create filters, though these are less
    common ones.

[33mcommit e8726e2838b02ce76ae61e2413d1dda98d4fdf8d[m
Author: Daniel <DanielMahu@users.noreply.github.com>
Date:   Wed Dec 13 12:59:23 2017 -0500

    Add the Cell class (#95)
    
    This is part of the fixes for #32 it implements the main object returned when iterating over a row.

[33mcommit 7ab1cdc6f5a174e5914d856dfa6c97087ac1e5ce[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 12 11:09:54 2017 -0500

    Check coding style first if enabled. (#94)
    
    No sense in waiting until the end of the build to report errors
    that can be reported earlier.

[33mcommit c272e804331ed9ef553dbfb3c99f5957f5f69a6c[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 11 18:12:49 2017 -0500

    Fix clang-tidy readability error. (#90)
    
    Name of arguments should be the same in the header and .cc file.
    Went undetected because the last build for #73 was done before
    the other PR (#87) introducing the clang-tidy build was merged.

[33mcommit 0aa4f612c50efb640e70ba8aecd1ba560c626ef2[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 11 16:12:41 2017 -0500

    Implement BulkApply() (#73)
    
    This fixes #20.

[33mcommit 2bc258522799b8809a6534e04258ef9f6a26fc39[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Mon Dec 11 15:42:26 2017 -0500

    Implement functions to create simple filters (#83)
    
    Implement the first round of functions to create filters.  Part of the fixes for #30.

[33mcommit 7566672f479921971ea5ef69f0afd9b5b61b65ee[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Dec 10 15:25:50 2017 -0500

    Enable a CentOS:7 build. (#88)
    
    This fixes #42, CentOS 7 support turns out to be not that hard, so
    there is every reason to make it one of our target platforms.

[33mcommit 372b19e0e22b5d8b06dc3d88ae5af1471e7f6881[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Dec 10 09:09:36 2017 -0500

    Create a build with clang-tidy enabled. (#87)
    
    This fixes #22.  The clang-tidy build needs cmake >= 3.6 run at all, and cmake >= 3.8 to get the exit status used by the cmake builds.  Fedora 27 has all the right tools pre-built, so we use it there.  Also introduced a clang-tidy configuration that everybody can use in their own builds, and we can fine tune over time.

[33mcommit fbc267fe9bf88b2ecfc35f783d9c4d0bf4c2aae9[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Dec 9 20:57:06 2017 -0500

    Update third_party/grpc to a recent commit in master. (#86)
    
    We need a newer version of grpc to compile with clang-3.9, which
    is sort of a dependency to build with clang-tidy and scan-build.
    "Sort of" because it is much easier to do this than the
    alternatives.
    
    Also because "Live at Head" is a thing apparently.

[33mcommit 5c1909c723549f47983631d09b4e972b2eea07e3[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 8 22:34:10 2017 -0500

    Indent all CMake files to 4 spaces. (#80)
    
    We were not consistent and with the EditorConfig submitted we
    have a fighting chance.

[33mcommit c00f0bcf699fe783f8d0837373d660d59306abac[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 8 22:33:08 2017 -0500

    Fix test message [skip ci] (#81)
    
    Leftover review comment from PR #74.

[33mcommit 67fc1ffe08abd8c9c926e03eeb0295023e30b01f[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Dec 6 23:20:37 2017 -0500

    Implement an integration test for Table::Apply() (#74)
    
    This fixes #37.  It implements a simple integration test (will grow as we implement more APIs), and runs it as part of the CI builds.
    
    Thanks to @mbrukman for the detailed review, much better now.

[33mcommit a44cabf786b4087a038224fc0c0b6dba3204799a[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Wed Dec 6 22:21:26 2017 -0500

    Added EditorConfig support. [skip ci] (#78)
    
    Fixes #68.

[33mcommit 6f3a8837d5062a9098e22e1fc2716b22528cf37d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 5 19:31:04 2017 -0500

    Generate Doxygen docs (#69)
    
    Create scripts to generate and upload documentation.
    
    This is part of the fixes for #18.  It is incomplete because it
    does not generate the documentation in the format used by other
    google-cloud-* repositories.  We will need to convert the Doxygen
    output into the format we use in those other repositories (gulp?).
    
    I think this partial implementation is still useful because (a) it
    will detect documentation errors, and (b) it will post to my fork,
    where at least we can see it it looks right.
    
    The upload to github.io is only enabled if GH_TOKEN is set, we
    should consult with the owners of GoogleCloudPlatform.github.io
    before posting the docs there.

[33mcommit d1d6b8ee6c314d3045914797a5a2bc16046630a0[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Tue Dec 5 17:49:04 2017 -0500

    Introduce policy to decide if mutations are idempotent. (#64)
    
    Introduce policy to decide if mutations are idempotent.
    
    Mutations that are not idempotent are not retried, regardless of whether we have time to do so.  Introduced both a safe policy for the common case, and a policy to retry all mutations for the less common, but useful case.
    
    Many thanks to the reviewers, @mbrukman and @garye.
    
    This fixes #13.

[33mcommit de0a8c097b73d14a6b584386166eb6416158c1c7[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sat Dec 2 14:09:50 2017 -0500

    Fix sanitizer builds and test them. (#65)
    
    I first intentionally enabled tests that force every type of sanitizer error; [this build](https://travis-ci.org/coryan/google-cloud-cpp/builds/310318481) shows the results of running that version. I then disabled those tests prior to committing this change.
    
    We can enable them in the future when we change the scripts; to enable them when running locally, use:
    
    ```console
    $ cmake -DFORCE_SANITIZER_ERRORS=yes
    ```
    
    We disable the MemorySanitizer tests because they require all
    libraries (including libstdc++ or libc++) to be compiled with
    the sanitizer turned on.  See #62 for details.
    
    Also fixed a number of bugs in the scripts that I somehow missed earlier.
    
    This fixes #9 (again), because the first PR was broken.

[33mcommit e5c2e33ddfd31683551b5b313aed51f03c9df313[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 1 15:36:12 2017 -0500

    Configure the client context using the RPC policies. (#63)
    
    This fixes #21.

[33mcommit 256fc9918dc7463738ed3bb67f01516250d198a1[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 1 14:43:11 2017 -0500

    Separate rpc_retry_policy and rpc_backoff_policy. (#26)
    
    The RPCRetryPolicy was mixing decisions about whether to retry
    an RPC call and how long to wait before the call.  Break it into
    two separate policies.
    
    This fixes #14.

[33mcommit 0d6c9207e147b62ef9be6641ce89d475f51c9d6d[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Dec 1 10:51:54 2017 -0500

    Disable macOS builds on pull requests. (#61)
    
    Disable macOS builds on PRs; fixes #60.

[33mcommit 9e44e150efeed689e939ae19934fcacddf60022a[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 30 22:36:29 2017 -0500

    Implement sanitizer builds. (#54)
    
    This fixes #9.  The environment variables
    SANITIZE_ADDRESS, SANITIZE_MEMORY, SANITIZE_UNDEFINED,
    SANITIZE_THREAD, and SANITIZE_LEAKS can be set in the
    CI builds to enable the corresponding sanitizer.
    
    The build script examines the output of the tests searching
    for sanitizer errors, and the CI build fails if any is found.
    
    Developers can use:
    
    ```console
    $ CXX=clang++ CC=clang cmake -DSANITIZE_ADDRESS=ON
    ```
    
    to manually enable the sanitizer in their build.

[33mcommit 595a60b3a54623c771698d66d5d6e441e8f35b0f[m
Author: Pratham <pandeypratham8@gmail.com>
Date:   Fri Dec 1 08:07:38 2017 +0530

    Refactored the code for ClientOptions Class (#47)
    
    Refactored the code for ClientOptions class to its own file.

[33mcommit aeed85058998ed44089c9082d13aa10641fafbc8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Thu Nov 30 11:50:09 2017 -0500

    Add a build to check code formatting. (#51)
    
    Configure one of the builds to run clang-format on all the code
    and break if the formatting is wrong.  That will force us to
    follow the format in all our code.
    
    The implementation is a bit wonky because of #49, but works.
    Also fixed a few formatting errors so the build would pass.
    
    This fixes #17.

[33mcommit eeefeb1bf424c7eeb5f53cc04ad89d684aa36461[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Wed Nov 29 15:02:26 2017 -0500

    Create code coverage build. (#48)
    
    This fixes #11.

[33mcommit d690e40e3d5d65540f2c8264e0ed65a780a74521[m
Merge: 0234df5f1 28d7b2c7e
Author: Misha Brukman <mbrukman@google.com>
Date:   Tue Nov 28 19:31:26 2017 -0500

    Merge pull request #28 from coryan/fix-issue-27
    
    Disable caching of docker images for CI builds.

[33mcommit 28d7b2c7e56eac50a08f3043f1cd0d56e35a03d1[m
Author: Carlos O'Ryan <coryan@google.com>
Date:   Sun Nov 26 22:31:04 2017 -0800

    Disable caching of docker images for CI builds.
    
    Potentially faster since the images cached are basically just
    downloading some packages.  The time to download the packages is
    comparable (or shorter!) than uploading + downloading the image
    cache.

[33mcommit 0234df5f11b6a625466036981ce5538841f18a1e[m
Merge: bd7e4714f 9bd0c6e5a
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Nov 26 12:38:30 2017 -0800

    Merge pull request #25 from mbrukman/ci-script-cleanup
    
    Cleanups for CI shell scripts.

[33mcommit 9bd0c6e5ac1cd4fb4cfd5ae2f4e7055e4573e055[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Sun Nov 26 13:31:37 2017 -0500

    Cleanups for CI shell scripts.
    
    * Use `set -eu` rather than just `set -e`; this allows dropping all the trailing
      `?` from env variable lookups with the same result (exit with error if unset),
      while being more readable, and it avoids user error from forgetting to add it
    * Add double-quoting around variable names; recommended in
      https://google.github.io/styleguide/shell.xml#Quoting
    * `echo ""` is equivalent to `echo` so that lets us simplify code;
      `diff <(echo) <(echo "")` returns empty and exits with status code 0
    * Clarify messaging to users when we're exiting scripts with specific messages,
      rather than "exiting", since the build log on Travis will actually continue
      (we're just skipping a specific step that doesn't apply to that platform)
    * Added blank lines between the `#!/bin/bash` line and the license for
      readability

[33mcommit bd7e4714f8766f9e776374648da777a366275cb8[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Sun Nov 26 09:59:26 2017 -0800

    Create initial build matrix. (#8)
    
    Build on Mac OS, Ubuntu 17.04, Ubuntu 14.04 and Fedora 27.

[33mcommit 7041760ec4bf940461369dd5a7d529e13d91b42f[m
Merge: 003a381d7 a0eb4f1c0
Author: Misha Brukman <mbrukman@google.com>
Date:   Fri Nov 24 17:57:30 2017 -0500

    Merge pull request #7 from mbrukman/update-readme-build-instructions
    
    Cleanup and update READMEs. [skip ci]

[33mcommit a0eb4f1c0896154a41f61f60104077efa80fbe5f[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Fri Nov 24 16:52:32 2017 -0500

    Cleanup and update READMEs. [skip ci]
    
    * Move build steps to top-level README as it's not Bigtable-specific
    * Fix title and library to include "Google"
    * Minor wording cleanups/updates

[33mcommit 003a381d797a563eaf807983424dc8241f782e74[m
Merge: 40f4d0458 da8ce21be
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 24 14:28:04 2017 -0800

    Merge pull request #6 from mbrukman/travis-ci-badge
    
    Added Travis CI build status badge. [skip ci]

[33mcommit da8ce21be3dc71bb179ce73790fa08998773f25b[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Fri Nov 24 16:34:36 2017 -0500

    Added Travis CI build status badge. [skip ci]

[33mcommit 40f4d0458a16865cf0105808025f09dde20ab63f[m
Merge: 73d7cd5ef f95918401
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 24 12:56:12 2017 -0800

    Merge pull request #5 from mbrukman/travis-ci
    
    Add basic Travis CI config for build & test.

[33mcommit f959184018568b6be264ccdbcfc9ed6b96d3bc5a[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Fri Nov 24 12:39:35 2017 -0500

    Add basic Travis CI config for build & test.
    
    Fixes issue #1.

[33mcommit 73d7cd5efef14f8f8462836f8edc16b49727cba6[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 24 09:34:02 2017 -0800

    Adopt the Contributor Covenant 1.2.0 code of conduct. (#2)
    
    Adopt the Contributor Covenant 1.2.0 code of conduct.

[33mcommit 073e07c2ddcd1d5ea5f5ebd5ec36ec083eca4e44[m
Author: Carlos O'Ryan <coryan@users.noreply.github.com>
Date:   Fri Nov 24 09:25:31 2017 -0800

    Add necessary submodules. (#3)
    
    Add necessary submodules and third_party/ subdirectories.
    
    This is needed to get the submodules to work.

[33mcommit 627c030a8b977bcbda6e63a501005d0e9c628bf8[m
Author: Misha Brukman <mbrukman@google.com>
Date:   Thu Nov 23 19:51:32 2017 -0500

    Initial commit.
